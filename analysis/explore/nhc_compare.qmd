---
title: "explore_nhc_compare"
author: "David Roberts"
format: html
editor: visual

project:
  execute-dir: project
---

## Purpose

Assess data quality of nursing home compare data. Determine relationship between data collection time periods and processing dates.

Analyze file created by `transform/nhc_compare.py`

## Imports

```{r}
library(dplyr)
library(ggplot2)
library(here)
```

## Load Data

```{r}
library(readr)
provider_info_tmp <- read_delim(here("data", "interim", "provider_info_tmp.csv"), 
     delim = "|", escape_double = FALSE, trim_ws = TRUE)
unique(provider_info_tmp$processing_date)
provider_info_tmp$processing_date[provider_info_tmp$processing_date == "10/1/2019"] <- "2019-10-01"
provider_info_tmp$processing_date <- as.Date(provider_info_tmp$processing_date)
```

County Level Missingness

```{r}
count(provider_info_tmp)
# guam and virgin islands
count(filter(provider_info_tmp, SSA_Code == "Unknown"))

# 758 obs without FIPS mapping... Dropping
count(filter(provider_info_tmp, StateAbbrev == "Unknown"))

provider_info_tmp <- filter(provider_info_tmp, StateAbbrev != "Unknown")
```

## Descriptive Stats

```{r}
library(gtsummary)
select(provider_info_tmp, 
      ownership_type:provider_resides_in_hospital,
      provider_changed_ownership_in_last_12_months:adjusted_total_nurse_staffing_hours_per_resident_per_day) %>% tbl_summary()


# what is causing missingness, is it concentrated in one file?
# spread across all files...
unique(provider_info_tmp$processing_date[
  is.na(provider_info_tmp$adjusted_total_nurse_staffing_hours_per_resident_per_day)
  ])
```

```{r}
# TODO remove extra row for 2022-08
data.frame(table(provider_info_tmp$processing_date))
```

## Time Lag of Observations

How often was the data collected in the historical time period? With what time lag? Is it the same thru 2017? Does adjustment matter? How does it relate to gross?

```{r}
provider_info_tmp %>%
    group_by(provider_info_tmp$processing_date) %>%
    summarize(adj_total_hrs_per_day = median(adjusted_total_nurse_staffing_hours_per_resident_per_day, na.rm=TRUE))
```

```{r}
# inspect data... for single snf's
single_snf <- filter(provider_info_tmp, federal_provider_number == "396001")
```

-   015009: 2 series where observation is the same for 5 months. Missing data period in 2021
-   396001: 2017-09 to 2018-03, 6 month period with no change. Some missing data in 2019...
-   015023: 2017-07 to 2018-03, 9 month series with no change. 3 month missing data period with following footnotes: """ 6 - This facility didn't submit staffing data, or submitted data that didn't meet the criteria required to calculate a staffing measure. 12 - This facility either didn't submit staffing data, has reported a high number of days without a registered nurse onsite, or submitted data that couldn't be verified through an audit. """

```{r}
# in order to determine data collection months, determine if there is a change since previous file...
lagged_data <- select(provider_info_tmp, 
                 c(
                   "federal_provider_number", 
                   "processing_date", 
                   "reported_total_nurse_staffing_hours_per_resident_per_day"
                   )) %>%
  group_by(federal_provider_number) %>%
  dplyr::mutate(lag1 = lag(reported_total_nurse_staffing_hours_per_resident_per_day, n = 1, default = NA)) %>% 
  as.data.frame()


lagged_data <- lagged_data %>% dplyr::mutate(
    change= (ifelse(lag1 != reported_total_nurse_staffing_hours_per_resident_per_day, 1, 0)
    ))

View(filter(lagged_data, federal_provider_number == "396001"))

by_date <- lagged_data %>%
  group_by(processing_date) %>%
  summarize(pct_with_change = round(mean(change, na.rm=TRUE), 2))

plt <- ggplot(by_date, mapping = aes(x=processing_date, y=pct_with_change)) + geom_point()
plt

filter(by_date, pct_with_change == 1)$processing_date
```

### Conclusion

April processing date reports final quarter of the end of each year. Should pull this observation across all months for consistency. Reporting Period for Nursing Home Staffing Level Measures: \[10/1/2021, 12/31/2021\] Processing Date = 20220401

```{r}
filter_dates = as.Date(c("2018-04-01", "2019-04-01", "2020-04-01", "2021-04-01", "2022-04-01"))
filtered_data <- filter(provider_info_tmp, processing_date %in% filter_dates) %>%   mutate(collection_yr=(as.integer(format(processing_date, format="%Y"))) - 1)

ggplot(data = filtered_data, aes(x = collection_yr)) + geom_bar()
```

## Trending Staffing Ratios

-   Covid - increased hours per resident likely indicates same staff, with fewer residents.

```{r}
ggplot(data = filtered_data, aes(factor(collection_yr), reported_total_nurse_staffing_hours_per_resident_per_day)) + geom_violin()

ggplot(data = filtered_data, aes(factor(collection_yr), adjusted_total_nurse_staffing_hours_per_resident_per_day)) + geom_violin()

select(filtered_data,
      c("collection_yr", "reported_total_nurse_staffing_hours_per_resident_per_day","adjusted_total_nurse_staffing_hours_per_resident_per_day","case-mix_total_nurse_staffing_hours_per_resident_per_day","average_number_of_residents_per_day","provider_changed_ownership_in_last_12_months")) %>% rename(yr = collection_yr, r_staff_prpd = reported_total_nurse_staffing_hours_per_resident_per_day, a_staff_prpd = adjusted_total_nurse_staffing_hours_per_resident_per_day, case_mix = `case-mix_total_nurse_staffing_hours_per_resident_per_day`, avg_rpd = average_number_of_residents_per_day, chow = provider_changed_ownership_in_last_12_months) %>% 
  tbl_summary(by=yr)
```

## Export Facility Level

```{r}
snf_level_data <- filtered_data
rm(filtered_data)
save(snf_level_data, file=here("data", "interim", "snf_provider_info.Rda"))
```

## Aggregate To County Level

Since payer mix (VBC penetration) is not observed at the facility level and it is the main explanatory variable of interest, the dependent variables should be aggregated to the same level (county). Advisor indicated that variables from high level dimensions are often included as fixed effects, but not for the primary variable of interest. As an example, census tract level social determinants of health are often projected to the individual level. However, these are typically used as controls, rather than the primary variable of interest.

```{r}
load(here("data", "interim", "snf_provider_info.Rda"))
```

```{r}
library(tidyr)
group_cols <- c("FIPS_Code", "StateAbbrev", "StdCountyName", "collection_yr")

snf_level_data <- snf_level_data %>% rename(case_mix_total_nurse_prpd = `case-mix_total_nurse_staffing_hours_per_resident_per_day`,
case_mix_cna_prpd = `case-mix_nurse_aide_staffing_hours_per_resident_per_day`,
chow = provider_changed_ownership_in_last_12_months)
county_staffing <- snf_level_data %>%
  group_by(across(all_of(group_cols))) %>%
  summarize(
    row_cnt = n(),
    cerfied_beds = sum(number_of_certified_beds, na.rm=TRUE),
    sum_avg_daily_residents = sum(average_number_of_residents_per_day, na.rm=TRUE),
    mean_cna_reported_hprd = weighted.mean(reported_nurse_aide_staffing_hours_per_resident_per_day, average_number_of_residents_per_day, na.rm=TRUE),
    mean_lpn_reported_hprd = weighted.mean(reported_lpn_staffing_hours_per_resident_per_day, average_number_of_residents_per_day, na.rm=TRUE),
    mean_rn_reported_hprd = weighted.mean(reported_rn_staffing_hours_per_resident_per_day, average_number_of_residents_per_day, na.rm=TRUE),
    mean_licensed_reported_hprd = weighted.mean(reported_licensed_staffing_hours_per_resident_per_day, average_number_of_residents_per_day, na.rm=TRUE),
    mean_total_reported_hprd = weighted.mean(reported_total_nurse_staffing_hours_per_resident_per_day, average_number_of_residents_per_day, na.rm=TRUE),
    mean_total_cm_hprd = weighted.mean(case_mix_total_nurse_prpd, average_number_of_residents_per_day, na.rm=TRUE),
  mean_cna_cm_hprd = weighted.mean(case_mix_cna_prpd, average_number_of_residents_per_day, na.rm=TRUE))
# TODO add additional weighted averages... % privately owned etc...

library(here)
save(county_staffing, file=here("data", "interim", "county_level_staffing.Rda"))
```

```{r}
plt <- ggplot(county_staffing, aes(x=row_cnt)) + geom_histogram(binwidth=5) + xlim(0,100)
plt
```
