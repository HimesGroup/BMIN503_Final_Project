---

---

------------------------------------------------------------------------

### Overview

Southern Asia and sub-Saharan Africa have the highest rates of preterm birth. Furthermore, babies in this regions face the hugest mortality risk. Ethiopia is among the top 15 countries that contribute to two-thirds of the world's preterm babies. The goal of this project is to perform statistical analyses to assess the relationships between preterm mortality and regions in Ethiopia.

### Introduction

Despite the many efforts over the last decades, there has been no measurable change in preterm birth rates at a global level. In 2020, the estimated number of preterm births was 13.4 million, compared to 13.8 million preterm in 2010 globally. Of this, 65% of them are in sub-Saharan Africa and South Asia.

Notably, gaps in national routine data for preterm birth in the most affected regions have made it harder to address the gap in knowledge of mortality and the morbidity associated with preterm birth. Preterm babies are at a higher risk of disability and developmental delays, potentially leading to lifelong health consequence. Therefore, understanding the key population impacted by preterm mortality is important to decreasing preterm births and improving outcomes.

Ethiopia, a country in sub-Saharan Africa, contributes to two-thirds of the world's preterm babies, with an estimated preterm birth rate of 14.1%. While it is common to have disparities in health service utilization within and between regional states of countries with diverse sociocultural and economic conditions such as Ethiopia, it is important to address avoidable differences within regions. Therefore, this analysis aims to assess if there is a difference in preterm mortality by region in Ethiopia.

### Methods

### R Libraries

First, all necessary packages are loaded first to keep the code organized.

```{r}
#| eval: FALSE
install.packages("pwr")
install.packages("sf")
install.packages("epitools")
install.packages("epiR")
```

```{r}
#load necessary Packages
library(tidyverse)
library(ggplot2)
library(knitr)
library(grid)
library(gridExtra)
library(dplyr)
library(pwr)
library(tidyr)
library(tibble)
library(leaflet)
library(sf)
library (epitools)
library(epiR)

```

### Pre-processing

This block of code imports the raw data extracted from ClinEpiDB which is a clinical epidemiology data base. The data is from a longitudinal cohort study of preterm birth conducted in three different regions in Ethiopia: Oromia region, the Amhara region, and the capital, Addis Ababa (Map of Ethiopia with the different regions is provided below).

Data set titled "household" and "participant" were merged on the variable "household ID".

```{r, echo = FALSE, eval = TRUE, results="hide"}
# looking for working directory 
current_directory <- getwd()
print(current_directory)

#loading in data from folder
#household data = 4,919 ( data of hospital and region of participant)
house_data <- read.delim("/Users/ahmedd/Desktop/SIP Data/Household_subsettedData.txt")
print(house_data)
names(house_data)
str(house_data)

#  participant data = 4,919 ( background of mother and infant)
parti_data <- read.delim("/Users/ahmedd/Desktop/SIP Data/Participant_subsettedData.txt")
print(parti_data)
head(parti_data)
names(parti_data)

# data repeated measure= 36779
repeatedm_data <- read.delim("/Users/ahmedd/Desktop/SIP Data/repeated measure_subsettedData.txt")
print(repeatedm_data)
names(repeatedm_data)

# merging household and participant demographic data on the Household_ID column
merged_data <- merge(house_data, parti_data, by = "Household_ID", all = TRUE)
print(merged_data)
names (merged_data)
```

```{r, echo = FALSE, eval = TRUE, results="hide"}
#creating a map for of Ethiopia with region labeled
# Download and unzip the GeoJSON file
url <- "https://geodata.ucdavis.edu/gadm/gadm4.1/json/gadm41_ETH_1.json.zip"
download.file(url, destfile = "gadm41_ETH_1.json.zip")
unzip("gadm41_ETH_1.json.zip", exdir = "ethiopian_data")

# Read the GeoJSON file using sf
ethiopian_data <- st_read("ethiopian_data/gadm41_ETH_1.json")
# Check the structure
str(ethiopian_data)
# Create color palette
unique_names <- unique(ethiopian_data$NAME_1)
pal <- colorFactor(palette = "Blues", domain = unique_names)

```

Map of Ethiopia with the different region, note the study was conducted in a hospitals from the Oromia region, the Amhara region, and the capital, Addis Ababa.

```{r}
# Plot the map
leaflet(ethiopian_data) %>%
  addTiles() %>%
  addPolygons(
    fillColor = ~pal(NAME_1),
    weight = 2,
    opacity = 1,
    color = "white",
    dashArray = "3",
    fillOpacity = 0.7,
    highlight = highlightOptions(
      weight = 5,
      color = "#666",
      dashArray = "",
      fillOpacity = 0.7,
      bringToFront = TRUE
    ),
    label = ~as.character(NAME_1)
  ) %>%
  addLegend(pal = pal, values = unique_names, title = "Regions")
```

The data cleaning steps involved several actions: renaming certain variables for easier access, adding new columns named "region" based on the hospital collection site(e.g Gondar University Hospital corresponds to the Amhara Region), and "mortality" based on those with information on cause of death.

```{r}

# Rename specific columns in the original data frame
colnames(merged_data)[colnames(merged_data) == "Sex..PATO_0000047."] <- "sex"
colnames(merged_data)[colnames(merged_data) == "Birth.weight..g...EFO_0004344."] <- "birthweight"
colnames(merged_data)[colnames(merged_data) == "Gestational.age.at.delivery..weeks...NCIT_C124435."] <- "gestageweeksatdelivery"
colnames(merged_data)[colnames(merged_data) == "Birth.place..EUPATH_0012417."] <- "birthlocation"
colnames(merged_data)[colnames(merged_data) == "Birth.location..EUPATH_0038716."] <- "birthplace"
colnames(merged_data)[colnames(merged_data) == "Hospital..EUPATH_0038001."] <- "hospitalname"
colnames(merged_data)[colnames(merged_data) =="Mother.s.1st.pregnancy..EUPATH_0038014."] <- "firstpreg"
colnames(merged_data)[colnames(merged_data) =="Mother.s.age..years...EUPATH_0035109."] <- "maternalage"

# Create a new column region based on hospital name
merged_data <- merged_data %>%
  mutate(region = case_when(
   hospitalname == "Gondar University Hospital" ~ "Amhara region",
   hospitalname == "Jimma University Hospital" ~ "Oromia region",
    hospitalname %in% c("Ghandi Memorial Hospital", "St. Paul's Hospital", "Tikur Anbessa Hospital") ~ "Addis Ababa",
    TRUE ~ "Other"
  ))
table(merged_data$region)

# Filter the data to select rows where "Sex" is neither "Male" nor "Female"
filtered_data <- merged_data %>%
  filter(sex != "Male" & sex != "Female")

# Create a new column mortality based on those with cause of death record cause. 
merged_data$mortality <- ifelse(merged_data$Cause.of.death..by.clinician..EUPATH_0038269. == "", 0, 1)
#convert mortality from characteric to numeric 
merged_data$mortality <- as.numeric(merged_data$mortality)
#checking  mortality data output for possible error (comparing #'s to original dataset)
table (merged_data$mortality)

#changing frist pregnancy from yes/no to 0/1
merged_data$firstpreg <- ifelse(merged_data$firstpreg =="No", 0, 1)
#convert mortality from characteric to numeric 
merged_data$firstpregnum <- as.numeric(merged_data$firstpreg)


## remove later##
#check home birth
unique(merged_data$birthplace)
# Filter and count occurrences of "Home"
count_home <- sum(grepl("Home", merged_data$birthplace, ignore.case = TRUE))
count_home
# Create the 'homebirth' column
merged_data$homebirth <- ifelse(merged_data$birthplace == "Home", 1, 0)
table(merged_data$homebirth, merged_data$region)
table(merged_data$mortality, merged_data$region)
table(merged_data$region)
```

Power and Sample analysis:

The total samples is 4919, 3208 from Addis Ababa, 1019 from the Amhara region, and 692 from the Oromia region. Based on our sample size, we are statistically powered to detect an effect size of 11% difference between the group Amahra vs Addis Ababa and 12% difference between Oromia region vs Addis Ababa).

```{r}
# testing for power using chi2 power
#Addis Ababa vs Amhara Region
pwr.2p2n.test(h = 0.11, n1 =3208 , n2 =1019 , sig.level =0.05 , power = NULL)
#Addis Ababa vs Oromia Region
pwr.2p2n.test(h = 0.12, n1 =3208 , n2 =692 , sig.level =0.05 , power = NULL)
```

```{r}



```

### Results

Describe your results and include relevant tables, plots, and code/comments used to obtain them. End with a brief conclusion of your findings related to the question you set out to address. You can include references if you'd like, but this is not required.

```{r}
# Create table one with summarization and counting for Infant
table_one <- merged_data %>%
  group_by(region) %>%
  summarize(
    MeanGestationalAge = mean(gestageweeksatdelivery),
    CountMale = sum(sex == "Male"),
    CountFemale = sum(sex == "Female"),
    MeanBirthWeight = mean(birthweight),
    TotalNumberOfBirths = n()  # Count the number of rows in each group
  )
# Print the table
print(table_one)
# Maternal characteristic table
maternal_char <- merged_data %>%
  group_by(region) %>%
  summarize(
    maternalage = mean(maternalage),
    motherfirstpy = sum(firstpreg == "Yes"),
    motherfirstpn = sum(firstpreg== "No"),
    motherfirstdont = sum(firstpreg == "Don't Know"),
    Primaryeducation = sum(Mother.s.education.level..EUPATH_0036220. == "primary"),
    secondaryeducation = sum(Mother.s.education.level..EUPATH_0036220. == "Secondary school"),
    highereducation = sum(Mother.s.education.level..EUPATH_0036220. == "Higher Education"),
    Noneabletoreadandwrite = sum(Mother.s.education.level..EUPATH_0036220. == "None, able to read and write"),
    nonenotabletoreadorwrite = sum(Mother.s.education.level..EUPATH_0036220. == "None, not able to read and write"),
    dontknow = sum(Mother.s.education.level..EUPATH_0036220. == "Don't Know"),
    maritalstatusmar = sum(Mother.s.marital.status..EUPATH_0048083. == "Married"),
    materialstatussing = sum(Mother.s.marital.status..EUPATH_0048083. == "Single"),
    materialstatusdont = sum(Mother.s.marital.status..EUPATH_0048083. == "Don't Know"),
    materialstatuswid = sum(Mother.s.marital.status..EUPATH_0048083. == "Widowed"),
    materialstatusdiv = sum(Mother.s.marital.status..EUPATH_0048083. == "Divorced"),
    motherworkself = sum(Mother.s.occupation..EUPATH_0036221. == "Self-employed"),
    motherworkhous = sum(Mother.s.occupation..EUPATH_0036221. == "Housewife"),
    motherworkdont = sum(Mother.s.occupation..EUPATH_0036221. == "Don't know"),
    motherworkother = sum(Mother.s.occupation..EUPATH_0036221. == "Other"),
    motherworkgov = sum(Mother.s.occupation..EUPATH_0036221. == "Government or company"),
    motherworkfarm = sum(Mother.s.occupation..EUPATH_0036221. == "Farmer")
  )

# Print maternal characteristic table
maternal_char

```

```{r}
#looking at # of mortality by region
table(merged_data$region, merged_data$mortality)

#calculating the rate of mortality in each region
AD_mor <-664/(2544+664)
AD_mor
AM_mor <- 257/(257+762)
AM_mor
OR_mor <- 188/(118+504)
OR_mor
#creating graph of mortality by region
merged_data %>%
    group_by(region) %>%
    summarise(mortality = mean(mortality)) %>%
    ggplot(aes(region, mortality))+geom_col()+
    scale_y_continuous(labels = scales::percent)

#statistically testing region vs mortality (chi2)
# create a table with the needed varaibles
mortality.chi = table(merged_data$region, merged_data$mortality)
print(mortality.chi)
#performe the chi-square test 
print(chisq.test((mortality.chi)))

```

```{r}
#simple logistic regression between preterm death and region
model1 <- glm(mortality ~ region, data = merged_data, family = binomial)
# Obtain the summary of the model
summary_model <- summary(model1)
summary_model

##checking for possible confounders
#mother age and region
motherage_model <-lm(maternalage ~ region, data=merged_data)
summary(motherage_model)
#visualize mother age by region
boxplot(maternalage~region,data=merged_data, main="Maternal age by region",
   xlab="Region", ylab="Maternal age")
# create a table with the needed varaibles
firstpreg.chi = table(merged_data$region, merged_data$firstpreg)
print(firstpreg.chi)
#performe the chi-square test 
print(chisq.test((firstpreg.chi)))
#visualize first pregnancy by region 
table( merged_data$region, merged_data$firstpreg)
merged_data %>%
    group_by(region) %>%
    summarise(firstpreg = mean(firstpreg)) %>%
    ggplot(aes(region, firstpreg))+geom_col()+
    scale_y_continuous(labels = scales::percent)
#finding median and mean age in the three region
aggm <-aggregate(maternalage ~ region, data = merged_data, FUN = function(x) c(mean = mean(x), median = median(x)))
print(aggm)


#gestational week at delivery by region
gest_model <-lm( gestageweeksatdelivery~ region, data=merged_data)
summary(gest_model)
#visualize gestational week at delivery by region
boxplot(gestageweeksatdelivery~region,data=merged_data, main="Gestational Weeks at Delivery by region",
   xlab="Region", ylab="Gestational Weeks at Delivery")
#gestational week at delivery and mortality
boxplot(gestageweeksatdelivery~mortality,data=merged_data, main="Gestational Weeks at Delivery and Mortality",
   xlab="Mortality", ylab="Gestational Weeks at Delivery")

# Create a boxplot using ggplot2 stratified by Mortality and Region
ggplot(merged_data, aes(x = factor(mortality), y = gestageweeksatdelivery, fill = region)) +
  geom_boxplot() +
  labs(
    title = "Gestational Weeks at Delivery and Mortality",
    x = "Mortality",
    y = "Gestational Weeks at Delivery"
  ) +
  facet_grid(. ~ region) +  # Stratify by Region
  theme_minimal()


#model for confounding maternal age, first pregnancy
glm_fit_confounding <-glm(mortality ~region + maternalage + firstpreg, data = merged_data, family =binomial)
summary(glm_fit_confounding)
#model for confounding maternal age, first pregnancy, and gestational week at delivery
glm_fit_confoundinggest <-glm(mortality ~region + maternalage + firstpreg + gestageweeksatdelivery, data = merged_data, family =binomial)
summary(glm_fit_confoundinggest)

#stratifying by gestational week at delivery
#*need to do 

#stratifying by first pregnancy 
### not done yet

# labeling col and row names 
row_first <- c("No ", "Yes")
col_first <- c("Cases", "Controls")
# Create a 2x2 matrix with specific numbers
tablegest <- matrix(c(405,106,1430,164), nrow = 2, ncol = 2, dimnames = list(row_HW, col_HW))

# Print the matrix with row and column names
print(table_HW)

# Perform the Wald method risk ratio calculation
riskratio.wald(table_HW, rev = "both")
oddsratio(table_HW)

#Amhara region, gestational devlivery, and mortality 
#Addis Ababa, gestational delivery, and mortality 
table(merged_data)
```
