---
title: "Assessing the Diagnostic Accuracy of Automated 3D Kidney Measurements in Detecting Urinary Tract Dilations"
subtitle: "BMIN503/EPID600 Final Project"
author: "First_Laith Last_Sultan"
format: html
editor: visual
embed-resources: true
---

------------------------------------------------------------------------

Use this template to complete your project throughout the course. Your Final Project presentation will be based on the contents of this document. Replace the title/name above and text below with your own, but keep the headers. Feel free to change the theme and other display settings, although this is not required.

### Overview

In this project, we evaualte 3D ultrasound kidney measurments as an objective alternative for the current clincial assessment of urinary tract dilation (UTD)

\### Introdction

Urinary tract dilation (UTD), represents a prevalent abnormality in pediatric kidneys, and the existing approaches for reporting UTD exhibit notable variability. Consequently, there arises a necessity for more objective methods that can offer precise evaluations of UTD. Employing 3D kidney volume measurements presents an opportunity for a quantitative evaluation of both kidney dilation and renal enlargement. This research aims to assess the diagnostic potential of automated 3D kidney volume measurements, obtained through ultrasound (US), aiming to discern and categorize UTD. Furthermore, it seeks to compare the diagnostic accuracy of these quantitative measurements with clinical exam interpretation.

### Methods

Renal ultrasound (US) images obtained from a cohort of 37 patients underwent segmentation and analysis employing an innovative 3D segmentation tool. Segmentation measurements were computed to assess the 3D kidney volumes of the: capsule, collecting system, collecting system inside the capsule, collecting system outside the capsule, and of the parenchyma. Overall HydroIndex of the collecting system as well as HydroIndex inside the capsule were computed. The kidneys were categorized into two groups, normal or those with UTD, based on review of US images by a pediatric radiologist. The mean ± standard error (SE) of each measurement was compared between the normal and UTD cases using a two-sided Student t-test. Additionally, a logistic regression model was employed to evaluate the diagnostic performance of the 3D kidney measurements. The model performance was compared and correlated to the 2D US assessment.

```{r}
# Set the working directory
setwd("C:/Users/laith/Desktop/BMIN503_Final_Project")

# Load the dataset
kidney_data <- read.csv("kidney_data.csv")

```

```{r}
# Load necessary libraries
library(ggplot2)
library(reshape2)

# Read the data
kidney_data <- read.csv("C:/Users/laith/Desktop/BMIN503_Final_Project/kidney_data.csv")

# Exclude non-numerical columns for mean calculation
kidney_data_numeric <- kidney_data[sapply(kidney_data, is.numeric)]

# Add the Diagnosis column back for grouping
kidney_data_numeric$Diagnosis <- kidney_data$Diagnosis

# Calculate the mean values for each feature by Diagnosis group
mean_values <- aggregate(. ~ Diagnosis, data = kidney_data_numeric, FUN = mean)

# Melting the data for easy plotting with ggplot
mean_values_melted <- melt(mean_values, id.vars = 'Diagnosis')

# Plotting
ggplot(mean_values_melted, aes(x = variable, y = value, fill = Diagnosis)) +
  geom_bar(stat = 'identity', position = position_dodge()) +
  labs(title = "Mean Values of Features by Diagnosis", x = "Feature", y = "Mean Value") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels for clarity



```

```{r}
# Load necessary library
library(ggplot2)
library(reshape2)

# Read the data
kidney_data <- read.csv("C:/Users/laith/Desktop/BMIN503_Final_Project/kidney_data.csv")

# Excluding the non-numerical and non-group columns for the plot
kidney_data_numeric <- kidney_data[sapply(kidney_data, is.numeric)]

# Adding the Diagnosis column back for grouping
kidney_data_numeric$Diagnosis <- kidney_data$Diagnosis

# Melting the data for easy plotting with ggplot
kidney_data_melted <- melt(kidney_data_numeric, id.vars = 'Diagnosis')

# Creating the box plot
ggplot(kidney_data_melted, aes(x = variable, y = value, fill = Diagnosis)) +
  geom_boxplot() +
  labs(title = "Box Plots of Features by Diagnosis", x = "Feature", y = "Value") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels for clarity


```

```{r}
# Load necessary library
library(ggplot2)
library(reshape2)

# Read the data
kidney_data <- read.csv("C:/Users/laith/Desktop/BMIN503_Final_Project/kidney_data.csv")

# Excluding the non-numerical and non-group columns for the plot
kidney_data_numeric <- kidney_data[sapply(kidney_data, is.numeric)]

# Adding the Diagnosis column back for grouping
kidney_data_numeric$Diagnosis <- kidney_data$Diagnosis

# Melting the data for easy plotting with ggplot
kidney_data_melted <- melt(kidney_data_numeric, id.vars = 'Diagnosis')

# Applying a log transformation (add 1 to avoid log(0))
kidney_data_melted$value <- log(kidney_data_melted$value + 1)

# Creating the box plot with log-transformed values
ggplot(kidney_data_melted, aes(x = variable, y = value, fill = Diagnosis)) +
  geom_boxplot() +
  labs(title = "Box Plots of Log-Transformed Features by Diagnosis", 
       x = "Feature", 
       y = "Log-transformed Value") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels for clarity

```

### Results

Six of the seven 3D measurements exhibited statistically significant differences (p\<0.05) between UTD and normal kidneys. Notable disparities included increased capsule volume (110.32 ± 18.9 vs. 55.04 ± 8.28), collecting system volume (33.76 ± 6.76 vs. 1.49 ± 0.4), collecting system inside capsule volume (26.98 ± 5.65 vs. 1.49 ± 0.4), collecting system outside capsule volume (8.03 ± 2.55 vs. 0.0 ± 0), and decreased HydroIndex in both collecting system (0.73 ± 0.02 vs. 0.97 ± 0.01) and collecting system inside capsule (0.77 ± 0.02 vs. 0.97 ± 0.01) in those with UTD versus normal, respectively.

Notably, the individual features within the model displayed varying levels of accuracy. 3D parenchymal volume (AUC 0.62, Sn 31.9%, Sp 92.3%), capsule volume (AUC 0.73, Sn 87.2%, Sp 50%), collecting system outside capsule volume (AUC 0.76, Sn 53.2%, Sp 100%), collecting system inside capsule volume (AUC 0.96, Sn 89.4%, Sp 92.3%), collecting system volume (AUC 0.97, Sn 91.5%, Sp 92.3%), HydroIndex collecting system (AUC 0.96, Sn 96.2%, Sp 85.1%), and HydroIndex collecting system inside capsule (AUC 0.96, Sn 87.2%, Sp 92%).

```{r}
# Read the data from the specified path
data <- read.csv("C:/Users/laith/Desktop/BMIN503_Final_Project/kidney_data.csv")

# Convert the 'Diagnosis' column to a binary factor
data$Diagnosis <- factor(data$Diagnosis, levels = c("normal", "UTD"))

# List of features to analyze
features <- c("capsule", "hydroindex", "collecting_system", "parenchyma")  # Add more feature names as needed

# Initialize an empty list to store ROC plots
plots <- list()

# Load the pROC library
library(pROC)

# Iterate over each feature and calculate ROC values
for (feature in features) {
  # Calculate ROC values
  roc_obj <- roc(data$Diagnosis, data[[feature]])

  # Create an ROC plot
  plot_obj <- plot(roc_obj, print.auc = TRUE, main = paste("ROC Curve for", feature))
  
  # Store the plot in the list
  plots[[feature]] <- plot_obj
}

# Display the plots (you can also use a loop to print each plot)
plots[[1]]  # Replace 1 with the appropriate index to view other plots


```

The logistic regression model based on 3D kidney measurements combined showed a high diagnostic performance, with area under the curve (AUC): 0.97, sensitivity (Sn): 87.2% and specificity (Sp): 92%, in differentiating normal vs. UTD cases.

```{r}
# Install and load the necessary packages
install.packages(c("pROC", "glmnet"))
library(pROC)
library(glmnet)

# Read the data from the specified path
data <- read.csv("C:/Users/laith/Desktop/BMIN503_Final_Project/kidney_data.csv")

# Convert the 'Diagnosis' column to a binary factor
data$Diagnosis <- factor(data$Diagnosis, levels = c("normal", "UTD"))

# List of features to analyze
selected_features <- c("capsule", "collecting_system", "collecting_system_inside", "parenchyma", "hydroindex")  # Add more feature names as needed

# Create a data frame with the selected features and the diagnosis column
features <- data[, c("Diagnosis", selected_features)]

# Fit a logistic regression model
model <- glm(Diagnosis ~ ., data = features, family = "binomial")

# Predict probabilities
predicted_probs <- predict(model, newdata = features, type = "response")

# Create ROC curve
roc_curve_combined <- roc(features$Diagnosis, predicted_probs)

# Plot the ROC curve
plot(roc_curve_combined, main = "Combined ROC Curve", col = "blue")
```

Conclusions:

The use of 3D kidney ultrasound measurements can differentiate individuals with UTD from those without. The diagnostic logistic regression model based on 3D kidney ultrasound measurements showed high AUC of 0.97 in differentiating normal from UTD patients. integrating such objective automated tools can be of great value if implemented in clinical practice ti improve the diagnostic performance particularly in low resource settings.

R studio was efficient in building the diagnostic model and also in measuring the diagnostic performance for individual features. Future plans is to include larger data set/ larger patient sample size, for evaluating the diagnostic potential of models built using machine learning of 3D kidney ultrasound measurements comapred to current clinical assessments.
