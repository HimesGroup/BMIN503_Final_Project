---
title: "A Comparative Analysis of Historical vs. Contemporary Definitions of Preeclampsia on Hemangioma Risk Assessment"
subtitle: "BMIN503/EPID600 Final Project"
author: "Jessica Wong"

format: 
  html:
    fig-width: 8
    fig-height: 6
editor: visual
theme: cosmo
embed-resources: true
editor_options: 
  chunk_output_type: inline
execute: 
  warning: false
  message: false
---

------------------------------------------------------------------------

## Overview {#sec-overview}

In my final project, I will investigate how changes in diagnostic criteria impact our ability to assess risks in research studies, especially when using health record data to create new variables for analysis. The main focus of this project is to conduct a comparative analysis of the definition of hypertension disorders in the 1950s and today, as defined by the guidelines provided by the American College of Obstetricians and Gynecologists (ACOG). This analysis aims to illustrate how alterations in diagnostic criteria over time can influence our approach to evaluating the risk associated with maternal hypertensive disorders. Specifically, I am interested in examining the potential relationship between maternal hypertensive disorders and the risk of vascular nevi development, including conditions like port-wine stains and strawberry hemangiomas, in their offspring at around one year of age.

To address this, my central research question is as follows: **How do changes in diagnostic criteria for maternal hypertensive disorders, as defined by ACOG, influence our ability to evaluate the risk of vascular nevi development in offspring around one year of age, with a particular focus on port-wine stains and strawberry hemangiomas?** To answer this question comprehensively, I will use data from the Collaborative Perinatal Project (CPP).

The CPP was a comprehensive research initiative conducted across multiple centers in the United States during the 1950s and 60s, with the overarching goal of investigating various factors, encompassing both environmental and biological influences, that affect pregnancy outcomes and child health.

For guidance on this project, I consulted with Professors Stefanie Hinkle, Sunni Mumford, and David Margolis.

-   Key Insights from Dr. Margolis: I learned that infantile hemangiomas (IH) typically regress by the age of 4, whereas port-wine stains (PWS) are permanent. This distinction poses a challenge because the data for children at 4 months and 1 year do not differentiate between hemangiomas and port-wine stains, unlike the data for age 7. We initially discussed an alternative approach for conducting a secondary outcome analysis, which involved making speculative deductions about the occurrences of non-PWS vascular nevi (presumed to be IH) in children at ages 4 months and 1 year. This approach would require subtracting the number of PWS observed at age 7 from the total vascular nevi recorded at 4 months. Due to the speculative nature and the inherent uncertainty associated with this method, I decided to refine the research focus primarily on studying IH and PWS at the age of 1 year.

-   Key Insights from Drs. Hinkle and Mumford: I gleaned that "chronic hypertension" is essentially equivalent to "pre-pregnancy hypertension." Therefore, individuals diagnosed with "pre-pregnancy hypertension" cannot be classified as having "gestational hypertension." This distinction is crucial because gestational hypertension specifically requires the condition to be a new onset during pregnancy. Furthermore, superimposed hypertension is characterized by a combination of "chronic hypertension" and the presence of protein in the urine, which is indicative of preeclampsia. They recommended that I consult the American College of Obstetricians and Gynecologists (ACOG) for precise diagnostic criteria. I was able to refer to ACOG and suggested literature to differentiate between the definitions from the 1950s and those used today.

## Introduction {#sec-introduction}

Port-wine stains (PWS) and infantile hemangiomas (IH) are among the most prevalent vascular birthmarks with unique pathophysiological and clinical characteristics. While PWS results from congenital malformations and persists lifelong, IH emerges postnatally due to abnormal endothelial cell proliferation and usually regresses by age four. Both are believed to arise from fetal developmental disruptions, possibly due to gestational hypoxia or insufficient growth factors, which may interfere with angiogenesis and vasculogenesis.

Understanding these vascular birthmarks requires insights from several interdisciplinary domains:

1.  **Developmental Biology:** To grasp the fetal developmental disturbances and their implications.
2.  **Vascular Biology:** For insights into angiogenesis, vasculogenesis, and the very nature of the vascular birthmarks.
3.  **Obstetrics:** Since conditions related to pregnancy, like preeclampsia, might have implications for the onset of such birthmarks.
4.  **Pediatrics:** To track the birthmarks' evolution over developmental stages and address potential complications.
5.  **Dermatology:** Given the skin manifestation of these vascular birthmarks.

Abnormal remodeling of spiral arteries during early pregnancy is essential for ensuring optimal fetal nourishment. Any deviations in this process may suggest the development of birthmarks as compensatory mechanisms to restore vascular balance. Conditions such as preeclampsia and placental insufficiency, which are associated with in utero hypoxia, could potentially trigger the development of IH. However, as of now, there is no direct link established between IH and these conditions, particularly PWS.

The primary objective of this study is to investigate how the relative risks of IH vary based on the diagnostic criteria employed. Notably, there is no definitive risk factor firmly established for IH. Some studies suggest a connection with hypertension, while others do not.

Given the complexities and gaps in our current understanding, the significance of this research can be distilled into two key aspects: Firstly, this research aims to explore the associations between IH and PWS, particularly in the context of hypertensive disorders of pregnancy. This investigation seeks to illuminate potential relationships between these conditions and hypertensive disorders. Secondly, I hope to observe how relative risks of IH change over time, taking into account the evolving definition of hypertension from the 1950s to the present day. By leveraging the extensive data available from the CPP, my goal is to contribute to our knowledge regarding the prevalence of vascular birthmarks and their potential connections with hypertensive disorders of pregnancy.

## Methods {#sec-methods}

1.  My first step was to identify and access the NCPP data within the NIH electronic records. This involved using the National Archives' website to pinpoint the specific datasets related to my research. The URL is https://www.archives.gov/research/electronic-records/nih.html. Navigating the National Archives required an understanding of its archival system. This step was crucial in filtering through the vast array of data to pinpoint the specific datasets relevant to my study. It involved familiarizing myself with the indexing methods and search tools provided by the archives. I used the National Archives Identifier (606622) for the NCPP files. After locating the NCPP files, I reviewed the three main components of the NCPP files: the Master File, a Variables File, and 30 special topic Work Files. After downloading the master file, I obtained the codebooks associated with the NCPP datasets. These codebooks provided detailed descriptions of the data collection methods and instruments used, which was essential for accurate data interpretation. I also collected manuals detailing the derivation of variables within the NCPP data. These manuals offered insights into the transformation processes from raw data to research-ready variables, clarifying the data structure and analytical approaches. Finally, I retrieved text recognition forms that detailed the various stages and visits of the NCPP. These forms provided context and sequence to the data collection, enhancing my understanding of the longitudinal nature of the study. The NCPP data was stored in a SAS dataset (.sas7bdat file). To work with this data in R, I used a combination of packages from the tidyverse, notably dplyr and haven. The process was straightforward. I started by setting the working directory in R to the location of the downloaded SAS file using setwd(). Using read_sas() function from the haven package, I loaded the ncppbasa.sas7bdat file into R. This function seamlessly reads SAS files and converts them into a format that R can manipulate.

```{r}
#| message: false
#| warning: false
library(tidyverse)
library(haven)
library(gtsummary)
library(mice)
library(VIM)
library(formatR)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
setwd("/Users/wongjj/Downloads")
ncppbasa <- read_sas("ncppbasa.sas7bdat")
htn_data <- read_sas("cpp_htn_20231031.sas7bdat") %>%
  select(MOMID, PREGID, HTN_PREG, HTN_PREG1950)
diabetes_data <- read_sas("cpp_diabetes_20231026.sas7bdat") %>% 
  select(MOMID, PREGID, DM)
```

2.  On October 31st, I met with Dr. Hinkle to establish a well-defined hypertension variable. To achieve this, we created a dedicated file specifically for this variable. This variable has five distinct levels:

    -   **Normotension**: Indicating individuals with normal blood pressure.

    -   **Gestational Hypertension:** Reflecting new-onset hypertension after 20 weeks of gestation.

    -   **Preeclampsia**: Representing new-onset hypertension with proteinuria after 20 weeks of gestation.

    -   **Chronic Hypertension:** Indicating high blood pressure that existed before pregnancy or prior to 20 weeks of gestation.

    -   **Superimposed Preeclampsia:** Indicating worsening hypertension with proteinuria in women who had chronic hypertension prior to 20 weeks of gestation.

    For a straightforward comparison between historical and modern definitions of hypertension, I have prepared the following table. This table highlights the changes in the definitions of preeclampsia and chronic hypertension. The levels of preeclampsia, chronic hypertension, and superimposed preeclampsia are the ones that vary based on either the 1950s or 2023 definition.

+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| Definitions                   | 1950                                                                                                                                                     | 2023                                                                                                     |
+:=============================:+:========================================================================================================================================================:+:========================================================================================================:+
| **Normotension**              | BP \<140/90 mm Hg                                                                                                                                        | BP \<140/90 mm Hg                                                                                        |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| **Gestational Hypertension**  | Gestational age ≥ 20 weeks.                                                                                                                              | Gestational age ≥ 20 weeks.                                                                              |
|                               |                                                                                                                                                          |                                                                                                          |
|                               | BP ≥140/90 on at least two occasions.                                                                                                                    | BP ≥140/90 on at least two occasions.                                                                    |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| **Preeclampsia**              | **Mild:** BP \>140/90 or a rise of ≥30/15 above the usual level, significant proteinuria, or persistent edema of hands and face.                         | The diagnosis is made when there is both new-onset hypertension (BP \>140/90) and new-onset proteinuria. |
|                               |                                                                                                                                                          |                                                                                                          |
|                               | **Severe:** BP \>160/110, significant proteinuria in the absence of UTI, urinary output \<400 mL/day, cerebral/visual disturbances, and pulmonary edema. |                                                                                                          |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| **Chronic Hypertension**      | Gestational age **\< 24 weeks.**                                                                                                                         | Gestational age **\< 20 weeks**.                                                                         |
|                               |                                                                                                                                                          |                                                                                                          |
|                               | BP ≥140/90 on at least two occasions.                                                                                                                    | BP =140/90 on at least two occasions.                                                                    |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| **Superimposed Preeclampsia** | Chronic Hypertension + PE                                                                                                                                | Chronic Hypertension + PE                                                                                |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------+

3.  In my ongoing efforts to identify relevant variables, I turned my attention to those related to vascular nevi, which had been documented at various time points during the study. Notably, the data collected at the 1-year and 7-year marks proved to be more comprehensive, enabling me to differentiate between different types of vascular nevi, such as infantile hemangiomas and port wine stains. However, it's worth mentioning that the data recorded at 4 months and 1 year were less specific, categorizing all instances under the broad term of "vascular nevi." During these time points, skin conditions were recorded under a single variable, with different levels denoted by numbers 1-7, each representing a distinct skin condition.

    Unfortunately, these earlier time points lacked combination codes that could have allowed for the simultaneous identification of multiple skin conditions, thereby limiting the utility of this data for my research objectives. The absence of this level of detail made it challenging to conduct a comprehensive and accurate analysis of specific skin conditions, particularly in distinguishing between various types of vascular nevi.

    Furthermore, when examining the seven-year data, I encountered a significant amount of missing information primarily due to loss of follow-up. Additionally, certain hypertension levels had small sample sizes, with only five participants, making meaningful analysis unfeasible. To ensure the accuracy of my analysis and prevent misclassification, I made the decision to focus my efforts on the more detailed 1-year data. Although this choice narrowed the time frame of my analysis, it provided a higher level of granularity and reduced the risk of incorrectly categorizing the types of vascular nevi.

    In my primary analysis, I categorized "definite" as "present" and "suspect" as "not present." However, in a sensitivity analysis, I included both "definite" and "suspect" cases as "present." This decision was guided by the availability of detailed data at birth, where skin conditions like hemangiomas and port wine stains were categorized with greater specificity.

4.  Next, I meticulously selected covariates a priori, drawing from their consistent inclusion in similar studies. These covariates encompassed a range of factors:

    1.  **Maternal age, height, and weight:** These parameters serve as direct indicators of maternal health.

    2.  **Socioeconomic factors, including income, marital status, ethnicity, and education level:** These variables can significantly influence health outcomes.

    3.  **Lifestyle choices, such as smoking:** Known to affect the risk of hypertension.

    4.  **Reproductive history factors, including parity and plurality:** These factors are essential for understanding changes in maternal health during pregnancy.

5.  Once all the variables had been identified, I initiated the data processing steps. I began by creating a new data frame named **`mice_covariate`** using the **`data.frame()`** function. The initial columns of this data frame, namely **`MOMID`**, **`PREGID`**, and **`CHILDID`**, were set as unique identifiers for each record, linking them to the mother's ID, pregnancy ID, and child's ID, respectively. My next focus was on incorporating two covariates into this data frame: **`weight_lb`** and **`height_in`**. To ensure consistency and prepare for multiple imputation of missing covariate data, I converted both **`weight_lb`** and **`height_in`** variables to numeric using the **`as.numeric()`** function. In addressing missing data within these two variables, I employed the **`replace()`** function. Specifically, I replaced instances of ".u" or ".U" in the original **\`ncppbasa\`** dataset with "NA." I cross-referenced this replacement process with the relevant manuals to ensure that the frequency of values aligned appropriately. I repeated this process for the **`age`** and **`smoking`** variables, systematically handling and standardizing missing data to prepare the data frame for further analysis.

```{r}
mice_covariate <- data.frame(
  MOMID = ncppbasa$MOMID,
  PREGID = ncppbasa$PREGID,
  CHILDID = ncppbasa$CHILDID,
  weight_lb = as.numeric(replace(ncppbasa$C83, ncppbasa$C83 %in% c(".u", ".U"), NA)),
  height_in = as.numeric(replace(ncppbasa$C81, ncppbasa$C81 %in% c(".u", ".U"), NA))
)
ncppbasa$C31 <- as.numeric(replace(ncppbasa$C31, ncppbasa$C31 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa[c("PREGID", "MOMID", "CHILDID", "C31")], by = c("PREGID", "MOMID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C31"] <- "age"
ncppbasa$C52 <- as.numeric(replace(ncppbasa$C52, ncppbasa$C52 %in% c(70, 80, ".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa[c("MOMID", "PREGID", "CHILDID", "C52")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C52"] <- "Smoking"
```

5.  The **`'parity'`** variable posed an initial challenge during the SAS to R conversion due to non-numeric values becoming NA. This occurred because the categories of parity were encoded in a less intuitive manner in the code book. In this coding scheme, **`'0'`** indicated that the mother had a prior pregnancy that was not viable, while **`'p'`** signified no prior pregnancy at all. The conversion from **`'p'`** to NA happened during the SAS to R conversion process. To address this issue, I took the following steps:
    -   I converted the **`'parity'`** variable (represented as **`'C50'`** in the dataset) to a character type since **`'parity'`** contained non-numeric values that required different processing compared to purely numeric data.

    -   I merged the **`'mice_covariate'`** data frame with the **`'parity'`** data from **`'ncppbasa'`** using shared identifiers (**`'MOMID'`**, **`'PREGID'`**, **`'CHILDID'`**). Additionally, I renamed the **`'C50'`** column to **`'parity'`** for clarity.

    -   I applied the **`'na_tag'`** function to identify rows with NA values to facilitate further processing.

    -   I recoded **`'p'`** as **`'0'`** in alignment with the original coding scheme of the dataset, ensuring that all values in the **`'parity'`** variable became numeric.

```{r}
ncppbasa$parity <- as.character(ncppbasa$C50)
mice_covariate <- merge(mice_covariate, ncppbasa[c("MOMID", "PREGID", "CHILDID", "C50")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C50"] <- "parity"

subset_data <- mice_covariate[is.na(mice_covariate$parity), ]
# Apply na_tag to the 'parity' column in the subset
subset_data$parity <- na_tag(subset_data$parity)

# Identify rows in mice_covariate that correspond to subset_data
matching_rows <- mice_covariate$MOMID %in% subset_data$MOMID &
                mice_covariate$PREGID %in% subset_data$PREGID &
                mice_covariate$CHILDID %in% subset_data$CHILDID

# Update 'parity' in mice_covariate with "p" values from subset_data
mice_covariate$parity[matching_rows] <- subset_data$parity

# Retain '0' as `0` which was originally coded for "prior pregnancy but was no prior viable" but still counts as nulliparous
mice_covariate$parity[mice_covariate$parity == '0'] <- '0'

# Replace 'p' with '0' because 'p' was originally coded for "no prior pregnancy at all"
mice_covariate$parity[mice_covariate$parity == 'p'] <- '0'

# Replace 'u' with 'NA'
mice_covariate$parity[mice_covariate$parity == 'u'] <- NA
mice_covariate$parity <- as.numeric(mice_covariate$parity)
```

6.  I followed a similar process for handling covariates, including plurality, income, education, marital status, infant sex, and vascular nevi outcomes. Additionally, I addressed the ethnicity covariate. Dr. Hinkle advised me to combine categories '**`3`**' (oriental) and '**`8`**' (other) for the '**`race_of_mother`**' variable. This consolidation of less populous categories simplifies the analysis, as these categories had small sample sizes. I utilized the **`replace()`** function to change all instances where '**`race_of_mother`**' was '**`3`**' (oriental) to '**`8`**' (other).

Subsequently, we introduced a datafile for diabetes status, considering that this study took place in the 1950s, when the prevalence of obesity was relatively low, implying that diabetes cases were likely type 1. To create a comprehensive dataset for analysis, I conducted a series of data merges. Firstly, I merged the '**`diabetes_data`**' (related to diabetes) with '**`htn_data`**' (related to hypertension) using the '**`merge()`**' function, specifying '**`by = c("MOMID", "PREGID")`**' and setting '**`all = TRUE`**' to ensure the inclusion of all records from both datasets, even in cases of mismatches or missing values. Secondly, I integrated the combined diabetes and hypertension data with the '**`mice_covariate`**' dataset, which contains the selected covariates. After successfully merging all the necessary data, I implemented an inclusion criterion based on the participants' survival status, specifically up to the age of 1 year. To achieve this, I incorporated the '**`C1092`**' variable from the '**`ncppbasa`**' dataset, which denotes the survival status of the children in the study. To select participants who had survived up to 1 year, I filtered the data using the conditions '**`(C1092 == 0 | (C1092 >= 51 & C1092 <= 58))`**'. The exclusion criteria variable has been removed from the dataset in preparation for the upcoming imputation process, as it is not required for imputation.

```{r}
ncppbasa$C10 <- as.numeric(replace(as.character(ncppbasa$C10), ncppbasa$C10 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa[c("MOMID", "PREGID", "CHILDID", "C10")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C10"] <- "plurality"

ncppbasa$C275 <- as.numeric(replace(as.character(ncppbasa$C275), ncppbasa$C275 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa[c("MOMID", "PREGID", "CHILDID", "C275")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C275"] <- "income"

ncppbasa$C272 <- as.numeric(replace(as.character(ncppbasa$C272), ncppbasa$C272 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa[c("MOMID", "PREGID", "CHILDID", "C272")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C272"] <- "educ"

ncppbasa$C36 <- as.numeric(replace(as.character(ncppbasa$C36), ncppbasa$C36 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa[c("MOMID", "PREGID", "CHILDID", "C36")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C36"] <- "marital"

ncppbasa$C554 <- as.numeric(replace(as.character(ncppbasa$C554), ncppbasa$C554 %in% c(".u", ".U"), NA))
ncppbasa$C554 <- replace(ncppbasa$C554, ncppbasa$C554 == 3, NA)
ncppbasa$C554 <- as.numeric(ncppbasa$C554, levels = c(1, 2))
mice_covariate <- merge(mice_covariate, ncppbasa[c("MOMID", "PREGID", "CHILDID", "C554")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C554"] <- "infant_sex"

ncppbasa$C303 <- as.numeric(replace(as.character(ncppbasa$C303), ncppbasa$C303 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa[c("MOMID", "PREGID", "CHILDID", "C303")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C303"] <- "race_of_mother"

ncppbasa$C982 <- as.numeric(replace(as.character(ncppbasa$C982), ncppbasa$C982 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa[c("MOMID", "PREGID", "CHILDID", "C982")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C982"] <- "PWS_1y"

ncppbasa$C983 <- as.numeric(replace(as.character(ncppbasa$C983), ncppbasa$C983 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa[c("MOMID", "PREGID", "CHILDID", "C983")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C983"] <- "IH_1y"

diabetes_htn_merged <- merge(diabetes_data, htn_data, by = c("MOMID", "PREGID"), all = TRUE)
master_file_exposure <- merge(diabetes_htn_merged, mice_covariate, by = c("MOMID", "PREGID"), all = TRUE)

master_file_exposure$C1092 <- ncppbasa$C1092
master_file_exposure <- master_file_exposure %>%
  filter(C1092 == 0 | (C1092 >= 51 & C1092 <= 58))
master_file_exposure <- master_file_exposure %>%
  select(-C1092)
```

7.  In the codebook, '**`1`**' signifies definiteness, '**`0`**' represents absence, and '**`2`**' indicates suspicion for vascular nevi. To create a new variable, '**`combovascnevi_1y`**,' that combines these values based on these rules, I have also renamed '**`master_file_exposure`**' to '**`mice_data`**' for organizational purposes.

```{r}
mice_data <- master_file_exposure
mice_data$combovascnevi_1y <- ifelse(is.na(mice_data$PWS_1y) & is.na(mice_data$IH_1y), NA, 0)
mice_data$combovascnevi_1y[mice_data$PWS_1y == 1 | mice_data$IH_1y == 1] <- 1
mice_data$combovascnevi_1y[mice_data$PWS_1y == 2 | mice_data$IH_1y == 2] <- 2
```

8.  I performed descriptive analyses to present the results for Table 1, which displays participant characteristics based on various covariates. For this purpose, I established a distinct data file. This separation was necessary because these variables needed to be converted into character format, and the variables employed for multiple imputation did not seamlessly accommodate categorized data. The procedure I followed for creating this dataset paralleled the process of extracting variables from the master file. However, it involved additional steps such as the creation of the BMI variable, renaming of variables, and releveling them to align with the specific requirements of the analysis. I did this for all the covariates of this study.

```{r}
category_covariates <- data.frame(
  MOMID = ncppbasa$MOMID,
  PREGID = ncppbasa$PREGID,
  CHILDID = ncppbasa$CHILDID,
  weight_lb = as.numeric(replace(ncppbasa$C83, ncppbasa$C83 %in% c(".u", ".U"), NA)),
  height_in = as.numeric(replace(ncppbasa$C81, ncppbasa$C81 %in% c(".u", ".U"), NA))
)

# Define the calculate_BMI function
calculate_BMI <- function(weight, height) {
  weight_kg <- as.numeric(replace(weight, weight %in% c(".u", ".U"), "NA")) * 0.453592
  height_m <- as.numeric(replace(height, height %in% c(".u", ".U"), "NA")) * 0.0254
  ifelse(height_m > 0, weight_kg / (height_m^2), "NA")
}
category_covariates$`Pre-Pregnancy BMI (kg/m^2)` <- calculate_BMI(ncppbasa$C83, ncppbasa$C81)

names(category_covariates)[names(category_covariates) == "BMI"] <- "Pre-Pregnancy BMI (kg/m^2)"

# Define BMI categories using case_when
category_covariates$`Pre-Pregnancy BMI Category` <- case_when(
  category_covariates$`Pre-Pregnancy BMI (kg/m^2)` < 18.5 ~ "Underweight",
  category_covariates$`Pre-Pregnancy BMI (kg/m^2)` >= 18.5 & category_covariates$`Pre-Pregnancy BMI (kg/m^2)` < 25.0 ~ "Healthy Weight",
  category_covariates$`Pre-Pregnancy BMI (kg/m^2)` >= 25.0 & category_covariates$`Pre-Pregnancy BMI (kg/m^2)` < 30.0 ~ "Overweight",
  category_covariates$`Pre-Pregnancy BMI (kg/m^2)` >= 30.0 ~ "Obesity",
  TRUE ~ "NA"  # Assign "NA" for other cases
)

# Convert BMI_Category to a factor with levels
category_covariates$`Pre-Pregnancy BMI Category` <- factor(
  category_covariates$`Pre-Pregnancy BMI Category`,
  levels = c("Underweight", "Healthy Weight", "Overweight", "Obesity", "NA")
)
names(category_covariates)[names(category_covariates) == "Pre-Pregnancy BMI Category"] <- "Pre-Pregnancy BMI Category"

ncppbasa$C31 <- as.numeric(replace(ncppbasa$C31, ncppbasa$C31 %in% c(".u", ".U"), NA))
category_covariates <- merge(category_covariates, ncppbasa[c("PREGID", "MOMID", "CHILDID", "C31")], by = c("PREGID", "MOMID", "CHILDID"), all.x = TRUE)
names(category_covariates)[names(category_covariates) == "C31"] <- "Age"

ncppbasa$C52 <- as.numeric(replace(ncppbasa$C52, ncppbasa$C52 %in% c(70, 80, ".u", ".U"), NA))
smoking_levels <- c("Non-Smoker", "1-19 (<1 pack/day)", "20+ (1+ pack/day)", "NA")
ncppbasa$Smoking <- factor(
  case_when(
    is.na(ncppbasa$C52) ~ "NA",
    ncppbasa$C52 == 0 ~ "Non-Smoker",
    ncppbasa$C52 >= 1 & ncppbasa$C52 <= 19 ~ "1-19 (<1 pack/day)",
    ncppbasa$C52 >= 20 ~ "20+ (1+ pack/day)",
    TRUE ~ NA_character_
  ),
  levels = smoking_levels
)
category_covariates <- merge(category_covariates, ncppbasa[c("MOMID", "PREGID", "CHILDID", "Smoking")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(category_covariates)[names(category_covariates) == "Smoking"] <- "Smoking (Number of Cigarettes/Day)"

ncppbasa$parity <- as.character(ncppbasa$C50)
category_covariates <- merge(category_covariates, ncppbasa[c("MOMID", "PREGID", "CHILDID", "C50")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(category_covariates)[names(category_covariates) == "C50"] <- "Number of times given birth"
subset_data <- category_covariates[is.na(category_covariates$`Number of times given birth`), ]
subset_data$`Number of times given birth` <- na_tag(subset_data$`Number of times given birth`)

# Identify rows in category_covariates that correspond to subset_data
matching_rows <- category_covariates$MOMID %in% subset_data$MOMID &
                category_covariates$PREGID %in% subset_data$PREGID &
                category_covariates$CHILDID %in% subset_data$CHILDID

# Update 'Number of times given birth' in category_covariates with values from subset_data
category_covariates$`Number of times given birth`[matching_rows] <- subset_data$`Number of times given birth`

# Replace '0' with '-1' in 'Number of times given birth'
category_covariates$`Number of times given birth`[category_covariates$`Number of times given birth` == '0'] <- '-1'

# Replace 'p' with '0' in 'Number of times given birth'
category_covariates$`Number of times given birth`[category_covariates$`Number of times given birth` == 'p'] <- '0'

# Replace 'u' with 'NA' in 'Number of times given birth'
category_covariates$`Number of times given birth`[category_covariates$`Number of times given birth` == 'u'] <- NA

category_covariates$`Number of times given birth` <- factor(
  case_when(
    is.na(category_covariates$`Number of times given birth`) ~ "NA",
    category_covariates$`Number of times given birth` %in% c(4, 5, 6, 7, 8, 10) ~ "4+",
    category_covariates$`Number of times given birth` %in% c(-1, 0) ~ "0",
    category_covariates$`Number of times given birth` == 1 ~ "1",
    category_covariates$`Number of times given birth` == 2 ~ "2",
    category_covariates$`Number of times given birth` == 3 ~ "3",
    TRUE ~ as.character(category_covariates$`Number of times given birth`)
  ),
  levels = c("0", "1", "2", "3", "4+", "NA")
)
names(category_covariates)[names(category_covariates) == "Number of times given birth"] <- "Number of times given birth"

ncppbasa$C275 <- as.numeric(replace(as.character(ncppbasa$C275), ncppbasa$C275 %in% c(".u", ".U"), NA))
ncppbasa$Income <- factor(
  case_when(
    is.na(ncppbasa$C275) ~ "NA",
    ncppbasa$C275 %in% c(1, 2) ~ "<=$1,999",
    ncppbasa$C275 == 3 ~ "$2,000-$3,999",
    ncppbasa$C275 == 4 ~ "$4,000-$5,999",
    ncppbasa$C275 == 5 ~ "$6,000-$7,999",
    ncppbasa$C275 == 6 ~ "$8,000-$9,999",
    ncppbasa$C275 == 7 ~ ">=$10,000",
    TRUE ~ as.character(ncppbasa$C275)
  ),
  levels = c("<=$1,999", "$2,000-$3,999", "$4,000-$5,999", "$6,000-$7,999", "$8,000-$9,999", ">=$10,000", "NA")
)
category_covariates <- merge(category_covariates, ncppbasa[c("MOMID", "PREGID", "CHILDID", "Income")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(category_covariates)[names(category_covariates) == "Income"] <- "Annual Income"

ncppbasa$C10 <- as.numeric(replace(as.character(ncppbasa$C10), ncppbasa$C10 %in% c(".u", ".U"), NA))

ncppbasa$Plurality <- factor(
  case_when(
    is.na(ncppbasa$C10) ~ "NA",  # Set missing values to "Missing Data"
    ncppbasa$C10 == 1 ~ "Singleton",
    ncppbasa$C10 %in% c(2, 3, 4) ~ "Twins, Triplets, or Quadruplets",
    TRUE ~ as.character(ncppbasa$C10)
  ),
  levels = c("Singleton", "Twins, Triplets, or Quadruplets", "NA")
)
category_covariates <- merge(category_covariates, ncppbasa[c("MOMID", "PREGID", "CHILDID", "Plurality")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)

ncppbasa$C272 <- as.numeric(replace(as.character(ncppbasa$C272), ncppbasa$C272 %in% c(".u", ".U"), NA))
ncppbasa$educ <- factor(
  with(ncppbasa, case_when(
    is.na(C272) ~ "NA",
    C272 %in% 0:2 ~ "<HS",
    C272 == 3 ~ "Some HS",
    C272 == 4 ~ "HS Grad",
    C272 %in% c(5, 6) ~ ">=Some College",
    TRUE ~ "NA"
  )),
  levels = c("<HS", "Some HS", "HS Grad", ">=Some College", "NA")
)
category_covariates <- merge(category_covariates, ncppbasa[c("MOMID", "PREGID", "CHILDID", "educ")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
category_covariates <- category_covariates %>%
  rename(`Education` = educ)

ncppbasa$C36 <- as.numeric(replace(as.character(ncppbasa$C36), ncppbasa$C36 %in% c(".u", ".U"), NA))

ncppbasa$marital <- factor(
  case_when(
    is.na(ncppbasa$C36) ~ "NA",  # Set missing values to "NA"
    ncppbasa$C36 == 1 ~ "Single",
    ncppbasa$C36 %in% c(2, 3) ~ "Married/Common Law",
    ncppbasa$C36 %in% c(4, 5, 6) ~ "Widowed/Divorced/Separated",
    TRUE ~ NA_character_
  ),
  levels = c("Single", "Married/Common Law", "Widowed/Divorced/Separated", "NA")  # Include "NA" as a level
)

category_covariates <- merge(category_covariates, ncppbasa[c("MOMID", "PREGID", "CHILDID", "marital")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
category_covariates <- category_covariates %>%
  rename(`Marital Status` = marital)
ncppbasa$C554 <- as.numeric(replace(as.character(ncppbasa$C554), ncppbasa$C554 %in% c(".u", ".U"), NA))


ncppbasa$infant_sex <- factor(
  case_when(
    is.na(ncppbasa$C554) ~ "NA",  # Set missing values to "NA"
    ncppbasa$C554 == 1 ~ "Male",
    ncppbasa$C554 == 2 ~ "Female",
    ncppbasa$C554 == 3 ~ "NA",
    TRUE ~ NA_character_
  ),
  levels = c("Male", "Female", "NA")  # Include "NA" as a level
)
category_covariates <- merge(category_covariates, ncppbasa[c("MOMID", "PREGID", "CHILDID", "infant_sex")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
category_covariates <- category_covariates %>%
  rename(`Sex of Infant` = infant_sex)

ncppbasa$C303 <- as.numeric(replace(as.character(ncppbasa$C303), ncppbasa$C303 %in% c(".u", ".U"), NA))
ncppbasa$C303 <- replace(ncppbasa$C303, ncppbasa$C303 == 3, 8)

ncppbasa$race_of_mother <- factor(ncppbasa$C303, levels = c(1, 2, 4, 8))
category_covariates <- merge(category_covariates, ncppbasa[c("MOMID", "PREGID", "CHILDID", "race_of_mother")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
levels(category_covariates$race_of_mother) <- c("White", "Black", "Puerto Rican", "Other")
category_covariates <- category_covariates %>%
  rename(Ethnicity = race_of_mother)

diabetes_htn_merged <- merge(diabetes_data, htn_data, by = c("MOMID", "PREGID"), all = TRUE)
category_covariates_full <- merge(diabetes_htn_merged, category_covariates, by = c("MOMID", "PREGID"), all = TRUE)

category_covariates_full <- category_covariates_full %>%
  mutate(
    HTN_PREG = factor(
      case_when(
        HTN_PREG == 0 ~ "Normotensive",
        HTN_PREG == 1 ~ "Chronic",
        HTN_PREG == 2 ~ "Gestational",
        HTN_PREG == 3 ~ "Preeclampsia",
        HTN_PREG == 4 ~ "Superimposed",
        is.na(HTN_PREG) ~ "Missing Hypertension Data"
      ),
      levels = c("Normotensive", "Chronic", "Gestational", "Preeclampsia", "Superimposed", "Missing Hypertension Data")
    ),
    HTN_PREG1950 = factor(
      case_when(
        HTN_PREG1950 == 0 ~ "Normotensive",
        HTN_PREG1950 == 1 ~ "Chronic",
        HTN_PREG1950 == 2 ~ "Gestational",
        HTN_PREG1950 == 3 ~ "Preeclampsia",
        HTN_PREG1950 == 4 ~ "Superimposed",
        is.na(HTN_PREG1950) ~ "Missing Hypertension Data"
      ),
      levels = c("Normotensive", "Chronic", "Gestational", "Preeclampsia", "Superimposed", "Missing Hypertension Data")
    ),
    `Diabetes Status` = factor(  # Renaming DM to Diabetes Status
      case_when(
        DM == 0 ~ "Normoglycemic",
        DM == 1 ~ "Pre-Pregnancy Diabetes",
        is.na(DM) ~ "NA",  # Add NA as a level
        TRUE ~ NA_character_
      ),
      levels = c("Normoglycemic", "Pre-Pregnancy Diabetes", "NA")  # Include "NA" as a level
    )
  )

category_covariates_full$C1092 <- ncppbasa$C1092
category_covariates_full <- category_covariates_full %>%
  filter(C1092 == 0 | (C1092 >= 51 & C1092 <= 58))
```

9.  To address missing data, I utilized multiple imputation, a statistical technique that allows for the handling of missing data in a way that minimizes bias and preserves statistical power. My approach involved using R programming, specifically the mice, VIM, and dplyr packages, which provided the necessary tools for this complex process. I began by aggregating the data using the aggr function from the VIM package to visualize the missing data patterns. This step was crucial to understand the extent and nature of the missing data in the NCPP dataset. I removed variables that do not require imputation or inclusion in the analysis for better clarity and efficiency.

```{r}
aggr(mice_data, col=c('navyblue', 'yellow'), numbers=TRUE, sortVars=TRUE,
      labels=names(mice_data), cex.axis=.5, gap=0,
      ylab=c("Histogram of missing data", "Pattern"))
```

Next, I created a binary matrix imp_where to identify the locations of the missing values. For the imputation methods, I carefully selected techniques appropriate for each variable type. Continuous variables were imputed using normal linear regression, ensuring that the inherent continuous nature of these data was preserved. Binary categorical variables were imputed using logistic regression. This method was ideal for modeling the probability of one category over another. For other categorical variables without a natural order, I chose polynomial regression imputation. This approach allowed for flexible modeling of relationships among unordered categories, which was essential for variables like hypertension during pregnancy, parity, plurality, income, education level, marital status, and the race of the mother. An initial empty imputation (maxit = 0) was performed to establish the default predictor matrix and methods.

I modified the predictor matrix to reflect the study's design, ensuring that certain variables were not used as predictors. I clearly defined which variables were treated as outcomes and covariates. Hypertension during pregnancy was the primary exposure variable, and it was included in the list of covariates. This distinction was important to examine its relationship with other covariates accurately. Adjustments to the predictor matrix were made to ensure that covariates predicted each other, as well as the outcome variables predicting each other. This step was crucial for a coherent and integrated imputation process. After saving the predictor matrix and imputation methods to disk, I proceeded with the final imputation. I used the specified imputation methods, predictor matrix, and parameters to generate multiple imputed datasets.

```{r}
imp_where <- is.na(mice_data)
meth <- vector("list", length = ncol(mice_data))
meth[c("weight_lb", "height_in", "Smoking", "age")] <- "norm"
meth[c("DM", "infant_sex", "PWS_1y", "IH_1y")] <- "logreg"
meth[c("HTN_PREG", "parity", "plurality", "income", "educ", "marital", "race_of_mother")] <- "polyreg"

impp_1 <- mice(mice_data, where = imp_where, seed = 13579, maxit = 0)
imputation_methods <- impp_1$meth
predictor_matrix <- impp_1$pred

predictor_matrix[, c("MOMID", "PREGID", "CHILDID", "infant_sex")] <- 0

covariates <- c("DM", "HTN_PREG", "weight_lb", "height_in", "age", "Smoking", "parity", "income", "plurality", "educ", "marital", "race_of_mother", "DM")
outcome_vars <- c("PWS_1y", "IH_1y")

predictor_matrix[outcome_vars, outcome_vars] <- 1
predictor_matrix[covariates, covariates] <- 1
predictor_matrix[outcome_vars, covariates] <- 0
predictor_matrix[covariates, outcome_vars] <- 0
```

I am using the specified imputation methods, predictor matrix, and parameters to generate multiple imputed datasets. `imputation_methods` is a list that contains the chosen imputation methods for each variable. `predictor_matrix` defines how variables predict each other during the imputation process. `where = imp_where` uses a binary matrix to identify the locations of missing values. Setting `m = 5` generates multiple imputations. The `seed = 12345` parameter ensures reproducibility by fixing the random seed. A maximum iteration limit of `maxit = 50` controls the refinement of imputed values during each iteration. `nnet.MaxNWts = 5000` controls the maximum number of weights in the neural network model used for imputation when "logreg" or "polyreg" methods are employed.

```{r}
final_imputation <- mice(mice_data, meth = imputation_methods, pred = predictor_matrix,
                         where = imp_where, m = 5, seed = 12345, 
                         maxit = 50, nnet.MaxNWts = 5000)
comp <- complete(final_imputation, "long") # complete the imputed datasets
```

10. Creating new variables in the pooled dataset: V1 when suspect is treated as absent, V2 when suspect is treated as present, and a composite variable that groups them together. These variables will be used for sensitivity analysis later in the project.

```{r}
long <- mice::complete(final_imputation, "long", include = TRUE)
long$BMI <- with(long, (weight_lb/(height_in)^2)*703)

# V1 is if it's suspect then it's absent
long$PWS_1y_V1 <- ifelse(long$PWS_1y == 2, 0, long$PWS_1y)

# V2 is if it's suspect then it's present
long$PWS_1y_V2 <- ifelse(long$PWS_1y == 2, 1, long$PWS_1y)

# V1 is if it's suspect then it's absent
long$IH_1y_V1 <- ifelse(long$IH_1y == 2, 0, long$IH_1y)

# V2 is if it's suspect then it's present
long$IH_1y_V2 <- ifelse(long$IH_1y == 2, 1, long$IH_1y)

# Create a new variable for general practitioner (not the neuro 1y) vist at 1y  
long$gp_VN_1y <- with(long, ifelse(PWS_1y == 0 & IH_1y == 0, 0,
                                  ifelse(PWS_1y == 1 | IH_1y == 1, 1,
                                         ifelse(PWS_1y == 2 | IH_1y == 2, 2, NA))))
long$gp_VN_1y_V1 <- ifelse(long$gp_VN_1y == 2, 0, long$gp_VN_1y)
long$gp_VN_1y_V2 <- ifelse(long$gp_VN_1y == 2, 1, long$gp_VN_1y)
imp.itt <- as.mids(long)
```

11. I recategorized certain covariates to ensure their proper adjustment in the log binomial models. This was done with the pooled data from after imputation.

```{r}
long$Smoking_cov <- ifelse(long$Smoking >= 1 & long$Smoking <= 19, 1, 
                           ifelse(long$Smoking >= 20, 2, long$Smoking))
long$marital_cov <- ifelse(long$marital %in% c(2, 3), 0,
                           ifelse(long$marital %in% c(4, 5, 6), 2, long$marital))
long$income_cov <- ifelse(long$income == 3, 0, 
                          ifelse(long$income %in% c(1, 2), 1, long$income))
long$parity_cov <- ifelse(long$parity >= 4, 4, long$parity)
long$educ_cov <- ifelse(long$educ %in% c(0, 1, 2), 1, 
                        ifelse(long$educ == 3, 0, long$educ))
long$plurality_cov <- ifelse(long$plurality %in% c(2, 3, 4), 2, long$plurality)
long$race_of_mother_cov <- ifelse(long$race_of_mother == 3, 8, long$race_of_mother)
imp.itt <- as.mids(long)
```

## Results {#sec-results}

1.  These are two summary tables presenting covariates stratified by hypertension level. The stratification is based on both historical and contemporary definitions of hypertension. The **`tbl_summary`** function is used to generate a summary table (**`Table 1`**) based on the dataset **`category_covariates_full`**. It includes the covariates specified in the **`covariates`** variable. The table summarizes various statistics for these covariates, such as means (average values), standard deviations (how much the values vary), counts, percentages, and missing data. The table is stratified or organized by the presence or absence of hypertensive disorders during pregnancy in the year 2023 (indicated by the **`by = HTN_PREG`** argument). Similar to Table 1, another summary table (**`Table 2`**) is created using the **`tbl_summary`** function. This time, the data is stratified by the presence or absence of hypertension, as it was defined in 1950 (**`by = HTN_PREG1950`**).

```{r}
#| warning: false
#| message: false
covariates <- c(
  "Age", "Annual Income", "Education", "Marital Status", 
  "Pre-Pregnancy BMI (kg/m^2)", "Pre-Pregnancy BMI Category", 
  "Smoking (Number of Cigarettes/Day)", "Diabetes Status", 
  "Number of times given birth", "Plurality", "Sex of Infant", 
  "Ethnicity"
)

tbl_summary(
  category_covariates_full,
  include = covariates,
  statistic = list(
    all_continuous() ~ "{mean} ({sd})",
    all_stat_cols() ~ "{n} / {N} ({p}%)"
  ),
  by = HTN_PREG,
  missing = "ifany"
) %>%
add_overall(statistic = all_stat_cols() ~ "{n} / {N} ({p}%)", header = "") %>%
modify_caption("**Table 1. Participant Characteristics Stratified by Hypertensive Disorders in Pregnancy (2023)**") %>%
modify_header(label = "") %>%
bold_labels()

tbl_summary(
  category_covariates_full,
  include = covariates,
  statistic = list(
    all_continuous() ~ "{mean} ({sd})",
    all_stat_cols() ~ "{n} / {N} ({p}%)"
  ),
  by = HTN_PREG1950,
  missing = "ifany"
) %>%
add_overall(statistic = all_stat_cols() ~ "{n} / {N} ({p}%)", header = "Total") %>%
modify_caption("**Table 2. Pregnancy Characteristics Stratified by Hypertension (1950)**") %>%
modify_header(label = "") %>%
bold_labels()

```

3.  These are visualizations that describe the summary tables. I first generated random values for the variable '**`value`**' using a normal distribution with a mean of 0 and a standard deviation of 15. A table called '**`Ethnicity_counts`**' is created by counting the occurrences of different ethnicities in a dataset ('**`category_covariates_full`**'). The desired order of ethnicity categories is defined as '**`White`**,' '**`Black`**,' '**`Puerto Rican`**,' and '**`Other`**.' I created a data frame ('**`merged_counts_df`**') with two columns: '**`Ethnicity_Category`**' and '**`Ethnicity`**.' The '**`Ethnicity_Category`**' column represents the ethnicities in the desired order, and the '**`Ethnicity`**' column contains the corresponding counts. Rows where the '**`Ethnicity_Category`**' is "Missing Hypertension Data" are filtered out. I calculated the proportion of each ethnicity category as a percentage of the total and added this information to the '**`Proportion`**' column in the data frame. A vector of colors is defined to use in the plot. I created a bar plot using '**`ggplot2`**.' Each bar represents the proportion of a specific ethnicity category. The x-axis is fixed at 1, and the y-axis represents the proportion. The appearance of the plot is customized by specifying colors for the bars, adding labels with proportions, setting the axis labels, and adjusting various visual elements such as font size and legend placement. I repeated this same exact process for every visualization after this one.

```{r}
value <- abs(rnorm(12, 0, 15))
Ethnicity_counts <- table(category_covariates_full$Ethnicity)
desired_order <- c("White", "Black", "Puerto Rican", "Other")

merged_counts_df <- data.frame(Ethnicity_Category = factor(names(Ethnicity_counts), levels = desired_order), 
                               Ethnicity = as.vector(Ethnicity_counts))
merged_counts_df <- merged_counts_df %>%
  filter(Ethnicity_Category != "Missing Hypertension Data")
merged_counts_df <- merged_counts_df %>%
  mutate(
    Proportion = (Ethnicity / sum(Ethnicity)) * 100
  )

colors <- c("#E4C1F9", "#F4B5BD", "#FBE7C6", "#BFD8BD")

ggplot(merged_counts_df, aes(x = 1, y = Proportion, fill = Ethnicity_Category)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colors) +
  geom_text(aes(label = sprintf("%.1f%%", Proportion)),
            position = position_stack(vjust = 0.5),
            size = 3.5,  # Slightly larger text within bars
            color = "black") +
  labs(x = "", y = "Proportion (%)", title = "Distribution of Ethnicity Categories") +  # Corrected the closing parenthesis and added "+" after "title"
  theme_minimal() +
  theme(legend.position = "right",
        legend.title = element_blank(),
        text = element_text(size = 14), 
        axis.text.x = element_blank(), 
        axis.text.y = element_blank(),  
        axis.ticks.y = element_blank(),  
        plot.title = element_text(size = 16, face = "bold"),
        plot.subtitle = element_text(size = 14))
```

```{r}
HTN_Smoking_counts <- table(category_covariates_full$HTN_PREG, 
                            category_covariates_full$`Smoking (Number of Cigarettes/Day)`, 
                            exclude = NA)

HTN_Smoking_df <- as.data.frame(HTN_Smoking_counts)
colnames(HTN_Smoking_df) <- c("HTN_PREG", "Smoking", "Freq")
HTN_Smoking_df <- HTN_Smoking_df %>%
  filter(HTN_PREG != "Missing Hypertension Data", Smoking != "NA")

HTN_Smoking_df <- HTN_Smoking_df %>%
  group_by(HTN_PREG) %>%
  mutate(
    Proportion = (Freq / sum(Freq)) * 100
  ) %>%
  ungroup()

pastel_colors <- c("#FFC0CB", "#B0C4DE", "#FFD700")

ggplot(HTN_Smoking_df, aes(x = HTN_PREG, y = Proportion, fill = Smoking)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(
    title = "Smoking Category Distribution Across Hypertension Levels",
    y = "Proportion (%)",
    fill = "Smoking Categories"
  ) +
  scale_fill_manual(values = pastel_colors) +  # Specify pastel colors here
  theme_minimal() +
  theme(axis.title.x = element_blank())
```

```{r}
HTN_Ethnicity_counts <- table(
  category_covariates_full$HTN_PREG,
  category_covariates_full$Ethnicity,
  exclude = NA
)

HTN_Ethnicity_df <- as.data.frame(HTN_Ethnicity_counts)
colnames(HTN_Ethnicity_df) <- c("HTN_PREG", "Ethnicity", "Freq")

HTN_Ethnicity_df <- HTN_Ethnicity_df %>%
  filter(HTN_PREG != "Missing Hypertension Data", Ethnicity != "NA")

HTN_Ethnicity_df <- HTN_Ethnicity_df %>%
  group_by(HTN_PREG) %>%
  mutate(
    Proportion = (Freq / sum(Freq)) * 100
  ) %>%
  ungroup()

pastel_colors <- c("#988ed5", "#5ab4ac", "#FFA07A", "#e7ba52")

ggplot(HTN_Ethnicity_df, aes(x = HTN_PREG, y = Proportion, fill = Ethnicity)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(
    title = "Ethnicity Category Distribution Across Hypertension Levels",
    y = "Proportion (%)",
    fill = "Ethnicity Categories"
  ) +
  scale_fill_manual(values = pastel_colors) +  # Specify pastel colors here
  theme_minimal() +
  theme(axis.title.x = element_blank())
```

```{r}
HTN_Birth_counts <- table(
  category_covariates_full$HTN_PREG,
  category_covariates_full$`Number of times given birth`,  # Use backticks for column names with spaces
  exclude = NA
)

HTN_Birth_df <- as.data.frame(HTN_Birth_counts)

colnames(HTN_Birth_df) <- c("HTN_PREG", "Number_of_Births", "Freq")

HTN_Birth_df <- HTN_Birth_df %>%
  filter(HTN_PREG != "Missing Hypertension Data", Number_of_Births != "NA")

HTN_Birth_df <- HTN_Birth_df %>%
  group_by(HTN_PREG) %>%
  mutate(
    Proportion = (Freq / sum(Freq)) * 100
  ) %>%
  ungroup()

pastel_contrasting_colors <- c("#FFC0CB", "#FFD700", "#00CED1", "#FFA500", "#BA55D3")

ggplot(HTN_Birth_df, aes(x = HTN_PREG, y = Proportion, fill = Number_of_Births)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
  labs(
    title = "Parity Category Distribution Across Hypertension Levels",
    y = "Proportion (%)",
    x = "HTN_PREG Levels",
    fill = "Number of Births Categories"
  ) +
  scale_fill_manual(values = pastel_contrasting_colors) +
  theme_minimal() +
  theme(axis.title.x = element_blank())
```

```{r}
HTN_Diabetes_counts <- table(
  category_covariates_full$HTN_PREG,
  category_covariates_full$`Diabetes Status`,  # Use backticks for column names with spaces
  exclude = NA
)

HTN_Diabetes_df <- as.data.frame(HTN_Diabetes_counts)
colnames(HTN_Diabetes_df) <- c("HTN_PREG", "Diabetes_Status", "Freq")

HTN_Diabetes_df <- HTN_Diabetes_df %>%
  filter(HTN_PREG != "Missing Hypertension Data", Diabetes_Status != "NA")

HTN_Diabetes_df <- HTN_Diabetes_df %>%
  group_by(HTN_PREG) %>%
  mutate(
    Proportion = (Freq / sum(Freq)) * 100
  ) %>%
  ungroup()

blueberry_colors <- c("#B0E0E6", "#4169E1")

ggplot(HTN_Diabetes_df, aes(x = HTN_PREG, y = Proportion, fill = Diabetes_Status)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(
    title = "Diabetes Category Distribution Across Hypertension Levels",
    y = "Proportion (%)",
    fill = "Diabetes Status Categories"
  ) +
  scale_fill_manual(values = blueberry_colors) +  # Specify blueberry colors here
  theme_minimal() +
  theme(axis.title.x = element_blank())
```

```{r}
HTN_BMI_counts <- table(
  category_covariates_full$HTN_PREG,
  category_covariates_full$`Pre-Pregnancy BMI Category`,  # Use backticks for column names with spaces
  exclude = NA
)

HTN_BMI_df <- as.data.frame(HTN_BMI_counts)
colnames(HTN_BMI_df) <- c("HTN_PREG", "BMI_Category", "Freq")

HTN_BMI_df <- HTN_BMI_df %>%
  filter(HTN_PREG != "Missing Hypertension Data", BMI_Category != "NA")

HTN_BMI_df <- HTN_BMI_df %>%
  group_by(HTN_PREG) %>%
  mutate(
    Proportion = (Freq / sum(Freq)) * 100
  ) %>%
  ungroup()

neutral_pastel_colors <- c("#B0B0B0", "#D8D8D8", "#EAEAEA", "#FFBC9A")

ggplot(HTN_BMI_df, aes(x = HTN_PREG, y = Proportion, fill = BMI_Category)) +
  geom_bar(stat = "identity", position = "stack") +
  labs(
    title = "BMI Category Distribution Across Hypertension Levels",
    y = "Proportion (%)",
    fill = "BMI Categories"
  ) +
  scale_fill_manual(values = neutral_pastel_colors) +  # Specify neutral and pastel colors here
  theme_minimal() +
  theme(axis.title.x = element_blank())

```

```{r}

value <- abs(rnorm(12, 0, 15))
Sex_counts <- table(category_covariates_full$`Sex of Infant`)

desired_order <- c("Male", "Female")

merged_counts_df <- data.frame(
  Sex_Category = factor(names(Sex_counts), levels = desired_order),
  Sex_of_Infant = as.vector(Sex_counts)
)

merged_counts_df <- merged_counts_df %>%
  filter(Sex_Category != "Missing Hypertension Data")

merged_counts_df <- merged_counts_df %>%
  mutate(
    Proportion = (Sex_of_Infant / sum(Sex_of_Infant)) * 100
  )

colors <- c("#BFEFFF", "#FFC0A7")

ggplot(merged_counts_df, aes(x = 1, y = Proportion, fill = Sex_Category)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colors) +
  geom_text(
    aes(label = sprintf("%.1f%%", Proportion)),
    position = position_stack(vjust = 0.5),
    size = 3.5,
    color = "black"
  ) +
  labs(
    x = "",
    y = "Proportion (%)",
    title = "Distribution of Sex of Infant"
  ) +
  theme_minimal() +
  theme(
    legend.position = "right",
    legend.title = element_blank(),
    text = element_text(size = 14),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 14)
  )

```

2.  This is stacked bar plot depicting the distribution of participants based on each hypertension definition to illustrate the differences in distribution. After merging and organizing the data, I calculated the proportions of diagnoses for each hypertension category and converted these proportions into percentages. To make the data suitable for visualization, I reshaped it into a long format and defined colors for the forthcoming bar chart. The resulting bar chart, created using the **`ggplot2`** package, effectively illustrates how the diagnosis of hypertension has transformed over this 73-year period, emphasizing shifts in diagnostic criteria and their impact on the distribution of hypertension categories.

```{r}
HTN_PREG_counts <- table(category_covariates_full$HTN_PREG)
HTN_PREG1950_counts <- table(category_covariates_full$HTN_PREG1950)
merged_counts <- cbind(HTN_PREG = HTN_PREG_counts, HTN_PREG1950 = HTN_PREG1950_counts)
merged_counts_df <- as.data.frame(merged_counts)
merged_counts_df$Hypertension_Category <- rownames(merged_counts_df)
merged_counts_df <- merged_counts_df %>%
  filter(Hypertension_Category != "Missing Hypertension Data")

merged_counts_df <- merged_counts_df %>%
  mutate(
    HTN_PREG = (HTN_PREG / sum(HTN_PREG)) * 100,
    HTN_PREG1950 = (HTN_PREG1950 / sum(HTN_PREG1950)) * 100
  )

merged_counts_long <- merged_counts_df %>%
  pivot_longer(
    cols = starts_with("HTN"),
    names_to = "Group",
    values_to = "Proportion")

colors <- c("#E4C1F9", 
            "#F4B5BD",
            "#FBE7C6", 
            "#BFD8BD",
            "#A9DEF9" 
           )

merged_counts_long$Hypertension_Category <- fct_reorder(merged_counts_long$Hypertension_Category, merged_counts_long$Proportion)

ggplot(merged_counts_long, aes(x = Group, y = Proportion, fill = Hypertension_Category)) +
  geom_bar(stat = "identity", position = "fill") +
  scale_fill_manual(values = colors) +
  geom_text(aes(label = sprintf("%.1f%%", Proportion), group = Hypertension_Category),
            position = position_fill(vjust = 0.5),
            size = 3.5,  # slightly larger text within bars
            color = "black") +
  labs(x = "", y = "Percentage of Diagnoses (%)", title = "Redefining Hypertension: Changes in Diagnostic Criteria from 1950 to 2023",
       subtitle = "Visualizing the Transition in Hypertension Classifications Over 73 Years") +
  theme_minimal() +
  theme(legend.position = "right",
        legend.title = element_blank(),
        text = element_text(size = 14), 
        axis.text.x = element_text(angle = 45, hjust = 1, size = 12), 
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),  
        plot.title = element_text(size = 16, face = "bold"),
        plot.subtitle = element_text(size = 14)) +
  guides(fill = guide_legend(reverse = TRUE))

```

3.  I have generated tables to display the counts of the vascular nevi outcome. Initially, I created duplicate variables in the **`mice_data`** data frame for specific variables such as **`PWS_1y`**, **`IH_1y`**, **`combovascnevi_1y`**, and **`HTN_PREG1950`**. These duplicate variables have the "\_copy" suffix added to their names. Then, I categorized the values in the **`HTN_PREG_copy`** variable into different categories such as "Normotensive," "Chronic Hypertension," "Gestational Hypertension," "Preeclampsia," "Superimposed Preeclampsia," and "Missing Outcome Data." I also renamed variables in the **`mice_data`** data frame to provide more descriptive labels, making it easier to interpret the data. Lastly, I generated summary tables (**`mice_data_summary_2023`** and **`mice_data_summary_1950`**) that provide counts and percentages of specific variables, including "Strawberry Hemangioma \@ 1 Year," "Port-Wine Stain \@ 1 Year," and "Vascular Nevi \@ 1 Year (Combined)," categorized by hypertension levels.

```{r}
#| message: false
variables_to_duplicate <- c("PWS_1y", "IH_1y", "combovascnevi_1y", "HTN_PREG1950")

# Create duplicated variables with "_copy" suffix in the mice_data data frame
for (variable in variables_to_duplicate) {
  new_variable_name <- paste0(variable, "_copy")
  mice_data[[new_variable_name]] <- mice_data[[variable]] # Duplicate and assign the values
}

mice_data$HTN_PREG_copy <- factor(
  case_when(
    mice_data$HTN_PREG == 0 ~ "Normotensive",
    mice_data$HTN_PREG == 1 ~ "Chronic Hypertension",
    mice_data$HTN_PREG == 2 ~ "Gestational Hypertension",
    mice_data$HTN_PREG == 3 ~ "Preeclampsia",
    mice_data$HTN_PREG == 4 ~ "Superimposed Preeclampsia",
    is.na(mice_data$HTN_PREG) ~ "Missing Outcome Data"
  ),
  levels = c("Normotensive", "Chronic Hypertension", "Gestational Hypertension", "Preeclampsia", "Superimposed Preeclampsia", "Missing Outcome Data")
)

# Replace values in specified variables with custom labels
variables_to_factor <- c("combovascnevi_1y_copy", "IH_1y_copy", "PWS_1y_copy")

for (var in variables_to_factor) {
  mice_data[[var]] <- factor(
    case_when(
      mice_data[[var]] == 0 ~ "Normal",
      mice_data[[var]] == 1 ~ "Definite",
      mice_data[[var]] == 2 ~ "Suspect",
      is.na(mice_data[[var]]) ~ "Missing Outcome Data"
    ),
    levels = c("Normal", "Definite", "Suspect", "Missing Outcome Data")
  )
}

mice_data <- mice_data %>%
  rename(
    `Port-Wine Stain @ 1 Year` = PWS_1y_copy,
    `Strawberry Hemangioma @ 1 Year` = IH_1y_copy,
    `Vascular Nevi @ 1 Year (Combined)` = combovascnevi_1y_copy
  )

# Generate summary table
mice_data_summary_2023 <- mice_data %>%
  tbl_summary(
    include = c(
      "Strawberry Hemangioma @ 1 Year",
      "Port-Wine Stain @ 1 Year",
      "Vascular Nevi @ 1 Year (Combined)"
    ),
    statistic = all_stat_cols() ~ "{n} / {N} ({p}%)",
    by = HTN_PREG_copy,
    missing = "ifany"
  ) %>%
  add_overall(statistic = all_stat_cols() ~ "{n} / {N} ({p}%)", header = "Total") %>%
  modify_caption("*Table 2. Counts of Strawberry Hemangioma, Port-Wine Stain, and Vascular Nevis at 1 Year by Hypertension Levels*") %>%
  modify_header(label = "") %>%
  bold_labels()

mice_data_summary_2023

mice_data$HTN_PREG1950_copy <- factor(
  case_when(
    mice_data$HTN_PREG1950 == 0 ~ "Normotensive",
    mice_data$HTN_PREG1950 == 1 ~ "Chronic",
    mice_data$HTN_PREG1950 == 2 ~ "Gestational",
    mice_data$HTN_PREG1950 == 3 ~ "Preeclampsia",
    mice_data$HTN_PREG1950 == 4 ~ "Superimposed",
    is.na(mice_data$HTN_PREG1950) ~ "Missing Outcome Data"
  ),
  levels = c("Normotensive", "Chronic", "Gestational", "Preeclampsia", "Superimposed", "Missing Outcome Data")
)

# Generate summary table
mice_data_summary_1950 <- mice_data %>%
  tbl_summary(
    include = c(
      "Strawberry Hemangioma @ 1 Year",
      "Port-Wine Stain @ 1 Year",
      "Vascular Nevi @ 1 Year (Combined)"
    ),
    statistic = all_stat_cols() ~ "{n} / {N} ({p}%)",
    by = HTN_PREG1950_copy,
    missing = "ifany"
  ) %>%
  add_overall(statistic = all_stat_cols() ~ "{n} / {N} ({p}%)", header = "Total") %>%
  modify_caption("*Table 2. Counts of Strawberry Hemangioma, Port-Wine Stain, and Vascular Nevis at 1 Year and 7 Years by Hypertension Levels (1950)*") %>%
  modify_header(label = "") %>%
  bold_labels()

mice_data_summary_1950

```

4.  The following two code chunks contain log binomial models. In this code, I defined a function called `calculate_unadjusted_pooled_summary` that calculates unadjusted pooled summaries for different disease outcomes. The function takes as input a dataset (`data`), an outcome variable (`outcome`), and a disease name (`disease_name`). Inside the function, I first create a logistic regression model using the `glm` function to analyze the relationship between the outcome and a binary variable representing hypertension in 1950 (`HTN_PREG1950`). I extract summary statistics, including estimates, standard errors, and relative risks, from the model results. I then calculate confidence intervals for the relative risks based on a specified confidence level (in this case, 95%) and store these values in the summary dataframe. Additional columns such as "type," "disease," and "acog_year" are added to the summary dataframe to indicate the type of analysis, the disease name, and the year of ACOG guidelines being considered (1950 in this case). Next, I create an empty list called `result_list` to store the results of unadjusted pooled summaries. I define vectors of outcome variables and disease names to iterate through. For each outcome variable and disease name, I call the `calculate_unadjusted_pooled_summary` function, print the results, and append them to the `result_list`. After processing all the outcome variables, I combine the individual dataframes in `result_list` into a single dataframe named `unadj_PWSIH_1950`. Finally, I select and filter specific columns of interest, resulting in a refined dataframe that contains the relevant information for further analysis and presentation. The second chunk does the same thing but for 2023. The two chunks after the second chunk are also the same thing but covariates were adjusted for in the models.

```{r}
calculate_unadjusted_pooled_summary <- function(data, outcome, disease_name) {
  formula <- with(data, glm(get(outcome) ~ factor(HTN_PREG1950), family = binomial(link = "logit")))
  pooled_summary <- summary(pool(formula))
  pooled_summary$relative_risks <- exp(pooled_summary$estimate)

confidence_level <- 0.95
z <- qnorm(1 - (1 - confidence_level) / 2)
ci_lower <- pooled_summary$relative_risks - z * pooled_summary$std.error
ci_upper <- pooled_summary$relative_risks + z * pooled_summary$std.error
pooled_summary$ci_lower <- ci_lower
pooled_summary$ci_upper <- ci_upper
  
  # Add a new column "type" and "disease" with appropriate values
  pooled_summary$type <- "Unadjusted"
  pooled_summary$disease <- disease_name
  pooled_summary$acog_year <- "1950"
  
  return(pooled_summary)
}

# Create an empty list to store the results
result_list <- list()

# Define a vector of outcome variables and disease names
outcome_variables <- c("PWS_1y_V1", "IH_1y_V1", "PWS_1y_V2", "IH_1y_V2", "gp_VN_1y_V1")
disease_names <- c("PWS_1y_V1", "IH_1y_V1", "PWS_1y_V2", "IH_1y_V2", "gp_VN_1y_V1")

# Loop through the outcome variables and calculate/print unadjusted pooled summaries
for (i in seq_along(outcome_variables)) {
  outcome_variable <- outcome_variables[i]
  disease_name <- disease_names[i]
  
  result_unadj <- calculate_unadjusted_pooled_summary(imp.itt, outcome_variable, disease_name)
  
  # Append the result to the list
  result_list[[i]] <- result_unadj
}

# Combine the list of dataframes into a single dataframe
unadj_PWSIH_1950 <- do.call(rbind, result_list)

# Combine the list of dataframes into a single dataframe
unadj_PWSIH_1950 <- do.call(rbind, result_list)
unadj_PWSIH_1950 <- unadj_PWSIH_1950 %>%
  select(term, relative_risks, ci_lower, ci_upper, p.value, type, disease, acog_year) %>%
  filter(grepl("HTN_PREG", term))
```

```{r}
calculate_unadjusted_pooled_summary <- function(data, outcome, disease_name) {
  formula <- with(data, glm(get(outcome) ~ factor(HTN_PREG), family = binomial(link = "logit")))
  pooled_summary <- summary(pool(formula))
  
  pooled_summary$relative_risks <- exp(pooled_summary$estimate)
  confidence_level <- 0.95
  z <- qnorm(1 - (1 - confidence_level) / 2)
  
  ci_lower <- pooled_summary$relative_risks - z * pooled_summary$std.error
  ci_upper <- pooled_summary$relative_risks + z * pooled_summary$std.error
  
  pooled_summary$ci_lower <- ci_lower
  pooled_summary$ci_upper <- ci_upper
  
  pooled_summary$type <- "Unadjusted"
  pooled_summary$disease <- disease_name
  pooled_summary$acog_year <- "2023"
  
  return(pooled_summary)
}

result_list <- list()

# Loop through the outcome variables and calculate/print unadjusted pooled summaries
for (i in seq_along(outcome_variables)) {
  outcome_variable <- outcome_variables[i]
  disease_name <- disease_names[i]
  
  result_unadj <- calculate_unadjusted_pooled_summary(imp.itt, outcome_variable, disease_name)
  
  # Append the result to the list
  result_list[[i]] <- result_unadj
}

# Combine the list of dataframes into a single dataframe
unadj_PWSIH_2023 <- do.call(rbind, result_list)
unadj_PWSIH_2023 <- unadj_PWSIH_2023 %>%
  select(term, relative_risks, ci_lower, ci_upper, p.value, type, disease, acog_year) %>%
  filter(grepl("HTN_PREG", term))

unadj_PWSIH_FULL <- bind_rows(unadj_PWSIH_1950, unadj_PWSIH_2023)

```

5.  The next two code chunks are the same as the previous two code chunks, but they include additional covariates in the log-binomial models for adjustment.

```{r}
calculate_adjusted_pooled_summary <- function(data, outcome, disease_name) {
  formula <- with(data, glm(get(outcome) ~ factor(HTN_PREG) + age + DM + BMI + factor(parity_cov) + factor(plurality_cov) + factor(income_cov) + factor(educ_cov) + factor(marital_cov) + infant_sex + factor(race_of_mother_cov) + factor(Smoking_cov), family = binomial(link = "logit")))
  pooled_summary <- summary(pool(formula))
  pooled_summary$relative_risks <- exp(pooled_summary$estimate)
  
  confidence_level <- 0.95
  z <- qnorm(1 - (1 - confidence_level) / 2)
  ci_lower <- pooled_summary$relative_risks - z * pooled_summary$std.error
  ci_upper <- pooled_summary$relative_risks + z * pooled_summary$std.error
  pooled_summary$ci_lower <- ci_lower
  pooled_summary$ci_upper <- ci_upper
  
  # Add a new column "type" and "disease" with appropriate values
  pooled_summary$type <- "Adjusted"
  pooled_summary$disease <- disease_name
  pooled_summary$acog_year <- "2023"
  
  return(pooled_summary)
}

# Create an empty list to store the results
adj_2023_result_list <- list()

for (i in seq_along(outcome_variables)) {
  outcome_variable <- outcome_variables[i]
  disease_name <- disease_names[i]
  
  result_adj <- calculate_adjusted_pooled_summary(imp.itt, outcome_variable, disease_name)
  
  # Append the result to the list
  adj_2023_result_list[[i]] <- result_adj
}

adj_PWSIH_2023 <- do.call(rbind, adj_2023_result_list)

adj_PWSIH_2023$relative_risks <- round(adj_PWSIH_2023$relative_risks, 2)
adj_PWSIH_2023$ci_lower <- round(adj_PWSIH_2023$ci_lower, 2)
adj_PWSIH_2023$ci_upper <- round(adj_PWSIH_2023$ci_upper, 2)

# Select and filter the data
adj_PWSIH_2023 <- adj_PWSIH_2023 %>%
  select(term, relative_risks, ci_lower, ci_upper, p.value, type, disease, acog_year) %>%
  filter(grepl("HTN_PREG", term))

# Rename values in the "term" column
adj_PWSIH_2023$term <- as.character(adj_PWSIH_2023$term)
adj_PWSIH_2023$term[which(adj_PWSIH_2023$term == "factor(HTN_PREG)1" | adj_PWSIH_2023$term == "factor(HTN_PREG1950)1")] <- "Chronic Hypertension"
adj_PWSIH_2023$term[which(adj_PWSIH_2023$term == "factor(HTN_PREG)2" | adj_PWSIH_2023$term == "factor(HTN_PREG1950)2")] <- "Gestational Hypertension"
adj_PWSIH_2023$term[which(adj_PWSIH_2023$term == "factor(HTN_PREG)3" | adj_PWSIH_2023$term == "factor(HTN_PREG1950)3")] <- "Preeclampsia"
adj_PWSIH_2023$term[which(adj_PWSIH_2023$term == "factor(HTN_PREG)4" | adj_PWSIH_2023$term == "factor(HTN_PREG1950)4")] <- "Superimposed Preeclampsia"

adj_PWSIH_2023 <- adj_PWSIH_2023 %>%
  mutate(display = paste(relative_risks, " (", ci_lower, ",", ci_upper, ")"))

```

```{r}

calculate_adjusted_pooled_summary <- function(data, outcome, disease_name) {
  formula <- with(data, glm(get(outcome) ~ factor(HTN_PREG1950) + age + DM + BMI + factor(parity_cov) + factor(plurality_cov) + factor(income_cov) + factor(educ_cov) + factor(marital_cov) + infant_sex + factor(race_of_mother) + factor(Smoking_cov), family = binomial(link = "logit")))
  pooled_summary <- summary(pool(formula))
  pooled_summary$relative_risks <- exp(pooled_summary$estimate)
  confidence_level <- 0.95
  z <- qnorm(1 - (1 - confidence_level) / 2)
  ci_lower <- pooled_summary$relative_risks - z * pooled_summary$std.error
  ci_upper <- pooled_summary$relative_risks + z * pooled_summary$std.error
  pooled_summary$ci_lower <- ci_lower
  pooled_summary$ci_upper <- ci_upper
  
  # Add a new column "type" and "disease" with appropriate values
  pooled_summary$type <- "Adjusted"
  pooled_summary$disease <- disease_name
  pooled_summary$acog_year <- "1950"
  
  return(pooled_summary)
}

# Create an empty list to store the results
result_list <- list()

# Loop through the outcome variables and calculate/print unadjusted pooled summaries
for (i in seq_along(outcome_variables)) {
  outcome_variable <- outcome_variables[i]
  disease_name <- disease_names[i]
  
  result_adj <- calculate_adjusted_pooled_summary(imp.itt, outcome_variable, disease_name)
  
  # Append the result to the list
  result_list[[i]] <- result_adj
}

# Combine the list of dataframes into a single dataframe
adj_PWSIH_1950 <- do.call(rbind, result_list)

# Select the desired columns and filter rows where term contains "HTN_PREG"
adj_PWSIH_1950 <- adj_PWSIH_1950 %>%
  select(term, relative_risks, ci_lower, ci_upper, p.value, type, disease, acog_year) %>%
  filter(grepl("HTN_PREG", term))

adj_PWSIH_FULL <- bind_rows(adj_PWSIH_1950, adj_PWSIH_2023)
unadj_PWSIH_FULL <- bind_rows(unadj_PWSIH_1950, unadj_PWSIH_2023)

adj_and_unadj_PWSIH_FULL <- bind_rows(adj_PWSIH_FULL, unadj_PWSIH_FULL)
adj_and_unadj_PWSIH_FULL$relative_risks <- round(adj_and_unadj_PWSIH_FULL$relative_risks, 2)
adj_and_unadj_PWSIH_FULL$ci_lower <- round(adj_and_unadj_PWSIH_FULL$ci_lower, 2)
adj_and_unadj_PWSIH_FULL$ci_upper <- round(adj_and_unadj_PWSIH_FULL$ci_upper, 2)

adj_and_unadj_PWSIH_FULL <- adj_and_unadj_PWSIH_FULL %>%
  mutate(p.value = case_when(
    p.value < 0.005 ~ "<0.005",
    p.value < 0.001 ~ "<0.001",
    p.value < 0.01  ~ "<0.01",
    p.value < 0.05  ~ "<0.05",
    TRUE            ~ as.character(round(p.value, 2))
  ))

adj_and_unadj_PWSIH_FULL$term <- as.character(adj_and_unadj_PWSIH_FULL$term)
adj_and_unadj_PWSIH_FULL$term[which(adj_and_unadj_PWSIH_FULL$term == "factor(HTN_PREG)1" | adj_and_unadj_PWSIH_FULL$term == "factor(HTN_PREG1950)1")] <- "Chronic Hypertension"
adj_and_unadj_PWSIH_FULL$term[which(adj_and_unadj_PWSIH_FULL$term == "factor(HTN_PREG)2" | adj_and_unadj_PWSIH_FULL$term == "factor(HTN_PREG1950)2")] <- "Gestational Hypertension"
adj_and_unadj_PWSIH_FULL$term[which(adj_and_unadj_PWSIH_FULL$term == "factor(HTN_PREG)3" | adj_and_unadj_PWSIH_FULL$term == "factor(HTN_PREG1950)3")] <- "Preeclampsia"
adj_and_unadj_PWSIH_FULL$term[which(adj_and_unadj_PWSIH_FULL$term == "factor(HTN_PREG)4" | adj_and_unadj_PWSIH_FULL$term == "factor(HTN_PREG1950)4")] <- "Superimposed Preeclampsia"

adj_and_unadj_PWSIH_FULL <- adj_and_unadj_PWSIH_FULL %>%
mutate(display = paste(relative_risks, " (",ci_lower,",",ci_upper,")"))

adj_and_unadj_PWSIH_FULL %>% knitr::kable()
```

6.  I am preparing the data frames from the results section for a sensitivity analysis involving two versions, V1 and V2, of vascular nevi classification based on definiteness and suspicion. In my primary analysis, I use V1. However, in V2, suspected cases are classified as present. The aim is to assess the accuracy of these classifications for rare outcomes. Initially, I created a data frame called **`V1V2_df`** by filtering data from the **`adj_and_unadj_PWSIH_FULL`** dataset. Specifically, I selected data for the year 2023 and for specific diseases (PWS_1y_V1, IH_1y_V1, PWS_1y_V2, IH_1y_V2) that fall under the "Adjusted" category. Then, I used the **`pivot_wider`** function to transform this data into a wider format, creating a new data frame called **`V1V2_wider`**. Next, I created another data frame called **`historic_df`** by filtering data for the years 1950 and 2023, and specific diseases (PWS_1y_V1 and IH_1y_V1) from the **`adj_and_unadj_PWSIH_FULL`** dataset. Again, I used the **`pivot_wider`** function to reshape this data into a wide format, resulting in the **`historic_wider`** data frame. Lastly, I focused on data for the year 2023 and selected specific diseases (PWS_1y_V1, IH_1y_V1, gp_VN_1y_V1) from the **`adj_and_unadj_PWSIH_FULL`** dataset. I then used the **`pivot_wider`** function to transform this data into the 'wider' format, providing a structured representation of the information for further analysis and visualization.

```{r}
V1V2_df <- adj_and_unadj_PWSIH_FULL %>%
  filter(acog_year == 2023 & 
         disease %in% c("PWS_1y_V1", "IH_1y_V1", "PWS_1y_V2", "IH_1y_V2") &
         type == "Adjusted") %>%
  select(term, display, disease, type)

V1V2_wider <- V1V2_df %>%
  pivot_wider(
    names_from = term,                # Use 'term' for new column names
    values_from = display,            # Use 'display' to fill the new wide columns
    id_cols = c(disease, type)        # Use 'disease' and 'type' as identifier columns
  )

historic_df <- adj_and_unadj_PWSIH_FULL %>%
  filter(acog_year %in% c("1950", "2023") & 
         disease %in% c("PWS_1y_V1", "IH_1y_V1") &
         type == "Adjusted") %>%
  select(term, display, disease, type, acog_year)

historic_wider <- historic_df %>%
  pivot_wider(
    names_from = term,                # Use 'term' for new column names
    values_from = display,            # Use 'display' to fill the new wide columns
    id_cols = c(disease, type, acog_year)        # Use 'disease' and 'type' as identifier columns
  )

main_2023 <- adj_and_unadj_PWSIH_FULL %>%
  filter(disease %in% c("PWS_1y_V1", "IH_1y_V1", "gp_VN_1y_V1")) %>%
  filter(acog_year %in% c("2023")) %>%
  select(term, display, p.value, disease, type)

wider <- main_2023 %>%
  pivot_wider(
    names_from = term,                # Use 'term' for new column names
    values_from = c(display),         # Use 'display' to fill the new wide columns
    id_cols = c(disease, type)    # Use 'disease', 'type', and 'acog_year' as identifier columns
  )
```

7.  The following four plots compare Relative Risk for Port Wine Stains (PWS) and Infantile Hemangiomas (IH) under two different hypertension definitions (1950 and 2023) and under misclassification. In the provided code, I first filtered the dataset **`adj_and_unadj_PWSIH_FULL`** to select specific data points based on criteria such as **`acog_year`** being either "1950" or "2023," **`disease`** being "IH_1y_V1," and **`type`** being "adjusted." This subset of data was then used to create a comparative plot using the **`ggplot2`** package in R. In this plot, I compared relative risks (**`relative_risks`**) for two different years (1950 and 2023) with corresponding confidence intervals (**`ci_lower`** and **`ci_upper`**). The plot utilizes distinct colors and shapes to differentiate between the years, providing a visual comparison of relative risks associated with hypertension definitions. Additionally, I customized the plot's appearance, including titles, axis labels, colors, shapes, and text sizes, to enhance its clarity and readability. The vertical dashed line at **`xintercept = 1`** serves as a reference point, and data labels are included to display the relative risks for each data point. The next three plots do the same exact thing.

```{r}
filtered_data <- subset(adj_and_unadj_PWSIH_FULL,
                        acog_year %in% c("1950", "2023") & 
                        disease == "IH_1y_V1" & 
                        type == "Adjusted")
filtered_data <- filtered_data %>%
  rename(Year = acog_year)

ggplot(data = filtered_data, aes(x = relative_risks, y = term, color = Year, shape = Year)) +
  geom_pointrange(aes(xmin = ci_lower, xmax = ci_upper), position = position_dodge(width = 0.5), size = 0.8) +
  
  labs(title = "PWS Relative Risk Comparison: 1950 vs. 2023 Hypertension Definition",
       x = "Relative Risks",
       y = "Hypertension Status") +
  
  scale_color_manual(values = c("1950" = "#FF7F50", "2023" = "#808000"),
                     breaks = c("1950", "2023")) +
  scale_shape_manual(values = c("1950" = 16, "2023" = 17)) +  # Circle = 16, Triangle = 17
  theme_minimal(base_size = 12) +
  
theme(
    legend.position = "right",
    plot.title = element_text(size = 12, face = "bold", hjust = 0.75), 
    
    plot.margin = margin(t = 60, r = 30, b = 60, l = 30), 
    plot.background = element_rect(color = "black", fill = "white", linewidth = 1),  
    
    axis.title = element_text(size = 10),  
    legend.title = element_text(size = 12), 
    legend.text = element_text(size = 12),
    panel.grid.major = element_line(linewidth = 0.5, linetype = 'solid', colour = "grey90"),
    panel.grid.minor = element_blank(),
    axis.text = element_text(size = 8, face = "bold")  
  ) +
  geom_vline(xintercept = 1, linetype = "dashed", color = "grey50", size = 1) +
  geom_text(aes(label = sprintf("%.2f", relative_risks)), hjust = -0.2, vjust = 0, size = 3.5, check_overlap = TRUE)
```

The plot illustrates the relative risks of each hypertension disorder, with the reference group being normotensive. When applying the 1950s definitions, it becomes evident that all hypertensive disorders are linked to PWS. Notably, the most notable change occurs with preeclampsia, where the relative risk rises significantly, from 1.12 to 1.90, when transitioning from the 1950s criteria to the 2023 criteria. This shift reflects the less stringent criteria for diagnosing preeclampsia in 2023, allowing a broader range of cases to be included. Additionally, there's a noteworthy difference in the gestational age window for defining chronic hypertension. In the 1950s, this window was set at 24 weeks, compared to the current 20-week definition. Consequently, the RR using the 1950s definition is lower, as it encompasses a more diverse population. Furthermore, it's worth mentioning that the confidence intervals for the 2023 definitions are notably wider, indicating increased variability in the data. Among these associations, only the link between preeclampsia and PWS remains statistically significant.

```{r}
filtered_data <- subset(adj_and_unadj_PWSIH_FULL,
                        acog_year %in% c("1950", "2023") & 
                        disease == "PWS_1y_V1" & 
                        type == "Adjusted")
filtered_data <- filtered_data %>%
  rename(Year = acog_year)

ggplot(data = filtered_data, aes(x = relative_risks, y = term, color = Year, shape = Year)) +
  
  geom_pointrange(aes(xmin = ci_lower, xmax = ci_upper), position = position_dodge(width = 0.5), size = 0.8) +
  
  labs(title = "Hemangioma Relative Risk Comparison: 1950 vs. 2023 Hypertension Definition",
       x = "Relative Risks",
       y = "Hypertension Status") +
  
  scale_color_manual(values = c("1950" = "#006400", "2023" = "#4B0082"),
                     breaks = c("1950", "2023")) +
  
  scale_shape_manual(values = c("1950" = 16, "2023" = 17)) +
  theme_minimal(base_size = 12) +
  
theme(
    legend.position = "right",
    plot.title = element_text(size = 12, face = "bold", hjust = 0.65), 
    
    plot.margin = margin(t = 60, r = 30, b = 60, l = 30), 
    plot.background = element_rect(color = "black", fill = "white", linewidth = 1),  
    
    axis.title = element_text(size = 10),  
    legend.title = element_text(size = 12), 
    legend.text = element_text(size = 12),
    panel.grid.major = element_line(linewidth = 0.5, linetype = 'solid', colour = "grey90"),
    panel.grid.minor = element_blank(),
    axis.text = element_text(size = 8, face = "bold")  
  ) +
  geom_vline(xintercept = 1, linetype = "dashed", color = "grey50", size = 1) +
  geom_text(aes(label = sprintf("%.2f", relative_risks)), hjust = -0.2, vjust = 0, size = 3.5, check_overlap = TRUE)
```

There is a noticeable difference in how preeclampsia impacts infantile hemangiomas compared to Port Wine Stains. However, the most significant change is observed in cases of chronic hypertension. When applying the 1950s definition, the relative risk stands at 0.70, but with the 2023 definition, it increases to 1.17, surpassing the RR = 1 threshold. Additionally, it's important to note that the confidence intervals are considerably wider when using the 2023 definition. Superimposed preeclampsia demonstrates an additive effect due to the dose-dependent relationship it has, combining chronic hypertension and preeclampsia. This effect varies between different populations. However, this effect isn't as pronounced in PWS, which is likely attributed to the smaller sample size for PWS, as it is a rarer outcome compared to IH.

```{r}
  
filtered_data <- subset(adj_and_unadj_PWSIH_FULL,
                        acog_year == "2023" & 
                        disease %in% c("PWS_1y_V1", "PWS_1y_V2") & 
                        type == "Adjusted")

filtered_data <- filtered_data %>%
  mutate(disease = recode(disease, 
                          "PWS_1y_V1" = "Present: Definite",
                          "PWS_1y_V2" = "Present: Definite + Suspect"))

filtered_data <- filtered_data %>%
  rename("Outcome Classification" = disease)

ggplot(data = filtered_data, aes(x = relative_risks, y = term, color = `Outcome Classification`, shape = `Outcome Classification`)) +
 
  geom_pointrange(aes(xmin = ci_lower, xmax = ci_upper), position = position_dodge(width = 0.5), size = 0.8) +
  
  labs(title = "Sensitivity Analysis of Relative Risks for Port Wine Stains Due to Misclassification",
       x = "Relative Risks",
       y = "Hypertension Status") +
  
  theme_minimal() +
  
  scale_color_manual(values = c("Present: Definite" = "#DDA0DD", "Present: Definite + Suspect" = "#483D8B"),
                     breaks = c("Present: Definite", "Present: Definite + Suspect")) +
  
  scale_shape_manual(values = c("Present: Definite" = 16, "Present: Definite + Suspect" = 15)) +  # Circle = 16, Square = 15
  
   theme(
    legend.position = "right",
    legend.key.size = unit(0.5, "cm"),
    legend.title = element_text(size = 10), 
    legend.text = element_text(size = 8), 
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5), 
    plot.margin = margin(t = 60, r = 30, b = 60, l = 30), 
    plot.background = element_rect(color = "black", fill = "white", size = 1), 
    axis.title = element_text(size = 12),
    panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "grey90"),
    panel.grid.minor = element_blank(),
    axis.text = element_text(size = 10, face = "bold")
  ) +
  
  geom_vline(xintercept = 1, linetype = "dashed", color = "grey50", size = 1) +
  
  geom_text(aes(label = sprintf("%.2f", relative_risks)), hjust = -0.2, vjust = 0, size = 3.5, check_overlap = TRUE)
```

This plot illustrates how the relative risks change when employing different classification criteria. As previously mentioned, V1 denotes the classification where vascular nevi are deemed present only in the definite cases, while V2 extends this classification to include both definite and suspected cases. It's noteworthy that all the RRs for V2 tend to bias towards the null, indicating a tendency for attenuation to the null when a less precise classification occurs. This observation suggests that the classification of PWS was effectively executed during the 1950-1970s, with a stronger association seen in V1 compared to V2.

```{r}
filtered_data <- subset(adj_and_unadj_PWSIH_FULL,
                        acog_year == "2023" & 
                        disease %in% c("IH_1y_V1", "IH_1y_V2") & 
                        type == "Adjusted")

filtered_data <- filtered_data %>%
  mutate(disease = recode(disease, 
                          "IH_1y_V1" = "Present: Definite",
                          "IH_1y_V2" = "Present: Definite + Suspect"))

filtered_data <- filtered_data %>%
  rename("Outcome Classification" = disease)

ggplot(data = filtered_data, aes(x = relative_risks, y = term, color = `Outcome Classification`, shape = `Outcome Classification`)) +
  
  geom_pointrange(aes(xmin = ci_lower, xmax = ci_upper), position = position_dodge(width = 0.5), size = 0.8) +

  labs(title = "Sensitivity Analysis of Relative Risks for Hemangiomas Due to Misclassification",
       x = "Relative Risks",
       y = "Hypertension Status") +
  
  theme_minimal() +
  
  scale_color_manual(values = c("Present: Definite" = "#DAA520", "Present: Definite + Suspect" = "#6A5ACD"),
                     breaks = c("Present: Definite", "Present: Definite + Suspect")) +
  
  scale_shape_manual(values = c("Present: Definite" = 16, "Present: Definite + Suspect" = 15)) +  # Circle = 16, Square = 15
  
   theme(
    legend.position = "right",
    legend.key.size = unit(0.5, "cm"), 
    legend.title = element_text(size = 10), 
    legend.text = element_text(size = 8),  
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5), 
    plot.margin = margin(t = 60, r = 30, b = 60, l = 30), 
    plot.background = element_rect(color = "black", fill = "white", size = 1), 
    axis.title = element_text(size = 12),
    panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "grey90"),
    panel.grid.minor = element_blank(),
    axis.text = element_text(size = 10, face = "bold")
  ) +
  
  geom_vline(xintercept = 1, linetype = "dashed", color = "grey50", size = 1) +
  
  geom_text(aes(label = sprintf("%.2f", relative_risks)), hjust = -0.2, vjust = 0, size = 3.5, check_overlap = TRUE)
```

The tendency for attenuation toward the null is also observed in the case of hemangiomas, with the exception of superimposed preeclampsia. However, the difference RR is minimal in this context.

## Conclusion

In conclusion, my study, titled "A Comparative Analysis of Historical vs. Contemporary Definitions of Hypertension on Vascular Nevi Risk Assessment," highlights the relative risk differences in a rare pediatric outcome when different definitions of hypertension are applied. To conduct this investigation, I conducted a secondary analysis using data from the Collaborative Perinatal Project (CPP), a comprehensive prospective cohort study conducted from 1959 to 1966. This extensive study spanned 12 U.S. medical centers and involved 48,197 pregnant women, resulting in approximately 59.3k pregnancies. I curated a dataset from the master datafile, which contained over 1,200 variables, by selecting those of particular interest. To address missing data, I employed the Multiple Imputation by Chained Equations (MICE) method, ensuring the integrity of my analysis.

My primary focus was on calculating relative risks of vascular nevi using log-binomial models, shedding light on how different definitions of hypertension, especially in a historical context, impact risk assessments. I specifically examined two aspects:

1.  **Chronic Hypertension:** A comparison between the definitions from 1950 and 2023 revealed a shift from diagnosis before 24 weeks to before 20 weeks of gestation.

2.  **Preeclampsia:** I observed that the 1950 definition was more rigid compared to the 2023 definition. This reflected advancements in medical knowledge, diagnostic technology, and a growing trend toward personalized and early intervention in prenatal care. The significance of my findings is underscored by the understanding that changes in diagnostic criteria can significantly influence risk assessments in research studies, particularly when utilizing health record data to create new study variables. Consequently, the categorization of different hypertension groups varies depending on the definitions applied.

    There are several limitations to consider in this study:

    1.  **Accuracy of Hypertension Data**: One limitation lies in the accuracy of collecting hypertension levels. Given that the data span both the 1950s and the present day, there may be discrepancies in the techniques used for measuring hypertension. Changes in measurement methods over time could introduce variability in the data that needs to be accounted for.

    2.  **Binary Variable for Vascular Nevi**: Another limitation is the binary nature of the variable used for vascular nevi. The data only indicate whether vascular nevi were present or absent, without providing more detailed information. This limited granularity may restrict the depth of our analysis and the insights we can derive from it.

    3.  **Rare Outcomes for Vascular Nevi**: Additionally, the rarity of outcomes related to vascular nevi presents a challenge. Rare outcomes can make it difficult to conduct statistically robust analyses, as the sample size may not be sufficient to detect significant associations or trends. In this line of research, achieving adequate statistical power can be particularly challenging due to the infrequency of these outcomes.

**Notable findings from my study included:**

-   **Preeclampsia:** When applying the more stringent 1950 definition of PE, the relative risks for Port Wine Stains showed a more pronounced increase compared to Infantile Hemangiomas.

-   **Chronic Hypertension:** A notable shift was observed as a result of the expanded gestational age window for diagnosis, leading to an increase in the relative risks for both conditions when using the 1950 definition of chronic hypertension. The difference in relative risk for IH even crossed the threshold of RR = 1.

-   Combining definite and suspected cases into the variable for present vascular nevi revealed an attenuation toward the null.

In the broader context, my study underscores the importance of historical perspectives in epidemiological research, as they provide valuable insights into the evolution of diagnostic criteria over time. This enhanced understanding of disease risk factors can contribute to more accurate risk assessments and better-informed healthcare decisions.
