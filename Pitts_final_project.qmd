---
title: "Sociodemographic Disparities in Pediatric Emergency Department Revisit Rates"
subtitle: "BMIN503/EPID600 Final Project"
author: "Casey E. Pitts"
format: 
  html:
    theme: flatly
    fontsize: smaller
    code-overflow: wrap
editor: visual
number-sections: true
embed-resources: true
---

------------------------------------------------------------------------

## Overview {#sec-overview}

**Area of Interest:\
**Are there sociodemographic disparities in the rate of pediatric emergency room short-term revisits (re-presenting to the ED within 72 hours)?

**Mentors:**\
Joseph Zorc, MD, MSCE. Professor of Pediatrics, Mark Fishman Endowed Chair in Genomics and Computational Science, and Director of Emergency Information Systems. Division of Emergency Medicine, Department of Pediatrics, Children's Hospital of Philadelphia.

-   Reviewed key factors of interest, including demographics, language proficiency, acuity, admission status, as well as clearly defining the "revisit" variable

Brandon C. Ku, MD. Associate Professor of Pediatrics, Associate Medical Director of Clinical Pathways Program, and Associate Director of Quality Improvement. Divison of Emergency Medicine, Department of Pediatrics, Children's Hospital of Philadelphia.

-   Discussed primary and secondary outcome measures of the project as well as the optimal visualizations of the variables of interest.

## Introduction {#sec-introduction}

Pediatric emergency care (PEC) is a complex and fast-paced environment that treats patients across the healthcare and socio-demographic spectrums. Recently, there has been increasing focus on overall care quality and disparities in PEC. Disparities are known to exist in timely pain management by patient race and that those with non-English language proficiency have an increased risk of adverse medical events. Revisits, or returning to the emergency department within 72 hours, are an important marker of care quality and performance indicator of a department. While patients represent to the emergency room following a visit for various reasons, including progression of disease or repeat medication administration, it may signal incomplete ED care or insufficient anticipatory guidance. Revisits are also associated with increased healthcare costs, over-crowding and system stress, and decreased satisfaction of both families and staff.

Understanding the disparities associated with increased revisit rates and discovering modifiable factors is needed to offer solutions. This study will examine the association of sociodemographic and visit-specific factors that are associated with revisits that result either in a repeat discharge or hospitalization.

## Methods {#sec-methods}

This is a retrospective study of patients, between 0-18 years old, presenting to a urban, tertiary, academic pediatric emergency department between November 01, 2021 to November 01, 2023. We calculated rates of 72 hour revisits resulting in repeat discharge or hospital admission. Both patient and visit-level factors were included for exploratory analysis. Visit-level factors include daily volume, daily average acuity, daily average wait time, and ED location. Patient-level factors include age, sex, race, ethnicity, preferred language, individual triage acuity, history of complex medical conditions, chief complaint, insurance status, COI, distance from the ED, and green space access.

Data was accessed through the institutional data warehouse, extracted from patient and encounter-level tables and downloaded as a CSV file.

### Install Packages

```{r}
#| eval: FALSE
install.packages("tidyverse")
install.packages("expss")
install.packages("tidymodels")
install.packages("ggplot2")
install.packages("cowplot")
install.packages("lubridate")
install.packages("gtsummary")
install.packages("dplyr")
```

### Load Packages

```{r}
#| include: false
library(tidyverse)
library(expss)
library(tidymodels)
library(ggplot2)
library(lubridate)
library(gtsummary) 
library(cowplot) 
library(dplyr)
library(gifski)
```

### Read in & Clean the Data

```{r}
#Read in CSV File
data<- read.csv("./EDRevisits.csv")

#Convert data types as needed
data$ENCOUNTER_DATE <- mdy(data$ENCOUNTER_DATE)
data$WAITTIME<- period_to_seconds(hms(data$WAITTIME))
data$ARRIVALTIME<- lubridate::hms(data$ARRIVALTIME)
data$DAILYVISITS<- as.numeric(as.integer(data$DAILYVISITS))

#Convert Wait Time from HMS to Minutes
data<- data|>
  mutate(waitmin = WAITTIME/60)
```

#### Additional Cleaning

```{r}
#Race/Ethnicity Category Collapse
data<- data|> 
  mutate (eth_cat = (case_when(
    str_detect(RACE_ETHNICITY, "White") ~ "White",
    str_detect(RACE_ETHNICITY, "Black") ~ "Black",
    str_detect(RACE_ETHNICITY, "Asian") ~ "Asian",
    str_detect(RACE_ETHNICITY, "Latino") ~ "Hispanic/Latino",
    str_detect(RACE_ETHNICITY, "Multi") ~ "Multi-Racial",
    str_detect(RACE_ETHNICITY, "Other") ~ "Indigenous/Other",
    str_detect(RACE_ETHNICITY, "Native") ~ "Indigenous/Other",
    str_detect(RACE_ETHNICITY, "nknown") ~ "Unknown",
    str_detect(RACE_ETHNICITY, "Refused") ~ "Unknown",
    str_detect(RACE_ETHNICITY, "disclose") ~ "Unknown",
      )))|>
  mutate (eth_cat = factor(eth_cat, 
            levels = c("White", "Black", "Asian", "Hispanic/Latino", "Multi-Racial", "Indigenous/Other", "Unknown"),
            labels = c("White", "Black", "Asian", "Hispanic/Latino", "Multi-Racial", "Indigenous/Other", "Unknown")))

#Replace NA with "Unknown" for Insurance Group
data<- data|>
  mutate (PAYOR_GROUP = replace_na(PAYOR_GROUP, "Unknown"))|>
  mutate (SVI_CATEGORY = replace_na(SVI_CATEGORY, "Unknown"))

#Collapse Arrival Times to 3 Categories
data<- data |>
  mutate (Arrival = case_when(
    hour(ARRIVALTIME) >= 23 ~ "Overnight",
    hour(ARRIVALTIME) >= 15 ~"Evening",
    hour(ARRIVALTIME) >=7 ~ "Daytime",
    hour(ARRIVALTIME) < 7 ~ "Overnight"
  ))

#Age to Categories
data<- data |>
  mutate (age_cat = case_when(
    AGE_AT_VISIT < 1 ~ "0",
    AGE_AT_VISIT < 3 ~ "1 - 2",
    AGE_AT_VISIT < 5 ~ "3 - 4",
    AGE_AT_VISIT < 9 ~ "5 - 8",
    AGE_AT_VISIT < 13 ~ "9 - 12",
    AGE_AT_VISIT < 16 ~ "13 - 15",
    AGE_AT_VISIT <= 18 ~ "16 - 18"
  ))

#Factor
data<- data |>
  mutate(REVISIT_72_HR = factor(REVISIT_72_HR, levels = c(0, 1), 
                           labels = c("No Revisit", "Revisit")))|>
  mutate(LANGIND = factor(LANGIND, levels = c(1,2,0),
                          labels = c("English",
                      "Spanish",
                      "Other")))|>
  mutate(PCP_VISIT_72_HR = factor(PCP_VISIT_72_HR, levels = c(0,1), 
                            labels = c("No PCP Visit", 
                              "PCP Visit"))) |>
  mutate(READMIT_72_HR = factor(READMIT_72_HR, levels = c(0, 1),
                         labels = c("Re-discharged", "Admitted"))) |>
  mutate(SEX = factor(SEX, levels = c("M", "F"), 
                      labels = c("Male", "Female"))) |>
  mutate(COMPLEX_CHRONIC_CONDITION_IND = factor(COMPLEX_CHRONIC_CONDITION_IND,
                      levels = c(0,1),
                      labels = c("None", "Chronic/Complex"))) |>
  mutate(ACUITY = factor(ACUITY, levels = c(1,2,3,4,5),
                         labels = c(1,2,3,4,5))) |>
  mutate(ED_DISPOSITION = factor(ED_DISPOSITION, levels = c("Discharge", "AMA", "Left Before Discharge (Eloped)"),
              labels = c("Discharge", "AMA", "Left Before Discharge (Eloped)")))|>
  mutate(CAMPUS = factor(CAMPUS, levels = c("Main","Community"),                                            labels = c("Main","Community")))

#Rename Columns
data <- data|>
  apply_labels(
          ENCOUNTER_DATE = "Date",
          SEX = "Sex",
          DAILYVISITS = "Total Daily Visits",
          AVGESI = "Average Daily Acuity",
          WAITTIME = "Average Daily Wait Time",
          AGE_AT_VISIT = "Age",
          RACE_ETHNICITY = "Race & Ethnicity",
          LANGIND = "Language",
          PAYOR_GROUP = "Insurance Type",
          SVI_CATEGORY = "Vulnerability Score",
          PATIENT_ADDRESS_ZIP_CODE = "Zip Code",
          ED_LOS = "Length of Stay",
          REVISIT_72_HR = "Revisit within 72 Hours",
          READMIT_72_HR = "Admission within 72 Hours",
          COMPLEX_CHRONIC_CONDITION_IND = "Complex or Chronic History",
          ED_DISPOSITION = "Disposition from ED",
          PCP_VISIT_72_HR = "PCP Visit within 72 Hours",
          eth_cat = "Race/Ethnicity",
          CAMPUS = "Campus",
          waitmin = "Average Daily Wait Time (in minutes)",
          ACUITY = "Acuity",
          age_cat = "Age (Categorical)"
          )
```

## Results {#sec-results}

### Summary Statistics

```{r}
#Overall Emergency Department Summary
tbl_summary(data, include = c(DAILYVISITS, AVGESI, waitmin),
      statistic = list(
      all_continuous() ~ "{mean} ({sd})",
      all_categorical() ~ "{n} / {N} ({p}%)"
    ),
            by = CAMPUS,
    missing = "no") |>
  modify_caption ("**Table 1: Emergency Department Characteristics**") |>
  modify_header (label = "") |>
  bold_labels()

#Plot Average Daily Volume by Month 
VisitsbyMonth <- data |>
  group_by(CAMPUS, Year = as.character(year(ENCOUNTER_DATE)), month = month(ENCOUNTER_DATE, label = TRUE)) |>
      summarise(avg = mean(DAILYVISITS))

ggplot(VisitsbyMonth, aes(x =month, y = avg, color = Year)) +
  geom_line(aes(group = Year)) +
  geom_point() +
  facet_grid(~CAMPUS) +
  theme(axis.text.x  = element_text(angle=90, vjust=0.8)) +
  labs(title = paste0("Average Daily Volume by Month "), x = "Month", y = "Avg Daily Visit Count")

#Plot Average Wait Time by Month 
WaitbyMonth <- data |>
  group_by(CAMPUS, Year = as.character(year(ENCOUNTER_DATE)), month = month(ENCOUNTER_DATE, label = TRUE)) |>
      summarise(avg = mean(waitmin))

ggplot(WaitbyMonth, aes(x =month, y = avg, color = Year)) +
  geom_line(aes(group = Year)) +
  geom_point() +
  facet_grid(~CAMPUS) +
  theme(axis.text.x  = element_text(angle=90, vjust=0.8)) +
  labs(title = paste0("Average Daily Wait Time by Month "), x = "Month", y = "Avg Daily Wait Time")

#Plot Average Daily Acuity by Month
AcuitybyMonth <- data |>
  group_by(CAMPUS, Year = as.character(year(ENCOUNTER_DATE)), month = month(ENCOUNTER_DATE, label = TRUE)) |>
      summarise(avg = mean(AVGESI))

ggplot(AcuitybyMonth, aes(x =month, y = avg, color = Year)) +
  geom_line(aes(group = Year)) +
  geom_point() +
  facet_grid(~CAMPUS) +
  theme(axis.text.x  = element_text(angle=90, vjust=0.8)) +
  labs(title = paste0("Average Daily Acuity by Month "), x = "Month", y = "Avg Daily Acuity") +
  ylim (low = 2.5, high = 3.5)
```

```{r}
#Descriptive Statistics
data|>
  select(SEX, AGE_AT_VISIT, eth_cat, LANGIND, PAYOR_GROUP, SVI_CATEGORY, ACUITY, COMPLEX_CHRONIC_CONDITION_IND, CAMPUS, ED_LOS, Arrival, ED_DISPOSITION, READMIT_72_HR, REVISIT_72_HR)|>
  tbl_strata2(
    strata = CAMPUS,
    .tbl_fun = 
    ~.x |>
tbl_summary(missing_text = "NA",
            by = REVISIT_72_HR,
            missing = "no") |>
  modify_caption ("**Table 2: Patient Characteristics**") |>
  modify_header (label = "**Variable**") |>
  bold_labels()
)
```

```{r}
# Sex
sexplot <- ggplot(data, aes(x = factor(REVISIT_72_HR), fill = SEX)) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  ylab("Percentage")+
  xlab("")+
  labs(title = "Sex")+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()+
  facet_grid(~CAMPUS) +
  theme(axis.text.x = element_text(size=8), 
        axis.title.x = element_text(size=8),
        legend.title = element_text(size =8),
        legend.text = element_text(size=8),
        axis.title.y = element_text(size=10))

# Admission Type
admitplot <- ggplot(data, aes(x = factor(REVISIT_72_HR), fill = factor(READMIT_72_HR))) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  ylab("Percentage")+
  xlab("")+
  labs(title = "Admission Type")+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()+
  facet_grid(~CAMPUS) +
  theme(axis.text.x = element_text(size=6), 
        axis.title.x = element_text(size=10),
        legend.title = element_text(size =5),
        legend.text = element_text(size=4),
        axis.title.y = element_text(size=10))

# Language
langplot <- ggplot(data, aes(x = factor(REVISIT_72_HR), fill = factor(LANGIND))) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  ylab("Percentage")+
  xlab("")+
  labs(title = "Language")+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()+
  facet_grid(~CAMPUS) +
  theme(axis.text.x = element_text(size=6), 
        axis.title.x = element_text(size=10),
        legend.title = element_text(size =5),
        legend.text = element_text(size=4),
        axis.title.y = element_text(size=10))


# Insurance
insuranceplot<- ggplot(data, aes(x = factor(REVISIT_72_HR), fill = PAYOR_GROUP)) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  ylab("Percentage")+
  xlab("")+
  labs(title = "Insurance")+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()+
  facet_grid(~CAMPUS) +
  theme(axis.text.x = element_text(size=6), 
        axis.title.x = element_text(size=10),
        legend.title = element_text(size =5),
        legend.text = element_text(size=4),
        axis.title.y = element_text(size=10))

# Acuity
acuityplot<- ggplot(data, aes(x = factor(REVISIT_72_HR), fill = factor(ACUITY))) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  ylab("Percentage")+
  xlab("")+
  labs(title = "Acuity")+
  #scale_fill_brewer(palette="Paired")+
  theme_minimal()+
  facet_grid(~CAMPUS) +
  theme(axis.text.x = element_text(size=6), 
        axis.title.x = element_text(size=10),
        legend.title = element_text(size =5),
        legend.text = element_text(size=4),
        axis.title.y = element_text(size=10))

# Vulnerability Status
sviplot<- ggplot(data, aes(x = factor(REVISIT_72_HR), fill = SVI_CATEGORY)) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  ylab("Percentage")+
  xlab("")+
  labs(title = "Vulnerability Status")+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()+
  theme(axis.text.x = element_text(size=6), 
        axis.title.x = element_text(size=10),
        legend.title = element_text(size =5),
        legend.text = element_text(size=4),
        axis.title.y = element_text(size=10))


# Ethnicity
ethnicityplot <- ggplot(data, aes(x = factor(REVISIT_72_HR), fill = eth_cat)) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  ylab("Percentage")+
  xlab("")+
  labs(title = "Ethnicity")+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()+
  theme(axis.text.x = element_text(size=6), 
        axis.title.x = element_text(size=10),
        legend.title = element_text(size =5),
        legend.text = element_text(size=4),
        axis.title.y = element_text(size=10))

# Chronic Conditions
chronicplot <- ggplot(data, aes(x = factor(REVISIT_72_HR), fill = factor(COMPLEX_CHRONIC_CONDITION_IND))) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  ylab("Percentage")+
  xlab("")+
  labs(title = "Chronic/Complex History")+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()+
  theme(axis.text.x = element_text(size=6), 
        axis.title.x = element_text(size=10),
        legend.title = element_text(size =5),
        legend.text = element_text(size=4),
        axis.title.y = element_text(size=10))


# PCP Visit within 72 Hours
pcpplot <- ggplot(data, aes(x = factor(REVISIT_72_HR), fill = factor(PCP_VISIT_72_HR))) +
  geom_bar(position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  ylab("Percentage")+
  xlab("")+
  labs(title = "PCP Visit Within 72 Hours")+
  scale_fill_brewer(palette="Paired")+
  theme_minimal()+
  theme(axis.text.x = element_text(size=6), 
        axis.title.x = element_text(size=10),
        legend.title = element_text(size =5),
        legend.text = element_text(size=4),
        axis.title.y = element_text(size=10))

# Age 
ageplot <- ggplot(data, aes(factor(REVISIT_72_HR), AGE_AT_VISIT)) +
  geom_boxplot(fill=c("#f6eaea", "#B2182B")) +
  labs(title = "Age") +
  ylab("Years")+
  xlab("")+
  theme_minimal()

# LOS
LOSplot <- ggplot(data, aes(factor(REVISIT_72_HR), ED_LOS)) +
  geom_boxplot(fill=c("#f6eaea", "#B2182B")) +
  labs(title = "Length of Stay") +
  ylab("Minutes")+
  xlab("")+
  theme_minimal()

# Summary Graphs 1: Demographics between group comparison
ggdraw() +
  draw_plot(sexplot, x=0, y=0.5, width = 0.5, height = 0.5)+
  draw_plot(ageplot, x=0.5, y=0.5, width = 0.5, height = 0.5)+
  draw_plot(langplot, x=0, y=0, width = 0.5, height = 0.5)+
  draw_plot(ethnicityplot, x=0.5, y=0, width = 0.5, height = 0.5)+
  theme_minimal()

ggdraw() +
  draw_plot(acuityplot, x=0, y=0.5, width = 0.5, height = 0.5)+
  draw_plot(sviplot, x=0.5, y=0.5, width = 0.5, height = 0.5)+
  draw_plot(chronicplot, x=0, y=0, width = 0.5, height = 0.5)+
  draw_plot(pcpplot, x=0.5, y=0, width = 0.5, height = 0.5)+
  theme_minimal()
```

### Preliminary Analysis

#### **Chi Squared Tests**

```{r}
#Sex:
chisq.test(table(data$REVISIT_72_HR, data$SEX))
#Age(Categorical)
chisq.test(table(data$REVISIT_72_HR, data$age_cat))
#Ethnicity:
chisq.test(table(data$REVISIT_72_HR, data$eth_cat))
#Language
chisq.test(table(data$REVISIT_72_HR, data$LANGIND))
#Insurance
chisq.test(table(data$REVISIT_72_HR, data$PAYOR_GROUP)) 
#Vulnerability
chisq.test(table(data$REVISIT_72_HR, data$SVI_CATEGORY)) 
#ACUITY
chisq.test(table(data$REVISIT_72_HR, data$ACUITY))
#Complex/Chronic
chisq.test(table(data$REVISIT_72_HR, data$COMPLEX_CHRONIC_CONDITION_IND))
#PCP Visit
chisq.test(table(data$REVISIT_72_HR, data$PCP_VISIT_72_HR)) 
#Arrival
chisq.test(table(data$REVISIT_72_HR, data$Arrival))
#Campus
chisq.test(table(data$REVISIT_72_HR, data$CAMPUS))
```

```{r}
data.fit <- data |>
  select(REVISIT_72_HR, READMIT_72_HR, Arrival, SEX, eth_cat, LANGIND, PAYOR_GROUP, PCP_VISIT_72_HR, age_cat, SVI_CATEGORY, ACUITY,COMPLEX_CHRONIC_CONDITION_IND, ED_DISPOSITION, Arrival, CAMPUS) |>
  drop_na()

sigFactors <- data.frame(variable = character(), p_value = numeric())

#create loop and function to analyze each vairable individually using logistic regression models glm, and to put the feature and it's p-value into the new dataframe if the p-value is less than 0.05 which is generally considered significant

for(var in colnames(data.fit)[-which(colnames(data.fit) == 'REVISIT_72_HR')]) {
  
  formula <- as.formula(paste("REVISIT_72_HR ~", var)) #make new function
  model <- glm(formula, data = data.fit, family = "binomial") 
  p_value <- summary(model)$coefficients[2, "Pr(>|z|)"] #from the summary of the regression model extract the "Pr(>|z|)" row which contains the p-value which is what we are interested in
  if(p_value < 0.05) {
    sigFactors <- rbind(sigFactors, data.frame(variable = var, p_value = p_value))
  } #inset the row values if p_value is less than 0.05
}
# Sort by p-value
sigFactors  <- sigFactors  |> arrange(p_value)
print(sigFactors)
```

```{r}
m1 <- glm(REVISIT_72_HR ~ Arrival + SEX + + age_cat + eth_cat + LANGIND + PAYOR_GROUP + ACUITY+ COMPLEX_CHRONIC_CONDITION_IND + Arrival + ED_DISPOSITION + CAMPUS + PCP_VISIT_72_HR, data = data.fit,family = binomial())
```

```{r}
t3 <- tbl_regression(m1, exponentiate = TRUE) %>%
  bold_p(t = 0.05) %>%
  bold_labels() %>%
  italicize_levels()
t3
```

## Conclusion

*End with a brief conclusion of your findings related to the question you set out to address. You can include references if you'd like, but this is not required. This the conclusion. The @sec-results can be invoked if you'd like.*
