---
title: "Examining the link bettween maternal hypertension and vascular nevi in children at birth and at seven years of age."
subtitle: "BMIN503/EPID600 Final Project"
author: "Jessica Wong"
format: html
editor: visual
number-sections: true
embed-resources: true
---

------------------------------------------------------------------------

## Overview {#sec-overview}

This project seeks to explore the potential link between maternal hypertensive disorders of pregnancy and the prevalence of vascular nevi, such as port-wine stains and strawberry hemangiomas, in their offspring at different age points. These age points for the children will be at four months, one year, and seven years. My goal is to ascertain if, and to what extent, maternal hypertensive disorders can be predictive of such vascular skin manifestations in their children. The primary data source is the Collaborative Perinatal Project (CPP). The CPP was a large-scale, multi-center study conducted in the U.S. during the 1950s and 60s to investigate the environmental and biological factors affecting pregnancy outcomes and child health. For this study, I will extract data related to maternal hypertensive disorders and subsequent reports of vascular nevi in their children during the three age points.

On Monday, 10/23, I consulted with Dr. David Margolis from Dermatology. On Tuesday, 10/24, I consulted with Drs. Stefanie Hinkle and Sunni Mumford from Perinatal and Reproductive Health.

1.  Key Insights from Dr. Margolis: I learned that infantile hemangiomas (IH) typically regress by the age of 4, whereas port-wine stains (PWS) are permanent. This distinction poses a challenge because the data for children at 4 months and 1 year doesn't differentiate between hemangiomas and port-wine stains, unlike the data for age 7. We initially talked about an alternative method for a secondary outcome analysis, which would involve deducing non-PWS vascular nevi occurrences (presumed to be IH) for children at ages 4 months and 1 year, followed by directly identifying the presence of IH at age 7. This requires subtracting the number of PWS at 7 years from the total vascular nevi recorded at 4 months. Given these insights, I decided to streamline the research to focus primarily on the overall occurrence of vascular nevi in the offspring, encompassing all types with differentiated by specific type until age 7.

2.  Key Insights from Drs. Hinkle and Mumford: I gleaned that "chronic hypertension" is essentially equivalent to "pre-pregnancy hypertension." Therefore, individuals diagnosed with "pre-pregnancy hypertension" cannot be categorized under "gestational hypertension." This distinction is vital because gestational hypertension requires the condition to be a new onset. Moreover, superimposed hypertension is described to be a combination of "chronic hypertension" with the presence of protein in the urine, indicative of preeclampsia. They suggested me to refer to the American College of Obstetricians and Gynecologists (ACOG) for precise diagnostic criteria.

## Introduction {#sec-introduction}

Port-wine stains (PWS) and infantile hemangiomas (IH) are among the most prevalent vascular birthmarks with unique pathophysiological and clinical characteristics. While PWS results from congenital malformations and persists lifelong, IH emerges postnatally due to abnormal endothelial cell proliferation and usually regresses by age four. Both are believed to arise from fetal developmental disruptions, possibly due to gestational hypoxia or insufficient growth factors, which may interfere with angiogenesis and vasculogenesis.

Understanding these vascular birthmarks requires insights from several interdisciplinary domains:

1.  **Developmental Biology:** To grasp the fetal developmental disturbances and their implications.
2.  **Vascular Biology:** For insights into angiogenesis, vasculogenesis, and the very nature of the vascular birthmarks.
3.  **Obstetrics:** Since conditions related to pregnancy, like preeclampsia, might have implications for the onset of such birthmarks.
4.  **Pediatrics:** To track the birthmarks' evolution over developmental stages and address potential complications.
5.  **Dermatology:** Given the skin manifestation of these vascular birthmarks.

Abnormal spiral artery remodeling during the early pregnancy stages is crucial for optimal fetal nourishment, and any deviations here could indicate the development of these birthmarks as compensatory mechanisms to restore vascular equilibrium. Conditions like preeclampsia and placental insufficiency that correlate with in utero hypoxia could potentially trigger IH. However, no such direct link has been established for PWS yet.

Both IH and PWS come with their own set of complications. For IH, depending on its position, it could obstruct vision, hinder food intake, or even induce acute respiratory failure. PWS, too, has its complications, with children having a PWS in the ophthalmic region at risk of developing Sturge Weber Syndrome. Given these complications and gaps in understanding, the significance of this research is twofold: to delve deeper into the associations of IH and PWS with hypertensive disorders of pregnancy, and to observe the occurrence of these vascular birthmarks across various child developmental stages. With the comprehensive data from the CPP, I hope to widen our understanding about the prevalence of vascular birthmarks and their associations with hypertensive disorders of pregnancy.

## Methods {#sec-methods}

1.  My first step was to identify and access the NCPP data within the NIH electronic records. This involved using the National Archives' website to pinpoint the specific datasets related to my research. The URL is https://www.archives.gov/research/electronic-records/nih.html. Navigating the National Archives required an understanding of its archival system. This step was crucial in filtering through the vast array of data to pinpoint the specific datasets relevant to my study. It involved familiarizing myself with the indexing methods and search tools provided by the archives. I used the National Archives Identifier (606622) for the NCPP files. After locating the NCPP files, I reviewed the three main components of the NCPP files: the Master File, a Variables File, and 30 special topic Work Files. After downloading the master file, I obtained the codebooks associated with the NCPP datasets. These codebooks provided detailed descriptions of the data collection methods and instruments used, which was essential for accurate data interpretation. I also collected manuals detailing the derivation of variables within the NCPP data. These manuals offered insights into the transformation processes from raw data to research-ready variables, clarifying the data structure and analytical approaches. Finally, I retrieved text recognition forms that detailed the various stages and visits of the NCPP. These forms provided context and sequence to the data collection, enhancing my understanding of the longitudinal nature of the study. The NCPP data was stored in a SAS dataset (.sas7bdat file). To work with this data in R, I used a combination of packages from the tidyverse, notably dplyr and haven. The process was straightforward. I started by setting the working directory in R to the location of the downloaded SAS file using setwd(). Using read_sas() function from the haven package, I loaded the ncppbasa.sas7bdat file into R. This function seamlessly reads SAS files and converts them into a format that R can manipulate.

```{r}
library(tidyverse)
library(dplyr)
library(haven)
setwd("/Users/wongjj/Downloads")
ncppbasa <- read_sas("ncppbasa.sas7bdat")
```

2.  Secondly, I identified variables within the NCPP data, focusing specifically on those related to maternal hypertension and child skin data. Using modern American College of Obstetricians and Gynecologists (ACOG) standards, hypertension status was categorized into five distinct levels: normotensive (normal blood pressure), superimposed preeclampsia (worsening hypertension with proteinuria in women with chronic hypertension after 20 weeks of gestation), preeclampsia (new-onset hypertension with proteinuria after 20 weeks), chronic hypertension (high blood pressure before pregnancy or before 20 weeks of gestation), and gestational hypertension (new-onset hypertension after 20 weeks of gestation without proteinuria). This categorization forms a hypertension variable with five levels, providing a nuanced understanding of hypertension status in the dataset. On October 31st, I worked with Dr. Hinkle to create a well-defined hypertension variable. We created a new file for this variable.

```{r}
htn_data <- read_sas("cpp_htn_20231031.sas7bdat")
```

3.  Third, I focused on identifying variables related to vascular nevi, which were documented at different time points. The data at birth and at 7 years were notably more detailed, allowing me to distinguish between types of vascular nevi, such as infantile hemangiomas and port wine stains. However, the recordings at 4 months and 1 year were less specific, categorizing all instances under the broad term of vascular nevi. At these time points, skin conditions were recorded under a single variable, but with different levels, numbered 1-7, each representing a different skin condition. The absence of combination codes at these time points wit the free, public data, which would have allowed for the identification of multiple skin conditions simultaneously, further limited the utility of this data for my research objectives. Without this level of detail, it was challenging to conduct a thorough and accurate analysis of specific skin conditions, such as distinguishing between different types of vascular nevi. To ensure accuracy and prevent misclassification, I chose to concentrate my analysis on the more detailed data points at birth and 7 years. This decision not only provided a higher level of granularity but also minimized the risk of incorrectly categorizing the types of vascular nevi, even though it narrowed the timeframe of my analysis. In addition to vascular nevi, I included eczema as another skin variable of interest in my analysis. Like vascular nevi, information on eczema was available at distinct time points, notably at birth and at 7 years. The inclusion of eczema as a variable allowed me to broaden the scope of my skin-related research, while still maintaining a focus on significant developmental stages. In the at birth/delivery data, I made a strategic decision to combine 'definite' and 'suspect' cases of skin conditions into a single 'present' category at the birth time point. This decision was informed by the granularity of data available at birth, where skin conditions like hemangiomas and port wine stains were categorized with more detail. By merging these two categories, I increased the sensitivity of the analysis, ensuring no potential case was overlooked, a crucial factor for rare conditions. This approach also allowed for a consistent comparison with the 7-year data, which used a binary categorization of 'present' or 'not present'. Although combining these categories at birth could potentially include false positives and reduce specificity, the distinct and recognizable nature of these conditions, particularly in their appearance on the skin, mitigated the risk of significant misclassification. This alignment of categories at birth with the subsequent 7-year data provided a streamlined and comprehensive longitudinal analysis, capturing the full spectrum of these conditions from their initial stages. Delivery data was found in the master file, while the 7-year data was found in a separate file on the National Archives.

```{r}
seven_ydata <- read_sas("ped76all.sas7bdat") %>% 
  select(MOMID, PREGID, CHILDID, PD276_33, PD276_34, PD276_37)
names(seven_ydata)[names(seven_ydata) == "PD276_33"] <- "PWS_7y"
names(seven_ydata)[names(seven_ydata) == "PD276_34"] <- "IH_7y"
names(seven_ydata)[names(seven_ydata) == "PD276_37"] <- "eczema_7y"
```

Again, I used the `read_sas()` function from the `haven` package to read data from the SAS file named `ped76all.sas7bdat`. I used the `select()` function, part of the `dplyr` package, is then used to choose specific columns from the dataset. I selected the identifiers for the mother, pregnancy, and child: `MOMID`, `PREGID`, and `CHILDID` columns. I also selected three other columns for skin data: `PD276_33`, `PD276_34`, and `PD276_37`. I then used the `names()` function to rename these outcome variables to more descriptive and intuitive names.

-   `PD276_33` is renamed to `PWS_7y`, which is port wine stain data observed at 7 years of age.
-   `PD276_34` is renamed to `IH_7y`, which is infantile hemangiomas at 7 years of age.
-   `PD276_37` is renamed to `eczema_7y`, which is eczema at the age of 7 years of age.

4.  Fourth, I I carefully chose covariates a priori based on their consistent use in similar studies. These included maternal age, height, and weight, which are direct indicators of maternal health; socioeconomic factors such as income and education level, which can influence health outcomes; lifestyle choices like smoking, known to affect hypertension risk; and reproductive history factors like parity and plurality, which are essential in understanding pregnancy-related health changes. Additionally, I considered marital status, infant sex, and ethnicity, acknowledging their roles in maternal and infant health dynamics. This selection was guided by the objective to comprehensively account for variables that could impact the study of maternal hypertension and its effects, thereby ensuring a robust and thorough analysis.

```{r}
mice_covariate <- data.frame(
  MOMID = ncppbasa_mice$MOMID,
  PREGID = ncppbasa_mice$PREGID,
  CHILDID = ncppbasa_mice$CHILDID,
  weight_lb = as.numeric(replace(ncppbasa_mice$C83, ncppbasa_mice$C83 %in% c(".u", ".U"), NA)),
  height_in = as.numeric(replace(ncppbasa_mice$C81, ncppbasa_mice$C81 %in% c(".u", ".U"), NA))
)

ncppbasa_mice$C31 <- as.numeric(replace(ncppbasa_mice$C31, ncppbasa_mice$C31 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa_mice[c("PREGID", "MOMID", "CHILDID", "C31")], by = c("PREGID", "MOMID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C31"] <- "age"

ncppbasa_mice$C52 <- as.numeric(replace(ncppbasa_mice$C52, ncppbasa_mice$C52 %in% c(70, 80, ".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa_mice[c("MOMID", "PREGID", "CHILDID", "C52")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C52"] <- "smoking"
```

I first used the `data.frame()` function to create a new data frame named `mice_covariate`. The first three columns of the new data frame (`MOMID`, `PREGID`, and `CHILDID`). These columns serve as identifiers for each record, linking to the mother's ID, pregnancy ID, and child's ID, respectively. I started by includinkg two covariates in this data frame -- `weight_lb` and `height_in`. For both `weight_lb` and `height_in`, I converted the variables to numeric using `as.numeric()` because I planned on doing multiple imputation for the missing covariate data. I addressed missing data within these two variables with the `replace()` function. I replaced instances of `.u` or `.U` in the original `ncppbasa_mice` data with `NA`. I double checked with the manuals to ensure that the frequency of values matched. I repeated this process for the age and smoking variable.

5.  The parity variable was initially problematic because during the SAS to R conversion, non-numeric values became NA. This is because the categories of parity were coded in a less intuitive way in the codebook, where `0` meant the mother had a prior pregnancy but it was not viable, but `p` meant no prior pregnancy at all. `p` was converted into NA during the SAS to R conversion process. To address this, I first converted the 'parity' variable (represented as `C50` in the dataset) to a character type since 'parity' had non-numeric values that needed to be processed differently from purely numeric data. I continued to merge the `mice_covariate` data frame with the `parity` data from `ncppbasa_mice` with shared identifiers (`MOMID`, `PREGID`, `CHILDID`) and renamed the `C50` column to `parity` for clarity. Then, I applied the function `na_tag` to identify rows with NA to process them. Then, I recoded '0' with '-1', and 'p' was replaced with '0', based on the original coding scheme of the dataset. That way, all the values are numeric.

```{r}
ncppbasa_mice$parity <- as.character(ncppbasa_mice$C50)
mice_covariate <- merge(mice_covariate, ncppbasa_mice[c("MOMID", "PREGID", "CHILDID", "C50")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C50"] <- "parity"

subset_data <- mice_covariate[is.na(mice_covariate$parity), ]
# Apply na_tag to the 'parity' column in the subset
subset_data$parity <- na_tag(subset_data$parity)

# Identify rows in mice_covariate that correspond to subset_data
matching_rows <- mice_covariate$MOMID %in% subset_data$MOMID &
                mice_covariate$PREGID %in% subset_data$PREGID &
                mice_covariate$CHILDID %in% subset_data$CHILDID

# Update 'parity' in mice_covariate with "p" values from subset_data
mice_covariate$parity[matching_rows] <- subset_data$parity

# Replace '0' with '-1' because 0 was originally coded for "prior pregnancy but was no prior viable"
mice_covariate$parity[mice_covariate$parity == '0'] <- '-1'

# Replace 'p' with '0' because p was originally coded for "no prior pregnancy at all"
mice_covariate$parity[mice_covariate$parity == 'p'] <- '0'

# Replace 'u' with 'NA'
mice_covariate$parity[mice_covariate$parity == 'u'] <- NA
mice_covariate$parity <- as.numeric(mice_covariate$parity)

ncppbasa_mice$C10 <- as.numeric(replace(as.character(ncppbasa_mice$C10), ncppbasa_mice$C10 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa_mice[c("MOMID", "PREGID", "CHILDID", "C10")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C10"] <- "plurality"
```

6.  I repeated the process for the covariates plurality, income, education, marital status, and infant sex.

```{r}
ncppbasa_mice$C10 <- as.numeric(replace(as.character(ncppbasa_mice$C10), ncppbasa_mice$C10 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa_mice[c("MOMID", "PREGID", "CHILDID", "C10")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C10"] <- "plurality"

ncppbasa_mice$C275 <- as.numeric(replace(as.character(ncppbasa_mice$C275), ncppbasa_mice$C275 %in% c(".u", ".U"), NA))
# ncppbasa_mice$income_category <- factor(ncppbasa_mice$income_category, levels = c(1, 2, 3, 4, 5, 6, 7))
mice_covariate <- merge(mice_covariate, ncppbasa_mice[c("MOMID", "PREGID", "CHILDID", "C275")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C275"] <- "income"

ncppbasa_mice$C272 <- as.numeric(replace(as.character(ncppbasa_mice$C272), ncppbasa_mice$C272 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa_mice[c("MOMID", "PREGID", "CHILDID", "C272")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C272"] <- "educ"

ncppbasa_mice$C36 <- as.numeric(replace(as.character(ncppbasa_mice$C36), ncppbasa_mice$C36 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa_mice[c("MOMID", "PREGID", "CHILDID", "C36")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C36"] <- "marital"

ncppbasa_mice$C554 <- as.numeric(replace(as.character(ncppbasa_mice$C554), ncppbasa_mice$C554 %in% c(".u", ".U"), NA))
mice_covariate <- merge(mice_covariate, ncppbasa_mice[c("MOMID", "PREGID", "CHILDID", "C554")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
names(mice_covariate)[names(mice_covariate) == "C554"] <- "infant_sex"
```

7.  I repeated the process for the ethnicity covariate. However, Dr. Hinkle advised me to combine categories '3' (oriental) and '8' (other) for the 'race_of_mother' variable. Combining less populous categories can simplify the analysis, since those categories have small sample sizes. I used the `replace()` function to change all instances where `race_of_mother` was '3' (oriental) to '8' (other). We also added a datafile for diabetes status. Since this study look place in the 1950s and the prevalence of obesity was not very high, we could assume that cases of diabetes were type 1.

```{r}
ncppbasa_mice$C303 <- as.numeric(replace(as.character(ncppbasa_mice$C303), ncppbasa_mice$C303 %in% c(".u", ".U"), NA))
ncppbasa_mice$C303 <- replace(ncppbasa_mice$C303, ncppbasa_mice$C303 == 3, 8)
ncppbasa_mice$race_of_mother <- as.numeric(ncppbasa_mice$C303, levels = c(1, 2, 4, 8))
mice_covariate <- merge(mice_covariate, ncppbasa_mice[c("MOMID", "PREGID", "CHILDID", "race_of_mother")], by = c("MOMID", "PREGID", "CHILDID"), all.x = TRUE)
diabetes_data <- read_sas("cpp_diabetes_20231026.sas7bdat") %>% 
  select(MOMID, PREGID, DM)
```

8.  Finally, I performed a series of data merges to consolidate various datasets into one final dataset for analysis. The first merge combines `diabetes_data` (data related to diabetes) with `htn_data` (data related to hypertension). I used the `merge()` function with `by = c("MOMID", "PREGID")`. The `all = TRUE` parameter ensures that all records from both datasets are included in the merged dataset (`diabetes_htn_merged`), even if there are mismatches or missing values in one of the datasets. The second merge integrates the combined diabetes and hypertension data with the `mice_covariate` dataset, which contains the selected covariates. The final merge, I combined the previously merged dataset (`master_file_exposure`, which now contains diabetes, hypertension, and covariate data) with the `seven_ydata` dataset. This merge is slightly different as it includes `CHILDID` in addition to `MOMID` and `PREGID`. The inclusion of `CHILDID` suggests that this dataset has child-specific data, necessitating this additional identifier for accurate merging.

```{r}
diabetes_htn_merged <- merge(diabetes_data, htn_data, by = c("MOMID", "PREGID"), all = TRUE)
master_file_exposure <- merge(diabetes_htn_merged, mice_covariate, by = c("MOMID", "PREGID"), all = TRUE)
final_datafile_mice <- merge(master_file_exposure, seven_ydata, by = c("MOMID", "PREGID", "CHILDID"), all = TRUE)
```

9.  After all the data merged, I set an inclusion criterion based on the survival status of participants, specifically up to the age of 7 years. I added the `C1092` from the `ncppbasa_mice` dataset to your `final_datafile_mice`, which represents the survival status of the children in the study. I filtered with the conditions `C1092 == 0 | C1092 == 57 | C1092 == 58 | is.na(C1092)` to only select participants who have lived up to 7 years (as indicated by the values 0, 57, and 58 in `C1092`), as well as records where the survival status is missing (NA). The inclusion of NA in the survival variable avoids bias by excluding records only when there's definitive information contradicting oour inclusion criteria. After applying these criteria, I saved the filtered dataset as a CSV file named "final_datafile_mice.csv" and assigned the `final_datafile_mice` back to `mice_data`.

```{r}
final_datafile_mice$C1092 <- ncppbasa_mice$C1092
final_datafile_mice <- final_datafile_mice %>%
  filter(C1092 == 0 | C1092 == 57 | C1092 == 58 | is.na(C1092))
write.csv(final_datafile_mice, "final_datafile_mice.csv", row.names = FALSE)
mice_data <- final_datafile_mice
mice_data <- subset(mice_data, select = -c(C1092))
```

10. With this final dataset, I excluded rows without any outcome data. I started by calculating the number of rows in my dataset `mice_data` where all the specified outcome variables were missing. The variables in question included `eczema_nb`, `PWS_nb`, `IH_nb`, `PWS_7y`, `IH_7y`, and `eczema_7y`, which are indicative of various skin conditions assessed at different stages. I used the `rowSums(is.na(...)) == 6` function in R to identify rows where each of these six variables was missing. To get a clear sense of how many rows were affected, I printed out the total count of rows with missing outcome data using the `cat()` function. Using the `which()` function, I pinpointed the specific rows in the dataset that lacked outcome data. I then removed these identified rows from `mice_data`. The syntax `mice_data[-rows_to_remove_all, ]` effectively filtered out those rows, ensuring that my dataset was left with only those entries that had complete outcome data.

```{r}
# Count rows with NA values in all specified columns
rows_with_na_in_all <- sum(rowSums(is.na(mice_data[, c("eczema_nb", "PWS_nb", "IH_nb", "PWS_7y", "IH_7y", "eczema_7y")])) == 6)
cat("Number of rows with NA values in all specified columns:", rows_with_na_in_all, "\n")
# Identify rows with NA values in all specified columns
rows_to_remove_all <- which(rowSums(is.na(mice_data[, c("eczema_nb", "PWS_nb", "IH_nb", "PWS_7y", "IH_7y", "eczema_7y")])) == 6)

# Remove the identified rows
mice_data <- mice_data[-rows_to_remove_all, ]
```

10. To address missing data, I utilized multiple imputation, a statistical technique that allows for the handling of missing data in a way that minimizes bias and preserves statistical power. My approach involved using R programming, specifically the mice, VIM, and dplyr packages, which provided the necessary tools for this complex process. I began by aggregating the data using the aggr function from the VIM package to visualize the missing data patterns. This step was crucial to understand the extent and nature of the missing data in the NCPP dataset.

```{r}
library(mice)
library(VIM)
library(dplyr)

aggr(mice_data, col=c('navyblue', 'yellow'), numbers=TRUE, sortVars=TRUE,
      labels=names(mice_data), cex.axis=.5, gap=0,
      ylab=c("Histogram of missing data", "Pattern"))
```

Next, I created a binary matrix imp_where to identify the locations of the missing values. For the imputation methods (meth), I carefully selected techniques appropriate for each variable type. Continuous variables like weight, height, smoking, and age were imputed using normal linear regression, ensuring that the inherent continuous nature of these data was preserved. Binary categorical variables, such as infant_sex and diabetes mellitus (DM), were imputed using logistic regression. This method was ideal for modeling the probability of one category over another. For other categorical variables without a natural order, I chose polynomial regression imputation. This approach allowed for flexible modeling of relationships among unordered categories, which was essential for variables like hypertension during pregnancy, parity, plurality, income, education level, marital status, and the race of the mother. An initial empty imputation (maxit = 0) was performed to establish the default predictor matrix and methods. This step was critical in setting up the subsequent imputation process. I modified the predictor matrix to reflect the study's design, ensuring that certain variables were not used as predictors. I clearly defined which variables were treated as outcomes and covariates. Hypertension during pregnancy was the primary exposure variable, and it was included in the list of covariates. This distinction was important to examine its relationship with other covariates accurately. Adjustments to the predictor matrix were made to ensure that covariates predicted each other, as well as the outcome variables predicting each other. This step was crucial for a coherent and integrated imputation process. After saving the predictor matrix and imputation methods to disk, I proceeded with the final imputation. I used the specified imputation methods, predictor matrix, and parameters to generate multiple imputed datasets. The mice function allowed for the creation of 5 imputed datasets (m = 5), with a set maximum iteration limit (maxit = 50) and a fixed random seed for reproducibility. The nnet.MaxNWts parameter was set to control the maximum number of weights in the neural network model used for the more complex imputation methods.

```{r}
imp_where <- is.na(mice_data)
```

`meth` is a list that stores the imputation methods for each covariate in the dataset. Different methods are specified for different types of covariates. `weight_lb`, `height_in`, `smoking` and `age` are continuous so they are imputed using normal linear regression.

```{r}
meth <- vector("list", length = ncol(mice_data))
meth$weight_lb <- "norm"
meth$height_in <- "norm"
meth$smoking <- "norm"
meth$age <- "norm"
```

`infant_sex` and `DM` are binary categorical variables and will be imputed using logistic regression. This makes sense because I am modeling the probability of one category (male) versus the other (female) based on predictor variables.

```{r}
meth$DM <- "logreg"
meth$infant_sex <- "logreg"
meth$PWS_nb <- "logreg"
meth$IH_nb <- "logreg"
meth$eczema_nb <- "logreg"
meth$PWS_7y <- "logreg"
meth$IH_7y <- "logreg"
meth$eczema_7y <- "logreg"
```

I will use the polynomial regression imputation method for these categorical variables that do not have a natural order because it will allow for the flexible modeling of relationships among unordered categories.

```{r}
meth$HTN_PREG <- "polyreg"
meth$parity <- "polyreg"
meth$plurality <- "polyreg"
meth$income <- "polyreg"
meth$educ <- "polyreg" 
meth$marital <- "polyreg" 
meth$race_of_mother <- "polyreg"
```

I am initializing an empty imputation with `maxit = 0` to get the default predictor matrix and method to set up the imputation process. After, I will create two new variables to get the imputation methods and the predictor matrix generated during the initial empty imputation.

```{r}
impp_1 <- mice(mice_data, where = imp_where, seed = 13579, maxit = 0)
imputation_methods <- impp_1$meth
predictor_matrix <- impp_1$pred
# "MOMID", "PREGID", "CHILDID", and "infant_sex" are not predictors
predictor_matrix[, c("MOMID", "PREGID", "CHILDID", "infant_sex")] <- 0
```

I need to specify which variables are treated as outcomes and covariates in the imputation process. `HTN_PREG` is the exposure variable and is included in the `covariates` list. This is because I plan to examine its relationship with the other covariates.

```{r}
covariates <- c("DM", "HTN_PREG", "weight_lb", "height_in", "age", "smoking", "parity", "income", "plurality", "educ", "marital", "race_of_mother")
outcome_vars <- c("PWS_nb", "IH_nb", "eczema_nb", "PWS_7y", "IH_7y", "eczema_7y")
```

I am setting the predictor matrix values for covariate variables to 1 to ensure that the covariates predict each other. I also did the same for the outcome variables since I also need them to predict each other.

```{r}
predictor_matrix[outcome_vars, outcome_vars] <- 1
predictor_matrix[covariates, covariates] <- 1
```

Saving the predictor matrix and imputation methods to disk.

```{r}
write.csv(predictor_matrix, "predictor_matrix.csv", row.names = FALSE)
write.csv(imputation_methods, "imputation_methods.csv", row.names = FALSE)
```

I am using the specified imputation methods, predictor matrix, and parameters to generate multiple imputed datasets. `imputation_methods` is a list that contains the chosen imputation methods for each variable. `predictor_matrix` defines how variables predict each other during the imputation process. `where = imp_where` uses a binary matrix to identify the locations of missing values. Setting `m = 5` generates multiple imputations. The `seed = 12345` parameter ensures reproducibility by fixing the random seed. A maximum iteration limit of `maxit = 50` controls the refinement of imputed values during each iteration. `nnet.MaxNWts = 5000` controls the maximum number of weights in the neural network model used for imputation when "logreg" or "polyreg" methods are employed.

```{r}
final_imputation <- mice(mice_data, meth = imputation_methods, pred = predictor_matrix,
                         where = imp_where, m = 5, seed = 12345, 
                         maxit = 50, nnet.MaxNWts = 5000)
saveRDS(final_imputation, "final_imputation.RDS") # saving the imputed datasets
comp <- complete(final_imputation, "long") # complete the imputed datasets
summary(final_imputation)
```

## Results {#sec-results}

Describe your results and include relevant tables, plots, and code/comments used to obtain them. You may refer to the @sec-methods as needed. End with a brief conclusion of your findings related to the question you set out to address. You can include references if you'd like, but this is not required.

## Conclusion

This the conclusion. The @sec-results can be invoked if you'd like.
