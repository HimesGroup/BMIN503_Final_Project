---
title: "BMIN503 Final Project: Subconscious Bias in Pregnancy: Unraveling the Influential Factors within a Healthcare System  "
format:
  html:
    theme: slate
    toc: true
    toc-location: left
editor: visual
number-sections: true
embed-resources: true
editor_options:
  chunk_output_type: inline
execute:
  warning: false
  message: false
---

## Overview
Research indicates that subconscious bias significantly impacts the communication and treatment of Black women by healthcare professionals, contributing to subsequent disparities in maternal health. Black women encounter heightened communication challenges in perinatal healthcare compared to White women. Even when accounting for clinical factors, Black women are less likely to undergo labor induction, receive regular cervical examinations, and more likely to undergo cesarean delivery under general anesthesia (1). These disparities in communication and treatment result in Black women facing a two-fold higher risk of severe maternal morbidity and a threefold higher risk of pregnancy-related death than their White counterparts (1). The primary objective of this project is to investigate healthcare system factors contributing to bias in pregnancy and identify potential areas for improvement within the healthcare system.

## Introduction
The United States grapples with persistent racial inequities and disparities in maternal health. In Philadelphia, non-Hispanic Black women face a staggering fourfold higher likelihood of pregnancy-related deaths compared to non-Hispanic White women. Despite the city being home to distinguished medical centers/hospitals, the 2020 Improving Outcomes: Maternal Mortality in Philadelphia report reveals pregnancy-related death rates surpass the national average (2). From 2013-2018, non-Hispanic Black women accounted for 43% of births but sadly represented 73% of pregnancy-related deaths (2). In contrast, non-Hispanic White women accounted for 26% of births and 19% of pregnancy-related deaths (3). These stark racial inequities in maternal health, particularly pregnancy-related deaths, are undeniable in Philadelphia. There are various factors which contribute to this crisis including subconscious and implicit bias.   

For my project, I utilized a pregnancy intention dataset, encompassing a cohort of pre-covid births at two PENN affiliated hospitals, HUP and PAH. For background, as part of routine practice, every patient attending a new OB or GYN consultation is asked about the intentionality of the pregnancyâ€”whether it is intended or unintended, desired, or undesired. To build the cohort, the study team used detailed information which was abstracted from maternal electronic medical records on demographic characteristics, reproductive and prenatal history, and labor and delivery summaries. 
The primary focus of my study centers on whether an individual is asked the pregnancy desire question, considering a positive or "yes" response regardless of the specific nature of the desire. In this context, the analysis does not delve into the specifics of whether the pregnancy is desired or not. For the purposes of my project, I extracted variables of interest including patient demographics and patient level characteristics.

## Methods

The pregnancy intention dataset consists of 9,672 observations, though only 33% of the data is available for my analysis due to missing data accounting for 67% of the data. For analysis I conduct bivariate analysis to observe the relationship between variables of interest/predictor variables and the outcome variable or if pregnancy desire is asked. The variables of interest are race, age, ethnicity, insurance type, obesity status, encounter type, hospital location, gestational age, and ER utilization. I use machine learning models to predict whether an individual is likely to be asked the pregnancy desire question and what specific factors influence the odds of being asked. 


## Installing packages that I will need throughout. 

```{r}
#Load common packages that will be used

# install.packages("tidyverse")
# install.packages("dplyr")
# install.packages("gtsummary")
# install.packages("arrow")
# install.packages("ggplot")
# install.packages("modelsummary")
# install.packages("modelr")
# install.packages("yardstick")
# install.packages("cowplot")
# install.packages("vip")
# install.packages("tidymodels")
# install.packages("scales")
# install.packages("randomForest")
# install.packages("kernlab")
# install.packages("glmnet")
# install.packages("dotwhisker")
# install.packages("gridExtra")

```

## Loading packages that I will need throughout.

```{r}
library(haven)
library(tidyverse)
library(dplyr)
library(gtsummary)
library(arrow)
library(ggplot2)
library(modelsummary)
library(modelr)
library(yardstick)
library(cowplot)
library(vip)
library(tidymodels)
library(RColorBrewer)
library(scales)
library(randomForest)
library(kernlab)
library(glmnet)
library(dotwhisker)
library(gridExtra)
```

## First I begin by reading in the dataset I will work with. The dataset is originally in a SAS program so I will need to use the haven package for use in R.

```{r}
#Set WD to path for dataset
# install.packages("haven")
# library(haven)

pregintent_dataset <- read_sas("Q:/Mary Sammel/OBGYN/Arden McCallister/PregnancyIntention_Abernathy/data/Derived/goba_research3.sas7bdat")

```

## Initial Data Manipulation

Firstly, I want to create a summary table but will need to manipulate the data set. The original data set has 93 variables but for this analysis I am only interested in 10 variables. I create a new data set which is a subset from the original data set.

```{r}

# Select variables of interest/subset 
# Specify the variables of interest
pregintent_vars <- c("MG_Responded_Desire", "MF_Race_Cat", "MF_Age", "MF_ethnicity", "MF_Insurance_Cat", "MF_Entry_Obese", "MF_Entry_Encounter_Type", "HOSPITAL", "MG_GA", "MG_ER_Utilization" )

# Subset the data set to include only variables of interest. New dataset for analysis--preg_desire
preg_desire <- pregintent_dataset |>
  select(all_of(pregintent_vars))

```

## Additonal Data Manipulation and Transformation

There is additional data manipulation needed. I will use the dplyr package, specifically the mutate function to create new variables based on variables in the original data set.I also convert the variables to a factor with specific levels and labels. This will be helpful when creating plots for data visualization later on.

```{r}
#Create new variables using mutate. Table function is useful for understanding the distribution of values in a categorical variable.

#RACE CATEGORY IS ACTUALLY FOR BLACK PARTICIPANTS

preg_desire <- mutate(preg_desire, MG_Responded_Desire = factor(MG_Responded_Desire, levels = c(0,1),
                    labels = c("No", "Yes")))

preg_desire <- mutate(preg_desire, MF_Age = factor(MF_Age, levels = c(0,1,2,3,4,5),
                    labels = c("19 and Under", "20-24 years", "25-29 years", "30-34 years", "35-39 years", "40-44 years")))

preg_desire <- mutate(preg_desire, MF_Race_Cat = factor(MF_Race_Cat, levels = c(0,1),
                    labels = c("White/Other", "Black")))

preg_desire <- mutate(preg_desire, MF_ethnicity = factor(MF_ethnicity, levels = c(0,1),
                    labels = c("Non-Hispanic", "Hispanic")))

preg_desire <- mutate(preg_desire, MF_Entry_Obese = factor(MF_Entry_Obese, levels = c(0,1),
                    labels = c("Not Obese", "Obese")))

preg_desire <- mutate(preg_desire, MF_Insurance_Cat = factor(MF_Insurance_Cat, levels = c(0,1),
                    labels = c("Private", "Public/Uninsured")))

preg_desire <- mutate(preg_desire, MF_Entry_Encounter_Type = factor(MF_Entry_Encounter_Type, levels = c("Hospital Encounter" , "Office Visit", "Procedure"),
                    labels = c("Hospital Encounter" , "Office Visit", "Procedure")))

preg_desire <- mutate(preg_desire, HOSPITAL = factor(HOSPITAL, levels = c("HUP","PAH"),
                    labels = c("HUP", "PAH")))

preg_desire <- mutate(preg_desire, MG_GA = factor(MG_GA, levels = c(0,1),
                    labels = c("Less Than 24Weeks", "Greater than 24Weeks")))

preg_desire <- mutate(preg_desire, MG_ER_Utilization = factor(MG_ER_Utilization,      levels = c(0,1),
                    labels = c("No ER Utilization ", "ER Utilization")))

```


## Summary Table Including Variables of Interest

After cleaning and manipulating the data, I create a table 1 or summary table of the new subsetted dataset "preg_desire". This summary table shows all the variables in the "preg_desire" data set which I will use primarily throughout analysis. 

```{r}
preg_desire |> tbl_summary()

```

## Crude Analysis

Running a crude analysis to examine the variables of interest in relation to the outcome variable. This will provide a preliminary view of the data.The outcome variable is MG_Responded_Desire which captures whether there is a response to the question "Do you desire this pregnancy?".

For this first bivariate analysis we se that there is a statistically significant relationship between a patients age and whether they are asked the pregnancy desire question. 

```{r}

# # Run Crude Analysis

Age.Desire <-
  preg_desire |>
  select(MF_Age,MG_Responded_Desire) |>
  tbl_summary(
    by = MG_Responded_Desire, percent = "row",
    label = list(MF_Age ~ "Patient Age"),
    statistic = list(all_continuous() ~ "{mean} ({sd})"),
    digits = list(MF_Age ~ c(0,1,2,3,4,5))
  ) |>
add_p(test = everything() ~ "chisq.test") #adding the p-value 
Age.Desire

```


This next bivariate analysis shows that there is a statistically significant relationship between a patients' race and wheter they are asked the pregnancy desire question. 
```{r}
#Race x Responded Desire
Race.Desire<-
  preg_desire |>
  select(MF_Race_Cat,MG_Responded_Desire) |>
  tbl_summary(
    by = MG_Responded_Desire, percent = "row",
    label = list(MF_Race_Cat ~ "Race"),
    statistic = list(all_continuous() ~ "{mean} ({sd})"),
    digits = list(MF_Race_Cat ~ c(0,1))
  ) |>
add_p(test = everything() ~ "chisq.test") #adding the p-value 
Race.Desire
```

We see in this bivariate analysis that there is statistically significant relationship between ethnicity and whether a patient is asked the pregnancy desire question, though it is not as strong of a significance as the other relationships above.
```{r}
#Ethnicity x Responded Desire
Ethnicity.Desire<-
  preg_desire |>
  select(MF_ethnicity,MG_Responded_Desire) |>
  tbl_summary(
    by = MG_Responded_Desire, percent = "row",
    label = list(MF_ethnicity ~ "Ethnicity"),
    statistic = list(all_continuous() ~ "{mean} ({sd})"),
    digits = list(MF_ethnicity ~ c(0,1))
  ) |>
add_p(test = everything() ~ "chisq.test") #adding the p-value
Ethnicity.Desire
```

Interestingly, in this  bivariate relationship we see that there is a statistically significant relationship between a patients' obesity status and whether they are asked the pregnancy desire question. 
```{r}
#Obesity x Responded Desire
Obesity.Desire<-
  preg_desire |>
  select(MF_Entry_Obese,MG_Responded_Desire) |>
  tbl_summary(
    by = MG_Responded_Desire, percent = "row",
    label = list(MF_Entry_Obese ~ "Obese Status"),
    statistic = list(all_continuous() ~ "{mean} ({sd})"),
    digits = list(MF_Entry_Obese ~ c(0,1))
  ) |>
add_p(test = everything() ~ "chisq.test") #adding the p-value
Obesity.Desire

```

The relationship between a patients' insurance status or type and whether they are asked the pregnancy desire question is statistically significant. 
```{r}
#Insurance x Responded Desire
Insurance.Desire<-
  preg_desire |>
  select(MF_Insurance_Cat,MG_Responded_Desire) |>
  tbl_summary(
    by = MG_Responded_Desire, percent = "row",
    label = list(MF_Insurance_Cat ~ "Insurance Status"),
    statistic = list(all_continuous() ~ "{mean} ({sd})"),
    digits = list(MF_Insurance_Cat ~ c(0,1))
  ) |>
add_p(test = everything() ~ "chisq.test") #adding the p-value
Insurance.Desire
```

We also see a statistically significant relationship between the encounter type and whether a patient is asked the pregnancy desire question. 
```{r}
#Encounter Type x Responded Desire
Encounter_type.Desire<-
  preg_desire |>
  select(MF_Entry_Encounter_Type,MG_Responded_Desire) |>
  tbl_summary(
    by = MG_Responded_Desire, percent = "row",
    label = list(MF_Entry_Encounter_Type ~ "Encounter Type"),
    statistic = list(all_continuous() ~ "{mean} ({sd})"),
    digits = list(MF_Entry_Encounter_Type ~ c(0,1))
  ) |>
add_p(test = everything() ~ "chisq.test") #adding the p-value
Encounter_type.Desire
```

Surprisingly, we see that there is a statistically significant relationship between hospital location and whether a patient is asked the pregnancy desire question.  We see that patients at HUP are more than four times likely to be asked the pregnancy desire question compared to PAH.
```{r}
#Hospital x Responded Desire
HOSPITAL.Desire<-
  preg_desire |>
  select(HOSPITAL,MG_Responded_Desire) |>
  tbl_summary(
    by = MG_Responded_Desire, percent = "row",
    label = list(HOSPITAL ~ "Hospital Location"),
    statistic = list(all_continuous() ~ "{mean} ({sd})"),
    digits = list(HOSPITAL ~ c(0,1))
  ) |>
add_p(test = everything() ~ "chisq.test") #adding the p-value
HOSPITAL.Desire
```

There is no statistically significant relationship between gestational age and whether a patient is asked the pregnancy desire question. However, it is intriguing to note that patients at 24 weeks of gestation or beyond are still being asked the pregnancy desire question at rates comparable to those who are less than 24 weeks gestation. This observation is noteworthy considering that in the state of Pennsylvania, there are limited options for patients who reach 24 weeks gestation, typically involving carrying the pregnancy to term. The motivation behind posing this question to patients at 24 weeks gestation or more raises interesting questions and warrants further exploration (not done in this analysis).
```{r}
#Gestation Weeks x Responded Desire
MG_GA.Desire<-
  preg_desire |>
  select(MG_GA,MG_Responded_Desire) |>
  tbl_summary(
    by = MG_Responded_Desire, percent = "row",
    label = list(MG_GA ~ "Gestational Age"),
    statistic = list(all_continuous() ~ "{mean} ({sd})"),
    digits = list(MG_GA ~ c(0,1))
  ) |>
add_p(test = everything() ~ "chisq.test") #adding the p-value
MG_GA.Desire

```

There is a statistically significant relationship between ER utilization and whether a patient is asked the pregnancy desire question.
```{r}
#ER Utilization  x Responded Desire
ER_Utilization.Desire<-
  preg_desire |>
  select(MG_ER_Utilization,MG_Responded_Desire) |>
  tbl_summary(
    by = MG_Responded_Desire, percent = "row",
    label = list(MG_ER_Utilization ~ "ER Utilization"),
    statistic = list(all_continuous() ~ "{mean} ({sd})"),
    digits = list(MG_ER_Utilization ~ c(0,1))
  ) |>
add_p(test = everything() ~ "chisq.test") #adding the p-value
ER_Utilization.Desire

```

## Creating Plots for Data Visualizations of The Crude Analysis

Pregnancy Desire Asked by Age Categories

```{r}
#Visualizations 
#Bar Chart (continuous x binary) Age x MG_Responded_Desire
my_colors <- brewer.pal(3, "Set2")
# Define a color palette

preg_desire |>
  filter(!is.na(MF_Age)) |>
  ggplot(aes(MF_Age, fill = MG_Responded_Desire)) +
  geom_bar(position = "fill") +
  labs(
    x = "Age Categories",
    y = "Proportion",
    fill = "Responded Desire",
    title = "Pregnancy Desire Asked by Age"
  ) +
  scale_fill_manual(
    name = "Desire Asked",
    values = my_colors,
    labels = c("No", "Yes"),
    breaks = c("No", "Yes")
  ) +
  theme_minimal()
```

Pregnancy Desire Asked by Race Categories

```{r}
#Visualiztions 
#Bar Graph (categorical/nominal x binary) Race x MG_Responded_Desire

preg_desire |>
  filter(!is.na(MF_Race_Cat)) |>
  ggplot(aes(x = MF_Race_Cat, fill = MG_Responded_Desire)) +
  geom_bar() +
  labs(
    x = "Race Categories",
    y = "Count",
    fill = "Responded Desire",
    title = "Pregnancy Desire Asked by Race Categories"
  ) +
  scale_fill_manual(
    name = "Desire Asked",
    values = brewer.pal(3, "Set2"),  # Use a better color palette
    labels = c("No", "Yes"),
    breaks = c("No", "Yes")
  ) +
  theme_minimal()

```

Pregnancy Desire Asked by Ethnicity

```{r}
#Visualiztions 
#Bar Graph (categorical/nominal x binary) Ethnicity x MG_Responded_Desire


my_colors <- brewer.pal(2, "Set1")

# Create the ggplot with title, better legend, and color palette
my_colors <- brewer.pal(2, "Set1")

# Create the ggplot with title, informative legend, and color palette
preg_desire |>
  filter(!is.na(MF_ethnicity)) |>
  ggplot(aes(x = MF_ethnicity, fill = MG_Responded_Desire)) +
  geom_bar(position = "dodge") +
  labs(
    x = "Ethnicity",
    y = "Count",
    fill = "Responded Desire",
    title = "Pregnancy Desire Asked by Ethnicity"
  ) +
  scale_fill_manual(
    name = "Desire Asked",
    values = my_colors,
    labels = c("No", "Yes")
  ) +
  theme_minimal()
```

Pregnancy Desire Asked by Obese Status

```{r}
#Visualiztions 
#Bar Chart (binaryxbinary) Obesity x MG_Responded_Desire **use this code for race, insurance to show percentages**


my_colors <- brewer.pal(2, "Set1")

# Create the ggplot with title, informative legend, and color palette
preg_desire |>
  filter(!is.na(MF_Entry_Obese)) |>
  ggplot(aes(MF_Entry_Obese, fill = MG_Responded_Desire)) +
  geom_bar(position = "fill") +
  labs(
    x = "Obese",
    y = "Proportion",
    fill = "Responded Desire",
    title = "Pregnancy Desire Asked by Obese Status"
  ) +
  scale_fill_manual(
    name = "Desire Asked",
    values = my_colors,
    labels = c("No", "Yes"),
    breaks = c("No", "Yes")
  ) +
  theme_minimal()
```

Pregnancy Desire Asked by Insurance Category

```{r}
#Barplot (binaryxbinary) Insurance x MG_Responded_Desire 


my_colors <- brewer.pal(2, "Set1")


# Create the ggplot with title, informative legend, and color palette
preg_desire |>
  filter(!is.na(MF_Insurance_Cat)) |>
  ggplot(aes(x = MF_Insurance_Cat, fill = MG_Responded_Desire)) +
  geom_bar(position = "fill") +
  labs(
    x = "Insurance Category",
    y = "Proportion",
    fill = "Responded Desire",
    title = "Pregnancy Desire Asked by Insurance Category"
  ) +
  scale_fill_manual(
    name = "Desire Asked",
    values = brewer.pal(2, "Set1"),  
    labels = c("No", "Yes"),
    breaks = c("No", "Yes")
  ) +
  theme_minimal()
```

Pregnancy Desire Asked by Encounter Type

```{r}
#Encounter_type.Desire x MG_Responded_Desire 

my_colors <- brewer.pal(2, "Set1")


# Create the ggplot with title, informative legend, and color palette
preg_desire |>
  filter(MF_Entry_Encounter_Type != "") |>
  ggplot(
       aes(MF_Entry_Encounter_Type, fill = MG_Responded_Desire)) +
  geom_bar(position = "fill") +
  labs(
    x = "Encounter Type",
    y = "Proportion",
    fill = "Responded Desire",
    title = "Pregnancy Desire Asked by Encounter Type"
  ) +
  scale_fill_manual(
    name = "Desire Asked",
    values = my_colors,
    labels = c("No", "Yes"),
    breaks = c("No", "Yes")
  ) +
  theme_minimal()

```

Pregnancy Desire Asked Desire by Hospital Location

```{r}
#HOSPITAL.Desire x MG_Responded_Desire 

my_colors <- brewer.pal(2, "Set1")


# Create the ggplot with title, informative legend, and color palette
preg_desire |>
filter(HOSPITAL != "") |> #Filter to only include values no NAs
ggplot(
  aes(HOSPITAL, fill = MG_Responded_Desire)) +
  geom_bar(position = "fill") +
  labs(
    x = "Hospital Location",
    y = "Proportion",
    fill = "Responded Desire",
    title = "Pregnancy Desire Asked Desire by Hospital Location"
  ) +
  scale_fill_manual(
    name = "Desire Asked",
    values = my_colors,
    labels = c("No", "Yes"),
    breaks = c("No", "Yes")
  ) +
  theme_minimal()

```

Pregnancy Desire Asked by Gestational Age

```{r}
#MG_GA x MG_Responded_Desire 

my_colors <- brewer.pal(2, "Set1")


# Create the ggplot with title, informative legend, and color palette
preg_desire |>
filter(MG_GA != "") |> #Filter to only include values no NAs
ggplot(
  aes(MG_GA, fill = MG_Responded_Desire)) +
  geom_bar(position = "fill") +
  labs(
    x = "Gestational Age",
    y = "Proportion",
    fill = "Responded Desire",
    title = "Pregnancy Desire Asked by Gestational Age"
  ) +
  scale_fill_manual(
    name = "Desire Asked",
    values = my_colors,
    labels = c("No", "Yes"),
    breaks = c("No", "Yes")
  ) +
  theme_minimal()
```

Pregnancy Desire Asked by ER Utilization

```{r}
#ER_Utilization.Desire x MG_Responded_Desire 

my_colors <- brewer.pal(2, "Set1")


# Create the ggplot with title, informative legend, and color palette
preg_desire |>
filter(MG_ER_Utilization != "") |> #Filter to only include values no NAs
ggplot(
  aes(MG_ER_Utilization, fill = MG_Responded_Desire)) +
  geom_bar(position = "fill") +
  labs(
    x = "ER Utilization",
    y = "Proportion",
    fill = "Responded Desire",
    title = "Pregnancy Desire Asked by ER Utilization"
  ) +
  scale_fill_manual(
    name = "Desire Asked",
    values = my_colors,
    labels = c("No", "Yes"),
    breaks = c("No", "Yes")
  ) +
  theme_minimal()
```

## Stratified analysis

Next, I am going to perform a stratified analysis for potential confounding variables to better understand the relationship between the predictor variables and the outcome variable.

I begin by stratifying for race

```{r}
#Stratified analysis comparing variables of interest to outcome variable and controlling for confounders 

strat.race <- tbl_strata(
  data = preg_desire,
  strata = HOSPITAL,
                            ~ .x |>
                            tbl_summary(by=MF_Race_Cat) |>
    modify_header(label ~ paste0("strat.race" , today(), "Stratifying for Race"))|>
    add_p()
    
)

strat.race
#Create a subset data set to only include variables of interest 

```

Stratifying for Age

```{r}
#Stratified analysis comparing variables of interest to outcome variable and controlling for confounders 

strat.age <- tbl_strata(
  data = preg_desire,
  strata = MG_Responded_Desire,
                            ~ .x |>
                            tbl_summary(by=MF_Age) |>
    modify_header(label ~ paste0("strat.age" , today(), "Stratifying for Age"))|>
    add_p()
    
)

strat.age
#Create a subset data set to only include variables of interest 
```

Stratifying for Gestational Age

```{r}
#Stratified analysis comparing variables of interest to outcome variable and controlling for confounders 

strat.GA <- tbl_strata(
  data = preg_desire,
  strata = MG_Responded_Desire,
                            ~ .x |>
                            tbl_summary(by=MG_GA) |>
    modify_header(label ~ paste0("strat.GA" , today(), "Stratifying for Gestational Age"))|>
    add_p()
    
)

strat.GA
#Create a subset data set to only include variables of interest 
```

Stratifying for Hospital Location

This stratification is particularly significant as it reveals that while HUP has a higher overall rate of asking its patients the pregnancy desire question, PAH, when considering patient-level characteristics, exhibits a higher rate of asking the pregnancy desire question compared to HUP. This suggests noteworthy disparities between the two hospitals based on patient characteristics.

```{r}
#Stratified analysis comparing variables of interest to outcome variable and controlling for confounders 

strat.hospital <- tbl_strata(
  data = preg_desire,
  strata = MG_Responded_Desire,
                            ~ .x |>
                            tbl_summary(by=HOSPITAL) |>
    modify_header(label ~ paste0("strat.hospital" , today(), "Stratifying for Hospital Location")) |>
    add_p()
    
)

strat.hospital
#Create a subset data set to only include variables of interest 
```

Stratifying for Type of Insurance

Similarly to the hospital stratification above, we see that there are noteworthy disparities between a patients' insurance status in relation to patient characteristics. 
```{r}
#Stratified analysis comparing variables of interest to outcome variable and controlling for confounders 

strat.insurance <- tbl_strata(
  data = preg_desire,
  strata = MG_Responded_Desire,
                            ~ .x |>
                            tbl_summary(by=MF_Insurance_Cat) |>
    modify_header(label ~ paste0("strat.insurance" , today(), "Stratifying for Type of Insurance"))|>
    add_p()
    
)

strat.insurance
#Create a subset data set to only include variables of interest 
```

Stratifying for ER Utilization

```{r}
#Stratified analysis comparing variables of interest to outcome variable and controlling for confounders 

strat.ER <- tbl_strata(
  data = preg_desire,
  strata = MG_Responded_Desire,
                            ~ .x |>
                            tbl_summary(by=MG_ER_Utilization) |>
    modify_header(label ~ paste0("strat.ER" , today(), "Stratifying for ER Utilization"))|>
    add_p()
    
)

strat.ER
#Create a subset data set to only include variables of interest 
```

## Logistic Regression

Next, I am going to run a logistic regression model for insight into the likelihood that an individual is asked the "Pregnancy Desire" question. The AUC of the logistic regresssion is 0.86 indicating that the model performs well at predicting the likelihood that an individual will be asked the pregnancy desire question. 

```{r}
##Check for normal distribution of data and types of methods to use
#Logistic Regression and ROC

preg_desire.glm <- glm(MG_Responded_Desire ~ MF_Age+MF_Race_Cat+MF_ethnicity+MF_Entry_Obese+MF_Insurance_Cat+HOSPITAL+MG_GA+MF_Entry_Encounter_Type+MG_ER_Utilization , data = preg_desire, family = binomial(logit))
summary(preg_desire.glm)

#Odds ratio
exp(cbind(OR = coef(preg_desire.glm), confint(preg_desire.glm)))

glm.pred <- predict(preg_desire.glm, preg_desire, type = "response")
head(glm.pred)

preg_desire.pred.values <- bind_cols(truth = preg_desire$MG_Responded_Desire, 
                                 glmpred = glm.pred) |>
  mutate(predicted = factor(case_when(glmpred > 0.5 ~ "Desire Asked",
                               glmpred <= 0.5 ~ "Desire Not Asked")))

autoplot(roc_curve(preg_desire.pred.values, 
                   truth, glmpred,
                   event_level = "second"))

#Plotting AUC
preg_desire.pred.values |>
    roc_auc(truth, glmpred, event_level = "second")
```

## Parsnip Approach 

Using the parsnip approach which ultimately will yield a forest plot displaying the effect size and confidence intervals.
```{r}

#parsnip approach
logreg_cls_spec <- 
  logistic_reg() |> #specifying logistic regression model (Model Specification)
  set_engine("glm")

#FIGURE OUT HOW TO CREATE THE ODDS RATIO BEFORE CREATING THE PLOT BELOW 
# exp(cbind(OR = coef(preg_desire.glm), confint(preg_desire.glm)))

logreg_cls_fit <- logreg_cls_spec |>
  fit(MG_Responded_Desire ~ ., data = preg_desire) # Model Fitting
logreg_cls_fit
tidy(logreg_cls_fit) #providing an organized summary of the models coef.

tidy(logreg_cls_fit, exponentiate = TRUE) |> 
  dwplot(dot_args = list(size = 2, color = "black"),
         whisker_args = list(color = "black"),
         vline = geom_vline(xintercept = 1, colour = "grey50", linetype = 2)) +
  theme_bw()







```
```{r}
#Create data frame by binding columns 
preg_desire.pred.values <-  bind_cols(     
  truth = preg_desire$MG_Responded_Desire, #Observed values of outcome var.
  predict(logreg_cls_fit, preg_desire), #predicted values of log. reg
  predict(logreg_cls_fit, preg_desire, type = "prob") #predicted probabilities of log reg
)
preg_desire.pred.values

autoplot(roc_curve(preg_desire.pred.values, #Generate ROC plot 
                   truth, .pred_Yes, event_level = "second"))

roc_auc(preg_desire.pred.values, 
                   truth, .pred_Yes, event_level = "second") #Calculate AUC
```

## Recipes & Cross Validation

Next I will run cross validation to evaluate how my models above perform in comparison. 
```{r}
set.seed(1234)
preg_desire.training.folds <- vfold_cv(preg_desire, v = 10) #creates 10-fold Cross Validation of entire data set (internal validation) ONLY KEEP THIS
preg_desire.training.folds

logreg_workflow <-
  workflow() |>
  add_model(logreg_cls_spec) |>
  add_formula(MG_Responded_Desire ~ .)

set.seed(1234)
logreg_fit_cv <-
  logreg_workflow |>
  fit_resamples(preg_desire.training.folds, 
                control = control_resamples(save_pred = TRUE))
logreg_fit_cv
```

```{r}
collect_metrics(logreg_fit_cv)

logreg_fit_cv |>
  collect_predictions() |>
  roc_curve(MG_Responded_Desire, .pred_Yes, event_level = "second") |> #ROC of outcome variable and predicted NO
  autoplot()
```


## Random Forest Analysis

Lastly I will run a random forest analysis to evaluate which predictor variables contribute the most to the models predictions. 

```{r}
#remove NAs
preg_desire <- preg_desire |>
  drop_na()

# Model Specification
rf_cls_spec <- 
  rand_forest(trees = 1000, min_n = 5) |> 
  set_engine("randomForest", importance = TRUE) |>
  set_mode("classification")
rf_cls_spec


# Model Fitting
rf_cls_fit <- rf_cls_spec |>
  fit(MG_Responded_Desire ~ ., data = preg_desire)
rf_cls_fit


# Prediction Values
preg_desire.rf.pred.values <- bind_cols(
  truth = preg_desire$MG_Responded_Desire,
  predict(rf_cls_fit, preg_desire),
  predict(rf_cls_fit, preg_desire, type = "prob")
)

roc_auc(preg_desire.rf.pred.values, 
                   truth, .pred_Yes, event_level = "second")

autoplot(roc_curve(preg_desire.rf.pred.values, 
                   truth, .pred_Yes, event_level = "second"))


```

To get an understanding of the variables that most contribute to the classification, I will extract the importance scores using the vip package. Using all of the data, first using extract_fit_engine() to get the output from the original function, then using the vip function.

```{r}
rf_cls_fit |>
  extract_fit_engine() |>
  importance()

rf_cls_fit |>
  extract_fit_engine() |>
  vip()
```


## Conclusion

In conclusion, the significant influence of hospital location on the likelihood of individuals being asked the pregnancy desire question underscores the complexity of factors contributing to disparities in perinatal care. This project emphasizes the critical need for further investigation into the underlying causes of substantial discrepancies based on patient characteristics between healthcare facilities. Uncovering and addressing potential subconscious bias in the perinatal care setting is crucial for mitigating the observed disparities, particularly for Black women who already face heightened risks in maternal health outcomes.
Limitations of the project: The missingness of response in the data creates limitations. 


## References


1. Green TL, Zapata JY, Brown HW, Hagiwara N. Rethinking bias to achieve maternal health equity: Changing Organizations, not just individuals. Obstetrics and gynecology. May 1, 2021. Accessed December 13, 2023. https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8055190/. 

2. Improving outcomes: Maternal mortality - city of Philadelphia. Accessed December 13, 2023. https://www.phila.gov/media/20210322093837/MMRReport2020-FINAL.pdf.

3. Maternal mortality report finds Non-Hispanic black women represent 73% of pregnancy-related deaths in Philadelphia: Department of Public Health. City of Philadelphia. Accessed December 13, 2023. https://www.phila.gov/2021-03-23-maternal-mortality-report-finds-non-hispanic-black-women-represent-73-of-pregnancy-related-deaths-in-philadelphia/.


