---
title: 'FINAL PROJECT_YOU'
subtitle: "BMIN5030_Fall2023"
format: 
  html:
    theme: lumen
    toc: true #
    toc-location: left 
editor: visual
theme: united #how you can change your theme
embed-resources: true
number-sections: true
editor_options: 
  chunk_output_type: inline
---

# Overview

> Sepsis is among the leading causes of hospital readmission, and survivors often experience long-term consequences. Research has shown that home health services can improve the outcomes of sepsis survivors, reducing the likelihood of hospital readmission. This project aims to identify the patient/clinical characteristics that are associated with sepsis survivors' discharge dispositions (home or home with home health care) and 30-day hospital readmission using Medical Information Mart for Intensive Care (MIMIC-IV) data, which is a publicly accessible and deidentified data.

# Introduction

> Sepsis is a severe condition caused by infection, leading to life-threatening organ dysfunction (Singer et al., 2016). Annually more than 1.7 million adults in the US are diagnosed with sepsis (CDC, 2023), with a majority falling into the age group of 65 or older (Paoli et al., 2018). Despite improvements in healthcare, sepsis survivors in older adults still grapple with elevated mortality rates and lingering physical, psychological, and emotional consequences. A significant proportion of sepsis survivors are readmitted to the hospital within 30 days after initial sepsis hospitalization. Sepsis places a substantial economic burden on society, necessitating post-acute care to address lingering complications. Home health care (HHC) is provided to a significant portion of sepsis survivors to support their recovery and rehabilitation. However, the impact of HHC on reducing 30-day readmission rates for sepsis survivors remains unexplored. This retrospective cohort study, using the MIMIC-IV database, aims to address this gap by examining the following objectives: (1) describe and compare **baseline** patient characteristics (i.e., demographic and clinical characteristics) and 30-day readmission rates of older sepsis survivors discharged home with HHC and without HHC; (2) determine the risk factors associated with 30-day readmission.
>
> The proposed study involves interdisciplinary collaboration, focusing on the transition of sepsis survivors form acute hospitals to post-acute settings (i.e., home and home health care). Transition is one of the vulnerable points where medical errors occur, as multiple stakeholders and multiple entities are involved in this process. Discharge planning involves a team of professionals, including physicians, nurses, social workers, case managers, and patients and care partners to ensure safe and smooth transition from hospital to home. The findings of the study may offer valuable insights to healthcare providers engaged in discharge planning for older sepsis survivors. By considering the risk factors associated with readmission, this study can serve as a basis for supporting evidence-based recommendations for those who are involved in decision-making for discharge disposition decisions. This, in turn, empowers healthcare decision-makers to strategize discharge planning effectively, with a focus on identifying individuals at one ofthe highest risks of rehospitalization with continuous health concerns.

# Methods

Data were downloaded using Mac Terminal Version 2.11 (440), downloaded in September 2023, via designated terminal \<wget -r -N -c -np \--user ysb8390 \--ask-password https://physionet.org/files/mimiciv/2.2/\>. For data analysis, R software (version 4.3.1., CRAN) was used.

## Data Source: Overview of MIMIC-IV

MIMIC-IV is a public database, which contains deidentified clinical data of adult patients aged 18 or older admitted to critical care units at the Beth Israel Deaconess Medical Center (BIDMC) in Boston, Massachusetts from either the ED or an ICU (Johnson, 2023). This extensive data contains records from 299,712 patients, encompassing 431,231 hospital admissions and 73,181 ICU stays between 2008 and 2019.

More information about MIMIC can be found here: <https://mimic.mit.edu/docs/iv/>

Also, there is an online community where conceptualization of variables and codes shared by others using MIMIC: <https://github.com/MIT-LCP/mimic-code>

## Installing/Loading Necessary Packages

```{r}
#| eval: FALSE

install.packages(c("tidyverse", "dplyr", "gtsummary", "ggplot2", "lubridate", "RColorBrewer", "cowplot", "ggpubr", "pROC", "comorbidity", "readr", "janitor", "pacman", "gee", "janitor", "geepack", "modelsummary", "psych", "furniture", "pander", "lme4", "texreg", "MESS"))
```

```{r}
#| label: load-packages
#| include: FALSE

library(tidyverse)
library(dplyr) #For data cleaning
library(gtsummary) #For descriptive statistics
library(ggplot2) #For graphd 
library(lubridate) #For handling and converting dates
library(RColorBrewer) #For coloring the plots
library(cowplot) #For combining multiple plots into one figure
library(ggpubr) #For combining multiple graphs into one figure
library(pROC) #For cross-validation
library(comorbidity) #For Elixhauser comorbidity
library(readr)
library(broom) # useful for regression models
library(janitor) # for cleaning & descriptive statistics
library(pacman)
library(gee) # generalized estimation equation solver
library(geepack) # generalized estimation equation package
library(modelsummary) # for model summary
library(psych) # describe function
library(furniture) # nice table1() descriptives
library(pander) # nice looking general tabulations
library(lme4) # linear, generalized linear, & nonlinear mixed models
library(texreg) # Convert regression output to LaTeX or HTML tables
library(remotes) # access remotely
library(MESS) # compare QIC
```

# Identify Total Number of Hospital Admission

```{r}
admissions <- read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/Penn/ONR/MIMIC/mimic-iv-2.2/hosp/admissions.csv")

admissions |>
  summarise(n_distinct(hadm_id),
            n_distinct(subject_id))

admissions <- admissions |>
  mutate(admittime = ymd_hms(admittime),
         dischtime = ymd_hms(dischtime))
```

# Cohort Identification

### Identifying in-hospital stays (vs. observational stays)

In this study, I will focus on cases when patients had in-hospital stays, meaning hospital length of stays longer than 48 hours to exclude observational stay cases. We will first create a hospital length of stay variable and then filter cases whose hospital length of stay is less than 48 hours (i.e., observational stays).

```{r}
# Using admissions table 

admissions <- admissions |>
  mutate(admittime = ymd_hms(admittime),
         dischtime = ymd_hms(dischtime))


admissions <- admissions |>
  mutate(hosp_los = as.numeric(difftime(dischtime, admittime, units = "days")))

admissions$hosp_los <- round(admissions$hosp_los, digits = 2)

admissions |>
  dplyr::select(hosp_los) |>
  psych::describe()
# mean = 4.46 days; min = -0.95; max = 295.99 days

admissions <- admissions |>
  mutate(adm_inhosp = ifelse(hosp_los < 2, 0, 1)) |>
  mutate(adm_inhosp = factor(adm_inhosp, levels = c(0, 1))) 

table(admissions$adm_inhosp) # observational stays = 172170; in hospital stays = 247542 (57.4%)

hosp_los_inhosp <- admissions |>
  filter(adm_inhosp == 1)

# data frame
# hosp_los_inhosp = in-hospital stays cohort (sourced from admissions table)
# variable
# adm_inhosp = 1 means inhospital stay (hosp_los >= 2days)
```

### Sepsis Cohort Selection

Sepsis patients will be identified based on international classification of disease (ICD) codes from both the 9th and 10th revisions, as both versions were available in MIMIC. Sepsis cases will be identified through two strategies: (1) explicit ICD-9 codes (995.92, and 785.52) or explicit ICD-10 codes (R65.2, R65.20, and R65.21), and (2) implicit identification method using Angus criteria (Angus, 2001) that considers the case as sepsis when the patient is coded for both infection (i.e., ICD 9 or 10 infection codes) and organ dysfunction (i.e., ICD 9 or 10 organ dysfunction codes). These two strategies are adopted to increase the sensitivity of sepsis diagnosis up to 50% compared to other methods to identify sepsis patients (Iwashyna, 2014; Fleischmann-Struzek, 2018).

Now, I am going to identify how many admissions are associated with sepsis diagnosis using both explicit and implicit methods.

```{r}
# Diagnosis_icd table
icd  <- read_csv(file="/Users/sangbin/Library/Mobile Documents/com~apple~CloudDocs/Penn/ONR/MIMIC/mimic-iv-2.2/hosp/diagnoses_icd.csv.gz")

# Check data class 
str(icd$icd_code) #character
str(icd$icd_version) #integar

inhosp_icd <- icd |>
  left_join(hosp_los_inhosp, by = c("subject_id", "hadm_id")) |>
  filter(adm_inhosp == 1)

table(inhosp_icd$adm_inhosp) #successfully filtered

# Icd9 codes
# Explicit sepsis
inhosp_icd <- inhosp_icd |>
  mutate(
    icd9_sepsis = case_when(
      icd_version == 9 &
        icd_code %in% c ("99592", "78552") ~ 1,
      TRUE ~ 0
    )
  )

table(inhosp_icd$icd9_sepsis)

# Implicit - Infection    
inhosp_icd<- inhosp_icd |>
  mutate(
    icd9_infection = case_when(
      icd_version == 9 &
        substr(icd_code, 1, 3) %in% c("001","002","003","004","005","008",
                                      "009","010","011","012","013","014",
                                      "015","016","017","018","020","021",
                                      "022","023","024","025","026","027",
                                      "030","031","032","033","034","035",
                                      "036","037","038","039","040","041",
                                      "090","091","092","093","094","095",
                                      "096","097","098","100","101","102",
                                      "103","104","110","111","112","114",
                                      "115","116","117","118","320","322",
                                      "324","325","420","421","451","461",
                                      "462","463","464","465","481","482",
                                      "485","486","494","510","513","540",
                                      "541","542","566","567","590","597",
                                      "601","614","615","616","681","682",
                                      "683","686","730") ~ 1,
      substr(icd_code, 1, 4) %in% c("5695","5720","5721","5750","5990","7110",
                                    "7907","9966","9985","9993") ~ 1,
      substr(icd_code, 1, 5) %in% c("49121","56201","56203","56211","56213",
                                    "56983", "99591") ~ 1,
      TRUE ~ 0
    )
  )

table(inhosp_icd$icd9_infection)

# Implicit - Organ dysfunction
inhosp_icd<- inhosp_icd |>
  mutate(
    icd9_organdysfunction = case_when(
      icd_version == 9 &
        substr(icd_code, 1, 3) %in% c("458", "293", "570", "584") ~ 1, 
      substr(icd_code, 1, 4) %in% c("7855", "3483", "3481", "2874", "2875", "2869", "2866", "5734") ~ 1,
      TRUE ~ 0
    )
  )

table(inhosp_icd$icd9_organdysfunction)


# Icd10 codes
# Explicit sepsis
inhosp_icd <- inhosp_icd |>
  mutate(
    icd10_sepsis = case_when(
      icd_version == 10 &
        icd_code %in% c ("R652", "R6520", "R6521") ~ 1,
      TRUE ~ 0
    )
  )

table(inhosp_icd$icd10_sepsis)

# Implicit - Infection
# As ICD-10 codes for infection is too long (830 codes), made a new text.file named icd10_infection
# Import icd10_infection
icd10_angus_infection <- read_csv("/Users/sangbin/Library/Mobile Documents/com~apple~CloudDocs/Penn/ONR/sepsis definition/ITRANSFER_icd10/icd10_angus_infection")

icd10_angus_infection <- as.list(icd10_angus_infection) #change the data.frame into a list

inhosp_icd <- inhosp_icd |>
  mutate(
    icd10_infection = case_when(
      icd_version == 10 &
        icd_code %in% (icd10_angus_infection$V1) ~ 1,
      TRUE ~ 0
    )
  )

table(inhosp_icd$icd10_infection)


# Implicit - Organ Dysfunction
inhosp_icd <- inhosp_icd |>
  mutate(
    icd10_organdysfunction = case_when(
      icd_version == 10 &
        icd_code %in% c("I951", "I9589", "I953", "I952", "I9581", "I959", "R579", "R570", "R6521", "R571", "R578", "D65", "D688", "D689", "D6951", "D6959", "D696", "K7200", "K762", "K763", "F05", "G931", "G9340", "G9341", "G9349", "I6783", "N170", "N171", "N172", "N178", "N179", "J9600", "J9690", "J80", "R0603", "J9610", "J9620", "J984", "R0681", "R092") ~ 1,
      TRUE ~ 0
    )
  )

table(inhosp_icd$icd10_organdysfunction)

# Sepsis cases identified by Angus method
angus <- inhosp_icd |>
  group_by(subject_id, hadm_id) |>
  summarise( ## should be 'summarise' instead of 'mutate'
    icd9_angus = ifelse (any(icd9_infection == 1) & any(icd9_organdysfunction == 1), 1, 0),
    icd10_angus = ifelse (any(icd10_infection == 1) & any(icd10_organdysfunction == 1), 1, 0)
  ) |>
  ungroup()

table(angus$icd9_angus)
table(angus$icd10_angus)


# Join angus with hosp_los_inhosp
inhosp_icd <- inhosp_icd |>
  left_join(angus, by = c("subject_id", "hadm_id"))

# Create a new data.frame for sepsis_cohort
sepsis_cohort <- inhosp_icd |>
  group_by(subject_id, hadm_id) |>
  summarise(
    sepsis = case_when(
      any(icd9_sepsis == 1) | (any(icd9_infection == 1) & any(icd9_organdysfunction == 1)) ~ 1,
      any(icd10_sepsis == 1) | (any(icd10_infection == 1) & any(icd10_organdysfunction == 1)) ~ 1,
      TRUE ~ 0
    )
  ) |>
  ungroup()

table(sepsis_cohort$sepsis) # non-sepsis = 206978; sepsis = 40445
sum(is.na(sepsis_cohort$sepsis)) # no missing values

# join with hosp_los_inhosp table (inhospital stay cohort)
inhosp_sepsis_cohort <- hosp_los_inhosp |>
  left_join(sepsis_cohort, by =c("subject_id", "hadm_id")) 

table(inhosp_sepsis_cohort$sepsis) # sepsis = 40445 in inhospital stays cohort
unique(inhosp_sepsis_cohort$sepsis)
sum(is.na(inhosp_sepsis_cohort$sepsis)) #119 missing values

## investigating missing sepsis values
inhosp_sepsis_cohort |>
  filter(is.na(sepsis))
# when searched their hadm_ids in the original icd table, not found
# hadm_ids that did not have icd codes (thus, excluded)

# Select patients with sepsis (explicit & implicit)
inhosp_sepsis_cohort <- inhosp_sepsis_cohort |>
  filter(sepsis == 1)

table(inhosp_sepsis_cohort$sepsis) # confirmed that only patients with sepsis is captured (40445 admissions associated with sepsis inhospitalization)

# dataframe
# sepsis_cohort = sepsis patients
# inhosp_sepsis_cohort = sepsis patients with in hospital stays (hospital los > 2days) (39046 observations)

# variables
# sepsis = explicit + implicit sepsis 
# icd9_angus/icd10_angus = implicit sepsis
# icd9_sepsis/icd10_sepsis = explicit sepsis
```

As I have identified sepsis cohort, now I am going to limit our sample to older adults.

### Older Sepsis Cohort Selection

Although sepsis can impact people of all ages, it has been reported that some groups are more likely to be affected, including older adults. Now, I will filter cases to limit the cohort to older sepsis patients.

```{r}
# Read in the data
patients <- read_csv(file="/Users/sangbin/Library/Mobile Documents/com~apple~CloudDocs/Penn/ONR/MIMIC/mimic-iv-2.2/hosp/patients.csv.gz")

psych::describe(patients$anchor_age)
table(patients$anchor_age)
sum(is.na(patients$anchor_age)) # no missing value

# patients aged 18 years or older
# patients aged over 89 have been grouped together into a single group (anchor_age = 91) (n = 12068)

# Calculate age for each hospital admission event
# We will reference the following repository to guide identify variables by handling the data: https://github.com/MIT-LCP/mimic-iv/blob/master/concepts/demographics/age.sql

# patient's age = hospital admission time - anchor_year + anchor_age

real_age = inner_join(
  select(admissions, subject_id, hadm_id, admittime),
  select(patients, subject_id, anchor_age, anchor_year, gender),
  by = "subject_id"
) |>
  mutate(
    admittime = as.POSIXct(admittime),
    anchor_year = as.POSIXct(paste0(anchor_year, "-01-01 00:00:00")),
    age = as.numeric(difftime(admittime, anchor_year, units = "days")/365) + anchor_age
  ) |>
  select(subject_id, hadm_id, admittime, anchor_age, anchor_year, age, gender)
 
real_age$age <- trunc(real_age$age)

sum(is.na(real_age$age)) #10925 missing values (due to patients without hadm_id)
psych::describe(real_age$age) # age ranges from 18-103

real_age2 <- real_age |>
  select(subject_id, hadm_id, age, gender)

inhosp_older_sepsis <- inhosp_sepsis_cohort |> 
  left_join(real_age2, by = c("subject_id", "hadm_id"))

inhosp_older_sepsis <- inhosp_older_sepsis |>
  mutate(older_adult = ifelse(age < 65, 0, 1)) |>
  mutate(older_adult = factor(older_adult, levels = c(0, 1)))

table(inhosp_older_sepsis$older_adult)

inhosp_older_sepsis <- inhosp_older_sepsis |>
  filter(older_adult == 1)


# dataframe
# older_adults = filtered to patients who are 65 + years 
# inhosp_older_sepsis = filtered by inhosp == 1, sepsis == 1, age >= 65 (24915 admissions)
# age calculated for each hadm_id
```

### Older Sepsis Discharged Home Cohort

Now, I will filter cases to patients who were discharged home without any services and those who were discharged home with home health care.

```{r}

# inhosp older sepsis patients' discharge disposition
inhosp_older_sepsis |>
  select(discharge_location)|>
  tbl_summary() 
# 12% went home; 25% went home with HHC (among all inhosp older sepsis patients)

inhosp_older_sepsis |>
  ggplot(aes(x = discharge_location, fill = gender)) +
  geom_bar() +
  labs(x = "Discharge Location", y = "Count") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

# Select patients who went home without any services or with HHC
inhosp_older_sepsis_home <- inhosp_older_sepsis |>
  filter(discharge_location == "HOME" | discharge_location == "HOME HEALTH CARE")

# Change structure of the variable: character to factor
inhosp_older_sepsis_home$discharge_location <- as.factor(inhosp_older_sepsis_home$discharge_location)
table(inhosp_older_sepsis_home$discharge_location) # 1= HOME; 2 = HOME HEALTH CARE

inhosp_older_sepsis_home |>
  select(discharge_location)|>
  tbl_summary()

inhosp_older_sepsis_home |>
  select(age)|>
  describe()

# 32% went home; 68% went home with HHC (among older sepsis patients with inhospital stays went either home or HHC)

# data frame
# inhosp_older_sepsis2 = joined inhosp_older_sepsis with admissions table
# inhosp_older_sepsis_home = filtered to 'sepsis == 1' & 'age >= 65' & 'discharge_location = "HOME" | discharge_location = "HOME HEALTH CARE"' (9034 admissions)
```

Now, as we have identified our cohort, now I am going to make predictors in a format that I would like to include in a model.

## Manipulating Predictors

### Demographic characteristics

I will collapse categories of several demographic characteristics for analysis.

-   race

```{r}
table(inhosp_older_sepsis_home$race) # total of 33 races
sum(is.na(inhosp_older_sepsis_home$race)) # no missing values

## MAY NEED TO SPLIT UNKNOWN & OTHER ??#####
otherunknown_race <- c("AMERICAN INDIAN/ALASKA NATIVE", "MULTIPLE RACE/ETHNICITY", "NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER", "OTHER", "PATIENT DECLINED TO ANSWER", "PORTUGUESE", "SOUTH AMERICAN", "UNABLE TO OBTAIN", "UNKNOWN")

inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  mutate(race_cate = case_when(
    str_detect(race, "^WHITE") ~ "WHITE",
    str_detect(race, "^BLACK") ~ "BLACK",
    str_detect(race, "^HISPANIC") ~ "HISPANIC",
    str_detect(race, "^ASIAN") ~ "ASIAN",
    race %in% otherunknown_race ~ "OTHER/UNKNOWN"
  ))

# Change to factor
inhosp_older_sepsis_home$race_cate <- factor(inhosp_older_sepsis_home$race_cate,
                                   levels = c("WHITE", "BLACK", "HISPANIC", 
                                              "ASIAN", "OTHER/UNKNOWN")
                                   )
table(inhosp_older_sepsis_home$race_cate)

# Validate code
table(inhosp_older_sepsis_home$race_cate)
sum(is.na(inhosp_older_sepsis_home$race_cate))

# Compare with entire breakdown of race
admissions |>
  select(race) |>
  tbl_summary()
```

-   marital status

```{r}
table(inhosp_older_sepsis_home$marital_status) # Divorced, Married, Single, Widowed, missing value (126)
sum(is.na(inhosp_older_sepsis_home$marital_status)) # no NAs

inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  filter(marital_status != "")

# Change to factor
inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  mutate(marital_status_cate = factor(marital_status,
                            levels = c("MARRIED", "SINGLE", 
                                       "DIVORCED", "WIDOWED")))

# Validate code
table (inhosp_older_sepsis_home$marital_status_cate)
```

-   insurance

```{r}
table(inhosp_older_sepsis_home$insurance) # Medicare, Medicaid, Other
sum(is.na(inhosp_older_sepsis_home$insurance)) # no missing values


# Change to factor
inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  mutate(insurance = factor(insurance,
                            levels = c("Medicare", "Medicaid", "Other")))

# Validate code
table (inhosp_older_sepsis_home$insurance)
```

-   gender

```{r}
table(inhosp_older_sepsis_home$gender) # pretty even distribution
sum(is.na(inhosp_older_sepsis_home$gender)) # no missing values

# Change to factor
inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  mutate(gender = factor(gender,
                            levels = c("M", "F")))

# Validate code
table (inhosp_older_sepsis_home$gender)
```

### Clinical characteristics

-   admission type

```{r}
table(inhosp_older_sepsis_home$admission_type) 
sum(is.na(inhosp_older_sepsis_home$admission_type)) # no missing values

adm_nonemergent <- c("ELECTIVE", "SURGICAL SAME DAY ADMISSION")
adm_emergent <- c("DIRECT EMER.", "DIRECT OBSERVATION", "EU OBSERVATION", "EW EMER.", "OBSERVATION ADMIT", "URGENT")

inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  mutate(admission_type_cate = case_when(
    admission_type %in% adm_nonemergent ~ "Elective",
    admission_type %in% adm_emergent ~ "Emergent"
  ))

table (inhosp_older_sepsis_home$admission_type_cate)
sum(is.na(inhosp_older_sepsis_home$admission_type_cate))

# Change to factor
inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  mutate(admission_type_cate = factor(admission_type_cate,
                            levels = c("Elective", "Emergent")))

# Validate code
table (inhosp_older_sepsis_home$admission_type_cate)
```

-   Hospital length of stay

I have created hospital length of stay variable (hosp_los_fromed) (that is calculated from ED intime for each hospital admission episode) while I was identifying patients who had in-hospital stays compared to those who had observational stays. (variable name = hosp_los)

```{r}
inhosp_older_sepsis_home |>
  select(hosp_los) |>
  describe()
```

-   number of previous hospitalization

Now we are going to make a predictor variable that tells us number of previous hospitalizations in the past 90days.

```{r}

admissions <- admissions |>
  group_by(subject_id) |>
  arrange(subject_id, admittime) |> # make sure the data frame is arrange by admittime before running the below for-loop code
  mutate(prev90d = admittime - days(90)) |>
  ungroup()

sum(is.na(admissions$prev90d)) # confirmed that there is no missing value

admissions <- admissions |>
  group_by(subject_id) |>
  arrange(subject_id, admittime) |>
  mutate(prev90d_hosp = ifelse(is.na(dplyr::lag(dischtime)) | 
                                  dplyr::lag(dischtime) < prev90d, 0, 1)) |>
  mutate(prev90d_hosp = factor(prev90d_hosp, levels = c(0, 1), labels = c(0, 1))) |>
  ungroup()

prev90d_hosp_sum <- integer()
for (i in 1:nrow(admissions)) {
  if(i == 1) # first row coded 0 bc no previous hospitalization is present
    prev90d_hosp_sum[i] <- 0
  else if(i < 21) { # set for 20 because that was the maximum value one was hospitalized within 90 day time frame
    this_patient <- admissions$subject_id[i]
    this_prev90d <- admissions$prev90d[i]
    this_admittime <- admissions$admittime[i]
    
    prev90d_hosp_sum[i] <- admissions |> 
      filter(subject_id == this_patient & 
               dischtime >= this_prev90d & 
               admittime < this_admittime) |> 
      nrow()
  } else{
    this_patient <- admissions$subject_id[i]
    this_prev90d <- admissions$prev90d[i]
    this_admittime <- admissions$admittime[i]
    
    prev90d_hosp_sum[i] <- admissions[(i-20):i,] |> 
      filter(subject_id == this_patient & 
               dischtime >= this_prev90d & 
               admittime < this_admittime) |>
      nrow()
  }
}

admissions$prev90d_hosp_sum <- prev90d_hosp_sum

admissions2 <- admissions |>
  select(subject_id, hadm_id, prev90d, prev90d_hosp, prev90d_hosp_sum)

inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  left_join(admissions2, by = c("subject_id", "hadm_id"))

```

-   ICU history

```{r}
# Make a binary ICU history outcome
icustays <- read_csv(file="/Users/sangbin/Library/Mobile Documents/com~apple~CloudDocs/Penn/ONR/MIMIC/mimic-iv-2.2/icu/icustays.csv.gz")

icustays |>
  summarise(n_distinct(stay_id),
            n_distinct(subject_id))
# Number of ICU admissions 73181 and number of distinct patients 50920
# Confirmed that the number of ICU admissions match with MIMIC-IV data

# icustays file consist of patients who had icu stays
# Check if hadm_id in admissions table is found in icustays dataframe
inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  mutate(
    icu_hx = case_when(
    hadm_id %in% (icustays$hadm_id) ~ 1,
      TRUE ~ 0
    )
  )

# Change to a factor
inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  mutate(icu_hx = factor(icu_hx, levels = c(0, 1)))

table(inhosp_older_sepsis_home$icu_hx)

# variable
# icu_hx = hadm_id with stay_id coded 1; without stay_id coded 0

```

-   Elixhauser Comorbidity Score

    Before making the comorbidity scores, since MIMIC-IV contains both ICD version 9 and 10, I will investigate cases with two versions of ICD codes for an admission episode and whether there are any duplicates.

```{r}
# Check if hospital admission ID can have ICD codes from both versions
test_icd <- icd |>
  group_by(hadm_id) |>
  summarise(unique_icd = n_distinct(icd_version))
table(test_icd$unique_icd)

test_icd |>
  filter(unique_icd == 2)
# There are 10 cases where two versions of ICD codes have been used
# Need to spearate for ICD 9 and ICD 10 codes
```

```{r}
#| eval: FALSE

# Investigate if there are any duplicates between ICD 9 and 10
icd_test <- icd |>
  filter(hadm_id %in% c("20216016", "21575927", "22870827", "23076003", "23969809", "24773199", "27016754", "27635276", "28333632", "29918558"))

# read in the icd_dictionary
d_icd <- read.csv(file="/Users/sangbin/Library/Mobile Documents/com~apple~CloudDocs/Penn/ONR/MIMIC/mimic-iv-2.2/hosp/d_icd_diagnoses 3.csv")

icd_test_dict <- icd_test |>
  left_join(d_icd, by = c("icd_version", "icd_code"))

icd_test_dict |> head(20)
# there are some overlap between versions, but not necessarily exactly same
# and their length of hosp los was not that long either
# thus, decided to exclude 10 cases
# although, some of cases had sepsis a diagnosis, they were not included in inhosp_older_sepsis_home cohort
```

```{r}
# Exclude 10 cases that have two ICD versions for one hadm_id
icd_uniquev <- icd |>
  filter(!hadm_id %in% c("20216016", "21575927", "22870827", "23076003", "23969809", "24773199", "27016754", "27635276", "28333632", "29918558"))

# Manipulate the ICD dataset to put all ICD codes for each hospital admission episode into a single row
test_icd1 <- icd_uniquev |>
  group_by(hadm_id) |>
  filter(all(icd_version == 9)) |> # only selected hadm_ids with icd9 codes
   summarise(
    icd9_code = paste(case_when(
      icd_version == 9 ~ as.character(icd_code)),
      collapse = ", "))

test_icd2 <- icd_uniquev |>
  group_by(hadm_id) |>
  filter(all(icd_version == 10)) |> # only selected hadm_ids with icd10 codes
   summarise(
    icd10_code = paste(case_when(
      icd_version == 10 ~ as.character(icd_code)),
      collapse = ", "))

# Create a dataframe with the Elixhauser comorbidity scores
icd9_comorbidity <- comorbidity::comorbidity(x= test_icd1, id = "hadm_id", code = "icd9_code", map = "elixhauser_icd9_quan", assign0 = FALSE)
icd9_comorbidity$elixhauser9 <- score(x = icd9_comorbidity, weights = "vw", 
                                       assign0 = FALSE)

icd10_comorbidity <- comorbidity::comorbidity(x= test_icd2, id = "hadm_id", code = "icd10_code", map = "elixhauser_icd10_quan", assign0 = FALSE)
icd10_comorbidity$elixhauser10 <- score(x = icd10_comorbidity, weights = "vw", 
                                         assign0 = FALSE)

table(icd9_comorbidity$elixhauser9)
table(icd10_comorbidity$elixhauser10)

# Changing the variable for elixhausesr score into a same name to combine two dataframes together
icd9_comorbidity <- icd9_comorbidity |>
  rename(comorbidity = elixhauser9) |>
  select(hadm_id, comorbidity)

icd10_comorbidity <- icd10_comorbidity |>
  rename(comorbidity = elixhauser10) |>
  select( hadm_id, comorbidity)

# Combine two dataframes 
comorbidities <- bind_rows(icd9_comorbidity, icd10_comorbidity) #430842 observations
# icd9_comorbidity: 276793
# icd10_comorbidity: 154049
# comorbidities: combined the two (276793 + 154049 = 430842)
# successfully combined

# Join with our cohort
inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  left_join(comorbidities, by = "hadm_id") |>
  arrange(subject_id, admittime)
# 8908 admissions

table(inhosp_older_sepsis_home$comorbidity)

# variable
# comorbidity = elixhauser comorbidity scores based on their icd code versions

```

## Outcome

```{r}
# 30day rehospitalization & 60day rehospitalization

admissions <- admissions |>
  arrange(subject_id, admittime) |>
  group_by(subject_id) |>
  mutate(nextadm30d = dischtime + days(30)) |>
  mutate(rehosp30d = ifelse(is.na(dplyr::lead(admittime)) |
                              dplyr::lead(admittime) > nextadm30d, 0, 1)) |>
  mutate(nextadm60d = dischtime + days(60)) |>
  mutate(rehosp60d = ifelse(is.na(dplyr::lead(admittime)) |
                              dplyr::lead(admittime) > nextadm60d, 0, 1)) |>
  mutate(rehosp30d = factor(rehosp30d, levels = c(0, 1))) |>
  mutate(rehosp60d = factor(rehosp60d, levels = c(0, 1))) |>
  ungroup()

admissions |> # validate code
  select(subject_id, hadm_id, admittime, nextadm30d, rehosp30d, nextadm60d, rehosp60d)

rehosp_adm <- admissions |>
  select (subject_id, hadm_id, nextadm30d, rehosp30d, nextadm60d, rehosp60d)

inhosp_older_sepsis_home <- inhosp_older_sepsis_home |>
  left_join(rehosp_adm, by = c("subject_id", "hadm_id"))


table(inhosp_older_sepsis_home$rehosp30d) # 2465 admissions had 30day readmission (27.7%)
table(inhosp_older_sepsis_home$rehosp60d) # 3283 admissions had 60day readmission (36.9%)

test <- inhosp_older_sepsis_home|>
  arrange(subject_id, admittime) |>
  group_by(subject_id) |> 
  filter(row_number() == 1)

table(test$rehosp30d) # 1598 admissions had rehosp30day from their first admission
table(test$rehosp60d) # 2137 admissions had rehosp60day from their first admission
```

As I have identified the cohort and made all of the variables I need for analysis, I will save the file.

```{r}
write_csv(inhosp_older_sepsis_home, "/Users/sangbin/Library/Mobile Documents/com~apple~CloudDocs/Penn/ONR/inhosp_older_sepsis_home_FINAL.csv")
```

# Results

## Descriptive Analysis

First, we will identify how many were discharged to Home & HHC, respectively.

```{r}
inhosp_older_sepsis_home |>
  select(discharge_location) |>
  tbl_summary()
```

Now, we will identify baseline characteristics of included hospital admissions.

### Baseline demographic characteristics

```{r}
# Demo characteristics of the first admission (Baseline)
inhosp_older_sepsis_home |>
  arrange(subject_id, admittime) |>
  group_by(subject_id) |>
  filter(row_number() == 1) |> # limit to baseline 
  group_by(discharge_location) |>
  select(gender, age, race_cate, insurance, marital_status, discharge_location) |>
  furniture::table1("Self-Identified Gender" = gender,
                    "Age" = age,
                    "Marital Status" = marital_status,
                    "Self-Identified Race" = race_cate,
                    "Health Insurance" = insurance,
                    caption = "Demographic Characteristics",
                    FUN = NULL, # report mean(sd) for numeric data
                    NAkeep = TRUE,
                    na.rm = FALSE,
                    total = TRUE,
                    test = TRUE
                    )
```

Baseline demographic characteristics (gender, age, marital status, and insurance) showed statistically significant difference between home vs HHC, except for race. Patients discharged home with HHC were less male, older, less married (but more widowed), and more Medicare-insured compared to patients discharged home without any services.

### Baseline clinical characteristics

```{r}
# Clinical characteristics of the first admission (Baseline)
inhosp_older_sepsis_home |>
  arrange(subject_id, admittime) |>
  group_by(subject_id) |>
  filter(row_number() == 1) |> # limit to baseline 
  group_by(discharge_location) |>
  select(admission_type_cate, discharge_location, comorbidity, hosp_los, prev90d_hosp_sum, 
         icu_hx, rehosp30d) |>
  furniture::table1("Admission Type" = admission_type_cate,
                    "Elixhauser Comorbidity Scores" = comorbidity,
                    "Hospital LOS (days)" = hosp_los,
                    "Number of Previous Hospitalizations Within 90 Days" = prev90d_hosp_sum,
                    "ICU history" = icu_hx,
                    "Hospital Readmission Within 30 Days" = rehosp30d,
                    caption = "Clinical Characteristics",
                    FUN = NULL, # report mean(sd) for numeric data
                    NAkeep = TRUE,
                    total = TRUE,
                    test = TRUE
                    )
```

Baseline clinical characteristics of patients were all significant (Elixhauser comorbidity scores, hospital LOS, number of previous hospitalizations within 90 days, ICU history, 30 day readmission) except for admission type. Patients who were discharged home with HHC had higher Elixhauser comorbidity scores (proxy for illness severity), longer hospital LOS, more number of previous hospitalizations within 90 days, more ICU history, and less likely to be readmitted within 30 days compared to patients who were discharged home without any services.

Here, I am going to examine the number of hospitalization for each subject_id and its distribution.

```{r}
# How many hospitalizations did the our cohort had within 2008 - 2019 time frame
df <- inhosp_older_sepsis_home |>
  group_by(subject_id) |>
  summarize(n_admission = n()) |>
  arrange(desc(n_admission))

ggplot(df, aes(x = n_admission)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(title = "Histogram of Number of Admissions", x = "Number of Admissions", y = "Frequency")

df |>
  janitor::tabyl(n_admission) |>
  arrange(desc(n_admission))
```

From the distribution, we can see that 80% of admission episodes had a single hospitalization, while 20% had multiple hospitalizations ranging from 2 to 15 times.

## GEE Logistic Regression

As an explanatory purposes, I will include all of the predictors into the model. I will use exchangeable correlation structure, which assumes that the observations within subject are equally correlated.

```{r}
gee_model1 <- gee(rehosp30d ~ gender + age + race_cate + insurance + 
                    marital_status+ discharge_location + admission_type_cate + 
                    hosp_los + prev90d_hosp_sum + icu_hx,
                data = inhosp_older_sepsis_home,
                id = subject_id, # the clustering variable
                family = binomial(link= "logit"),
                corstr = "exchangeable")

summary(gee_model1)
```

-   Raw Estimates

```{r}
texreg::knitreg(list(gee_model1),
                custom.model.names = "GEE_Exchangeable Model",
                caption = "Estimates on Logit Scale",
                file = "GEE_coefficients_FINAL.doc",
                single.row = TRUE,
                digits = 4)
```

-   Exponentiate the Estimates (Odds Ratio Scale)

```{r}
# Helper <extract> functions forr exponentiation of parameters from regression models

remotes::install_github("sarbearschwartz/texreghelpr")
library(texreghelpr)
```

```{r}
texreg::knitreg(list(extract_gee_exp(gee_model1)),
                custom.model.namess = "GEE_Exchangeable Model",
                caption = "Estimates on Odds-Ratio Scale",
                file = "GEE_OR_FINAL.doc",
                single.row = TRUE,
                ci.test = 1,
                digits = 3)
```

-   Estimates on both logit and odds-ratio scale

This is the final results of the GEE logistic regression model.

```{r}
texreg::knitreg(list(gee_model1, 
                     texreghelpr::extract_gee_exp(gee_model1,
                                                  include.any = FALSE)),
                custom.model.names = c("b (SE)", 
                                       "OR [95% CI]"),
                file = "GEE_RESULTS_FINAL.doc",
                caption = "GEE Exchangable Model",
                ci.test = 1,
                single.row = TRUE,
                digits = 3)
```

![](images/Screenshot%202023-12-06%20at%208.16.24%20AM.png)

# Results

A total of 8908 admissions (older sepsis survivors with inhospital stays) were included in the final analysis. Among our final sample, 6,053 (68%) admissions went to HHC and 2,855 (32%) admissions went home without any services. Most of baseline characteristics of patients between two groups were significantly different. Patients discharged home with HHC were less male (51.3% vs 56.5; p \< .001), older (77.6 vs 74.6; p \< .001), less married (but more widowed) (52.1 vs 57.8%; p \< .001), and more Medicare-insured (65.2% vs 63.1%; p\< .001) compared to patients discharged home without any services. Also, patients who were discharged home with HHC had higher Elixhauser comorbidity scores (proxy for illness severity) (1.3 vs 1.0; p \< .001), longer hospital LOS (8.8 vs 6.6; p \< .001), more number of previous hospitalizations within 90 days (0.5 vs 0.3; p \< .001), more ICU history (34.7% vs 25.4%; p \< .001), and more likely to be readmitted within 30 days (25.3% vs 21.7%; p \<.001) compared to patients who were discharged home without any services. This implies that there are significant difference between groups who went home with HHC and home without any services, understandably since patient who requires additional services and have care needs will be discharged with HHC rather than discharged home without any services.

In bivariate GEE model, the odds of experiencing 30-day hospital readmission were 1.1% (OR 0.989; 95% CI 0.983-0.996; p \< .01) lower for older admissions, 24.3% (OR 0.757; 95% CI 0.596-0.963; p \<. 01) lower for race who were categorized as other/unknown compared to the Whites, 14.8% (OR 1.148 95% CI 1.029-1.281; p \< .01) increase in HHC compared to non-HHC, 2.1% (OR 1.021; 95% CI 1.013-1.029; p \< .01) increase for amdissions with longer hospital LOS, 46.7% (OR 1.467; 95% CI 1.400-1.538; p \< .01) more number of previous readmissions within 90 days, 15.8% (OR 0.842; 95% CI 0.752-0.942; p \< .01) decrease for admissions with ICU history when controlled for all other variables included in the model. This model was built using social and clinical factors based on previous literature and included all variables that were selected a priori. Among the 10 variables included in the GEE model, 6 variables showed statistical significance. There are a few interesting findings that needs further investigation, such age an older age had 1.1% decrease in odds for 30-day readmission, which might be because those population might have died thus not readmitted. Also, admissions who were discharged with HHC showed 14.8% increase in odds for 30-day readmission, which might be due to their severe baseline conditions that were demonstrated in our baseline clinical characteristics table. Lastly, admissions that had an ICU history showed 15.8% decrease in odds for 30-day readmission, which could be due to recievement of timely and intensive care. Further study is needed to understand what might have decreased their 30-day readmission.

# Conclusion

The findings of this study suggest that age, race, discharge disposition, hospital LOS, number of readmission within 90days, and ICU history are significantly associatedd with 30-day readmission. Although, we need to further investigate on why this might have happened, these findings can serve as a basis for supporting evidence-based recommendations when discharge planning.

Strength of the study include: (1) decent sample size with longitudinal data captured, (2) findings may serve as a basis for supporting evidence-based recommendations for those who are involved in decision-making for discharge decisions (home vs home with HHC) and facilitate safe hospital-to-home transitions. Limitation of the study includes (1) sample is from one hospital which might not be applicable to other sites, (2) rehospitalization data may not be captured if patients were admitted to a different hospital instead of BIDMC, (3) number of previous hospitalizations and 30-day rehospitalization may not be captured if the event occurred outside of 2008.1.1. \~2019.12.31 time frame, (4) due to deidentification process and compliant to HIPAA, patients age over 89 at the first admission were grouped as one and 91 was assigned for their age, so their age at subsequent admissions were calculated based on 91 (which is not an accurate age).

Future studies may extract data from the notes module (provided by MIMIC), to have better understanding of patient's functional status or other related information that would impact their discharge decisions.

# References

Jones TK, Fuchs BD, Small DS, et al. Post-Acute Care Use and Hospital Readmission after Sepsis. Ann Am Thorac Soc. 2015;12(6):904-913. doi:10.1513/AnnalsATS.201411-504OC

Meyer N, Harhay MO, Small DS, et al. Temporal Trends in Incidence, Sepsis-Related Mortality, and Hospital-Based Acute Care After Sepsis: Crit Care Med. 2018;46(3):354-360. doi:10.1097/CCM.0000000000002872

Lee JT, Mikkelsen ME, Qi M, Werner RM. Trends in Post-Acute Care Use after Admissions for Sepsis. Ann Am Thorac Soc. 2020;17(1):118-121. doi:10.1513/AnnalsATS.201905-368RL

Angus DC, Linde-Zwirble WT, Lidicker J, Clermont G, Carcillo J, Pinsky MR. Epidemiology of severe sepsis in the United States: Analysis of incidence, outcome, and associated costs of care: Crit Care Med. 2001;29(7):1303-1310. doi:10.1097/00003246-200107000-00002

Fleischmann-Struzek C, Thomas-Rüddel DO, Schettler A, et al. Comparing the validity of different ICD coding abstraction strategies for sepsis case identification in German claims data. Mansur A, ed. PLOS ONE. 2018;13(7):e0198847. doi:10.1371/journal.pone.0198847 Iwashyna TJ, Odden A, Rohde J, et al. Identifying Patients With Severe Sepsis Using Administrative Claims: Patient-Level Validation of the Angus Implementation of the International Consensus Conference Definition of Severe Sepsis. Med Care. 2014;52(6):e39-e43. doi:10.1097/MLR.0b013e318268ac86
